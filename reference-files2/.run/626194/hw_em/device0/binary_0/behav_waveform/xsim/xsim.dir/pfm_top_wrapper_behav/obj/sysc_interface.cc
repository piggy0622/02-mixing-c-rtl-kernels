#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1779);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6134440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6134664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6134720);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6134776);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6135056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6135112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6135168);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6135224);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(6135448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(6135504);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(6135560);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(6135672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(6135728);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(6135784);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(6136008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(6136064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(6136120);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(6136176);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(6136456);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1780);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6136840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6137064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6137120);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6137176);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6137456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6137512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6137568);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6137624);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(6137736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(6137792);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(6137848);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(6137960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(6138016);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(6138072);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(6138296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(6138352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(6138408);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(6138464);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(6138744);
        sc_inst_3 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1821);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6174616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6174840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6174896);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6174952);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6175232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6175288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6175344);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6175400);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(6175624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(6175680);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(6175736);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(6175848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(6175904);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(6175960);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(6176184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(6176240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(6176296);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(6176352);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(6176632);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1822);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6177016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6177240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6177296);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6177352);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6177632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6177688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6177744);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6177800);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(6177912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(6177968);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(6178024);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(6178136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(6178192);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(6178248);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(6178472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(6178528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(6178584);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(6178640);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(6178920);
        sc_inst_5 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1863);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6214792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6215016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6215072);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6215128);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6215408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6215464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6215520);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6215576);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(6215800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(6215856);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(6215912);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(6216024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(6216080);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(6216136);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(6216360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(6216416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(6216472);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(6216528);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(6216808);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1864);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(6217192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(6217416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(6217472);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(6217528);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(6217808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(6217864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(6217920);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(6217976);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(6218088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(6218144);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(6218200);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(6218312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(6218368);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(6218424);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(6218648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(6218704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(6218760);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(6218816);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(6219096);
        sc_inst_7 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1905);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(6254968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(6255192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(6255248);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(6255304);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(6255584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(6255640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(6255696);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(6255752);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(6255976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(6256032);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(6256088);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(6256200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(6256256);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(6256312);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(6256536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(6256592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(6256648);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(6256704);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(6256984);
        sc_inst_8 = new pfm_dynamic_m03_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(1906);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(6257368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(6257592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(6257648);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(6257704);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(6257984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(6258040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(6258096);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(6258152);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(6258264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(6258320);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(6258376);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(6258488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(6258544);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(6258600);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(6258824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(6258880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(6258936);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(6258992);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(6259272);
        sc_inst_9 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(1947);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(6295144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(6295368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(6295424);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(6295480);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(6295760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(6295816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(6295872);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(6295928);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(6296152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(6296208);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(6296264);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(6296376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(6296432);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(6296488);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(6296712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(6296768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(6296824);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(6296880);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(6297160);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(1948);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(6297544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(6297768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(6297824);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(6297880);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(6298160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(6298216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(6298272);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(6298328);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(6298440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(6298496);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(6298552);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(6298664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(6298720);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(6298776);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(6299000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(6299056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(6299112);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(6299168);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(6299448);
        sc_inst_11 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_11->xsim_set_dbg_index(1989);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(6323088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(6323312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(6323368);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(6323424);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(6323704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(6323760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(6323816);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(6323872);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(6323984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(6324040);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(6324096);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(6324208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(6324264);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(6324320);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(6324544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(6324600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(6324656);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(6324712);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(6324992);
        sc_inst_12 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_12->xsim_set_dbg_index(702);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(6325376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(6325600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(6325656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(6325712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(6325992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(6326048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(6326104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(6326160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(6326272);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(6326328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(6326384);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(6326496);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_12_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(6326552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(6326608);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(6326832);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(6326888);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(6326944);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(6327000);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(6327280);
        sc_inst_13 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_13->xsim_set_dbg_index(313);
        xsim_sc_channel<0, bool > *p_13_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_clk.bind(*p_13_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_13_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_aresetn.bind(*p_13_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_aresetn.bind(*p_13_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_aresetn);
        xsim_sc_channel<0, bool > *p_13_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_clk.bind(*p_13_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_clk);
        xsim_sc_channel<0, bool > *p_13_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_aresetn.bind(*p_13_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready0.bind(*p_13_trace_tready0);
        p_13_trace_tready0->set_sv_netview_offsetfromdp(6327720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata0.bind(*p_13_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata0);
        xsim_sc_channel<0, bool > *p_13_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast0.bind(*p_13_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid0.bind(*p_13_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest0.bind(*p_13_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest0);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid0.bind(*p_13_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_13_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready1.bind(*p_13_trace_tready1);
        p_13_trace_tready1->set_sv_netview_offsetfromdp(6328056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata1.bind(*p_13_trace_tdata1);
        p_13_trace_tdata1->set_sv_netview_offsetfromdp(6328112);
        xsim_sc_channel<0, bool > *p_13_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast1.bind(*p_13_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid1.bind(*p_13_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest1.bind(*p_13_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest1);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid1.bind(*p_13_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata2.bind(*p_13_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata2);
        xsim_sc_channel<0, bool > *p_13_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready2.bind(*p_13_trace_tready2);
        p_13_trace_tready2->set_sv_netview_offsetfromdp(6328448);
        xsim_sc_channel<0, bool > *p_13_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast2.bind(*p_13_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid2.bind(*p_13_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest2.bind(*p_13_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest2);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid2.bind(*p_13_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata3.bind(*p_13_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata3);
        xsim_sc_channel<0, bool > *p_13_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready3.bind(*p_13_trace_tready3);
        p_13_trace_tready3->set_sv_netview_offsetfromdp(6328784);
        xsim_sc_channel<0, bool > *p_13_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast3.bind(*p_13_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid3.bind(*p_13_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest3.bind(*p_13_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest3);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid3.bind(*p_13_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata4.bind(*p_13_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata4);
        xsim_sc_channel<0, bool > *p_13_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready4.bind(*p_13_trace_tready4);
        p_13_trace_tready4->set_sv_netview_offsetfromdp(6329120);
        xsim_sc_channel<0, bool > *p_13_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast4.bind(*p_13_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid4.bind(*p_13_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest4.bind(*p_13_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest4);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid4.bind(*p_13_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata5.bind(*p_13_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata5);
        xsim_sc_channel<0, bool > *p_13_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready5.bind(*p_13_trace_tready5);
        p_13_trace_tready5->set_sv_netview_offsetfromdp(6329456);
        xsim_sc_channel<0, bool > *p_13_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast5.bind(*p_13_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid5.bind(*p_13_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest5.bind(*p_13_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest5);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid5.bind(*p_13_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(6329848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(6330072);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(6330128);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(6330240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(6330408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(6330464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(6330520);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(6330576);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_awaddr.bind(*p_13_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awvalid.bind(*p_13_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awready.bind(*p_13_s_axihub_awready);
        p_13_s_axihub_awready->set_sv_netview_offsetfromdp(6330800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_wdata.bind(*p_13_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axihub_wstrb.bind(*p_13_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wvalid.bind(*p_13_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wready.bind(*p_13_s_axihub_wready);
        p_13_s_axihub_wready->set_sv_netview_offsetfromdp(6331024);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bvalid.bind(*p_13_s_axihub_bvalid);
        p_13_s_axihub_bvalid->set_sv_netview_offsetfromdp(6331080);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bready.bind(*p_13_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_bresp.bind(*p_13_s_axihub_bresp);
        p_13_s_axihub_bresp->set_sv_netview_offsetfromdp(6331192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_araddr.bind(*p_13_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arvalid.bind(*p_13_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arready.bind(*p_13_s_axihub_arready);
        p_13_s_axihub_arready->set_sv_netview_offsetfromdp(6331360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_rdata.bind(*p_13_s_axihub_rdata);
        p_13_s_axihub_rdata->set_sv_netview_offsetfromdp(6331416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_rresp.bind(*p_13_s_axihub_rresp);
        p_13_s_axihub_rresp->set_sv_netview_offsetfromdp(6331472);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rvalid.bind(*p_13_s_axihub_rvalid);
        p_13_s_axihub_rvalid->set_sv_netview_offsetfromdp(6331528);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rready.bind(*p_13_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_awaddr.bind(*p_13_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awvalid.bind(*p_13_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awready.bind(*p_13_s_aximm_awready);
        p_13_s_aximm_awready->set_sv_netview_offsetfromdp(6331752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_awlen.bind(*p_13_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_awsize.bind(*p_13_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_awburst.bind(*p_13_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_awid.bind(*p_13_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_wdata.bind(*p_13_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_wstrb.bind(*p_13_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wvalid.bind(*p_13_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wready.bind(*p_13_s_aximm_wready);
        p_13_s_aximm_wready->set_sv_netview_offsetfromdp(6332200);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bvalid.bind(*p_13_s_aximm_bvalid);
        p_13_s_aximm_bvalid->set_sv_netview_offsetfromdp(6332256);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bready.bind(*p_13_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wlast.bind(*p_13_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rlast.bind(*p_13_s_aximm_rlast);
        p_13_s_aximm_rlast->set_sv_netview_offsetfromdp(6332424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_bresp.bind(*p_13_s_aximm_bresp);
        p_13_s_aximm_bresp->set_sv_netview_offsetfromdp(6332480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_bid.bind(*p_13_s_aximm_bid);
        p_13_s_aximm_bid->set_sv_netview_offsetfromdp(6332536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_araddr.bind(*p_13_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arvalid.bind(*p_13_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arready.bind(*p_13_s_aximm_arready);
        p_13_s_aximm_arready->set_sv_netview_offsetfromdp(6332704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_arlen.bind(*p_13_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_arsize.bind(*p_13_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_arburst.bind(*p_13_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_arid.bind(*p_13_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_rdata.bind(*p_13_s_aximm_rdata);
        p_13_s_aximm_rdata->set_sv_netview_offsetfromdp(6332984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_rid.bind(*p_13_s_aximm_rid);
        p_13_s_aximm_rid->set_sv_netview_offsetfromdp(6333040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_rresp.bind(*p_13_s_aximm_rresp);
        p_13_s_aximm_rresp->set_sv_netview_offsetfromdp(6333096);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rvalid.bind(*p_13_s_aximm_rvalid);
        p_13_s_aximm_rvalid->set_sv_netview_offsetfromdp(6333152);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rready.bind(*p_13_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_rready);
        sc_inst_14 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_14->xsim_set_dbg_index(314);
        xsim_sc_channel<0, bool > *p_14_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_clk.bind(*p_14_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_clk);
        xsim_sc_channel<0, bool > *p_14_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_resetn.bind(*p_14_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_resetn);
        xsim_sc_channel<0, bool > *p_14_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_clk.bind(*p_14_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_clk);
        xsim_sc_channel<0, bool > *p_14_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_rst.bind(*p_14_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(6333648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(6333872);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(6333928);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(6334040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(6334208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(6334264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(6334320);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(6334376);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<0, bool > *p_14_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWVALID.bind(*p_14_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_14_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWREADY.bind(*p_14_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->mon_AWADDR.bind(*p_14_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->mon_AWID.bind(*p_14_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->mon_AWLEN.bind(*p_14_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->mon_AWSIZE.bind(*p_14_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_AWBURST.bind(*p_14_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_14_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WVALID.bind(*p_14_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WVALID);
        xsim_sc_channel<0, bool > *p_14_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WREADY.bind(*p_14_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_WDATA.bind(*p_14_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->mon_WSTRB.bind(*p_14_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_14_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WLAST.bind(*p_14_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WLAST);
        xsim_sc_channel<0, bool > *p_14_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARVALID.bind(*p_14_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_14_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARREADY.bind(*p_14_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->mon_ARADDR.bind(*p_14_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->mon_ARID.bind(*p_14_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->mon_ARLEN.bind(*p_14_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->mon_ARSIZE.bind(*p_14_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_ARBURST.bind(*p_14_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_14_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RVALID.bind(*p_14_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RVALID);
        xsim_sc_channel<0, bool > *p_14_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RREADY.bind(*p_14_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_RDATA.bind(*p_14_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RDATA);
        xsim_sc_channel<0, bool > *p_14_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RLAST.bind(*p_14_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->mon_RID.bind(*p_14_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_RRESP.bind(*p_14_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RRESP);
        xsim_sc_channel<0, bool > *p_14_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BVALID.bind(*p_14_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BVALID);
        xsim_sc_channel<0, bool > *p_14_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BREADY.bind(*p_14_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_BRESP.bind(*p_14_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->mon_BID.bind(*p_14_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BID);
        xsim_sc_channel<0, bool > *p_14_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_rd_tready.bind(*p_14_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_rd_tdata.bind(*p_14_m_axis_rd_tdata);
        p_14_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6336168);
        xsim_sc_channel<0, bool > *p_14_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_rd_tlast.bind(*p_14_m_axis_rd_tlast);
        p_14_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6336224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_rd_tid.bind(*p_14_m_axis_rd_tid);
        p_14_m_axis_rd_tid->set_sv_netview_offsetfromdp(6336280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_rd_tdest.bind(*p_14_m_axis_rd_tdest);
        p_14_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6336336);
        xsim_sc_channel<0, bool > *p_14_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_wr_tready.bind(*p_14_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_wr_tdata.bind(*p_14_m_axis_wr_tdata);
        p_14_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6336448);
        xsim_sc_channel<0, bool > *p_14_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_wr_tlast.bind(*p_14_m_axis_wr_tlast);
        p_14_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6336504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_wr_tid.bind(*p_14_m_axis_wr_tid);
        p_14_m_axis_wr_tid->set_sv_netview_offsetfromdp(6336560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_wr_tdest.bind(*p_14_m_axis_wr_tdest);
        p_14_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6336616);
        xsim_sc_channel<0, bool > *p_14_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_wr_tvalid.bind(*p_14_m_axis_wr_tvalid);
        p_14_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6336672);
        xsim_sc_channel<0, bool > *p_14_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_rd_tvalid.bind(*p_14_m_axis_rd_tvalid);
        p_14_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6336728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr_mon.bind(*p_14_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot_mon.bind(*p_14_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid_mon.bind(*p_14_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready_mon.bind(*p_14_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata_mon.bind(*p_14_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb_mon.bind(*p_14_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid_mon.bind(*p_14_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready_mon.bind(*p_14_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp_mon.bind(*p_14_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid_mon.bind(*p_14_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready_mon.bind(*p_14_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr_mon.bind(*p_14_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot_mon.bind(*p_14_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid_mon.bind(*p_14_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready_mon.bind(*p_14_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata_mon.bind(*p_14_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp_mon.bind(*p_14_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid_mon.bind(*p_14_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready_mon.bind(*p_14_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready_mon);
        sc_inst_15 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_15->xsim_set_dbg_index(315);
        xsim_sc_channel<0, bool > *p_15_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_clk.bind(*p_15_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_clk);
        xsim_sc_channel<0, bool > *p_15_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_resetn.bind(*p_15_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_resetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_rst.bind(*p_15_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(6338232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(6338456);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(6338512);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(6338624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(6338792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(6338848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(6338904);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(6338960);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWVALID.bind(*p_15_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_15_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWREADY.bind(*p_15_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_AWADDR.bind(*p_15_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_AWID.bind(*p_15_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_AWLEN.bind(*p_15_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_AWSIZE.bind(*p_15_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_AWBURST.bind(*p_15_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_15_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WVALID.bind(*p_15_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WVALID);
        xsim_sc_channel<0, bool > *p_15_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WREADY.bind(*p_15_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->mon_WDATA.bind(*p_15_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->mon_WSTRB.bind(*p_15_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_15_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WLAST.bind(*p_15_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WLAST);
        xsim_sc_channel<0, bool > *p_15_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARVALID.bind(*p_15_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_15_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARREADY.bind(*p_15_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_ARADDR.bind(*p_15_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_ARID.bind(*p_15_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_ARLEN.bind(*p_15_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_ARSIZE.bind(*p_15_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_ARBURST.bind(*p_15_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_15_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RVALID.bind(*p_15_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RVALID);
        xsim_sc_channel<0, bool > *p_15_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RREADY.bind(*p_15_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->mon_RDATA.bind(*p_15_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RDATA);
        xsim_sc_channel<0, bool > *p_15_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RLAST.bind(*p_15_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_RID.bind(*p_15_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_RRESP.bind(*p_15_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RRESP);
        xsim_sc_channel<0, bool > *p_15_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BVALID.bind(*p_15_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BVALID);
        xsim_sc_channel<0, bool > *p_15_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BREADY.bind(*p_15_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_BRESP.bind(*p_15_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_BID.bind(*p_15_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BID);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tready.bind(*p_15_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_rd_tdata.bind(*p_15_m_axis_rd_tdata);
        p_15_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6340752);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tlast.bind(*p_15_m_axis_rd_tlast);
        p_15_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6340808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tid.bind(*p_15_m_axis_rd_tid);
        p_15_m_axis_rd_tid->set_sv_netview_offsetfromdp(6340864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tdest.bind(*p_15_m_axis_rd_tdest);
        p_15_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6340920);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tready.bind(*p_15_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_wr_tdata.bind(*p_15_m_axis_wr_tdata);
        p_15_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6341032);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tlast.bind(*p_15_m_axis_wr_tlast);
        p_15_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6341088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tid.bind(*p_15_m_axis_wr_tid);
        p_15_m_axis_wr_tid->set_sv_netview_offsetfromdp(6341144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tdest.bind(*p_15_m_axis_wr_tdest);
        p_15_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6341200);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tvalid.bind(*p_15_m_axis_wr_tvalid);
        p_15_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6341256);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tvalid.bind(*p_15_m_axis_rd_tvalid);
        p_15_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6341312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr_mon.bind(*p_15_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot_mon.bind(*p_15_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid_mon.bind(*p_15_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready_mon.bind(*p_15_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata_mon.bind(*p_15_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb_mon.bind(*p_15_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid_mon.bind(*p_15_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready_mon.bind(*p_15_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp_mon.bind(*p_15_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid_mon.bind(*p_15_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready_mon.bind(*p_15_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr_mon.bind(*p_15_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot_mon.bind(*p_15_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid_mon.bind(*p_15_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready_mon.bind(*p_15_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata_mon.bind(*p_15_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp_mon.bind(*p_15_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid_mon.bind(*p_15_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready_mon.bind(*p_15_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready_mon);
        sc_inst_16 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_16->xsim_set_dbg_index(316);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(6342816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(6343040);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(6343096);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(6343208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(6343376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(6343432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(6343488);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(6343544);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_AWID.bind(*p_16_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_AWLEN.bind(*p_16_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_AWSIZE.bind(*p_16_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_AWBURST.bind(*p_16_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WLAST.bind(*p_16_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WLAST);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_ARID.bind(*p_16_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_ARLEN.bind(*p_16_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_ARSIZE.bind(*p_16_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_ARBURST.bind(*p_16_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<0, bool > *p_16_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RLAST.bind(*p_16_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_RID.bind(*p_16_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_BID.bind(*p_16_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BID);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tready.bind(*p_16_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_rd_tdata.bind(*p_16_m_axis_rd_tdata);
        p_16_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6345336);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tlast.bind(*p_16_m_axis_rd_tlast);
        p_16_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6345392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tid.bind(*p_16_m_axis_rd_tid);
        p_16_m_axis_rd_tid->set_sv_netview_offsetfromdp(6345448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tdest.bind(*p_16_m_axis_rd_tdest);
        p_16_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6345504);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tready.bind(*p_16_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_wr_tdata.bind(*p_16_m_axis_wr_tdata);
        p_16_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6345616);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tlast.bind(*p_16_m_axis_wr_tlast);
        p_16_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6345672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tid.bind(*p_16_m_axis_wr_tid);
        p_16_m_axis_wr_tid->set_sv_netview_offsetfromdp(6345728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tdest.bind(*p_16_m_axis_wr_tdest);
        p_16_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6345784);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tvalid.bind(*p_16_m_axis_wr_tvalid);
        p_16_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6345840);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tvalid.bind(*p_16_m_axis_rd_tvalid);
        p_16_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6345896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr_mon.bind(*p_16_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot_mon.bind(*p_16_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid_mon.bind(*p_16_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready_mon.bind(*p_16_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata_mon.bind(*p_16_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb_mon.bind(*p_16_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid_mon.bind(*p_16_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready_mon.bind(*p_16_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp_mon.bind(*p_16_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid_mon.bind(*p_16_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready_mon.bind(*p_16_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr_mon.bind(*p_16_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot_mon.bind(*p_16_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid_mon.bind(*p_16_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready_mon.bind(*p_16_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata_mon.bind(*p_16_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp_mon.bind(*p_16_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid_mon.bind(*p_16_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready_mon.bind(*p_16_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready_mon);
        sc_inst_17 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_17->xsim_set_dbg_index(834);
        sc_inst_18 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_18->xsim_set_dbg_index(835);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_0.bind(*p_18_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ACLK.bind(*p_18_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARESET_N.bind(*p_18_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_ARADDR.bind(*p_18_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_ARBURST.bind(*p_18_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_ARID.bind(*p_18_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_ARLEN.bind(*p_18_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_ARSIZE.bind(*p_18_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARVALID.bind(*p_18_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_AWADDR.bind(*p_18_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_AWBURST.bind(*p_18_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_AWID.bind(*p_18_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_AWLEN.bind(*p_18_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_AWSIZE.bind(*p_18_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWVALID.bind(*p_18_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RREADY.bind(*p_18_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BREADY.bind(*p_18_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_WDATA.bind(*p_18_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WLAST.bind(*p_18_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WSTRB.bind(*p_18_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WDATA_PARITY.bind(*p_18_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WVALID.bind(*p_18_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ACLK.bind(*p_18_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARESET_N.bind(*p_18_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_ARADDR.bind(*p_18_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_ARBURST.bind(*p_18_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_ARID.bind(*p_18_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_ARLEN.bind(*p_18_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_ARSIZE.bind(*p_18_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARVALID.bind(*p_18_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_AWADDR.bind(*p_18_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_AWBURST.bind(*p_18_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_AWID.bind(*p_18_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_AWLEN.bind(*p_18_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_AWSIZE.bind(*p_18_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWVALID.bind(*p_18_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RREADY.bind(*p_18_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BREADY.bind(*p_18_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_WDATA.bind(*p_18_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WLAST.bind(*p_18_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WSTRB.bind(*p_18_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WDATA_PARITY.bind(*p_18_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WVALID.bind(*p_18_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ACLK.bind(*p_18_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARESET_N.bind(*p_18_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_ARADDR.bind(*p_18_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_ARBURST.bind(*p_18_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_ARID.bind(*p_18_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_ARLEN.bind(*p_18_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_ARSIZE.bind(*p_18_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARVALID.bind(*p_18_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_AWADDR.bind(*p_18_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_AWBURST.bind(*p_18_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_AWID.bind(*p_18_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_AWLEN.bind(*p_18_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_AWSIZE.bind(*p_18_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWVALID.bind(*p_18_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RREADY.bind(*p_18_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BREADY.bind(*p_18_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_WDATA.bind(*p_18_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WLAST.bind(*p_18_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WSTRB.bind(*p_18_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WDATA_PARITY.bind(*p_18_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WVALID.bind(*p_18_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_03_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_ACLK.bind(*p_18_AXI_03_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_03_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_ARESET_N.bind(*p_18_AXI_03_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_03_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_03_ARADDR.bind(*p_18_AXI_03_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_03_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_03_ARBURST.bind(*p_18_AXI_03_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_03_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_03_ARID.bind(*p_18_AXI_03_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_03_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_03_ARLEN.bind(*p_18_AXI_03_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_03_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_03_ARSIZE.bind(*p_18_AXI_03_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_03_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_ARVALID.bind(*p_18_AXI_03_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_03_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_03_AWADDR.bind(*p_18_AXI_03_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_03_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_03_AWBURST.bind(*p_18_AXI_03_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_03_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_03_AWID.bind(*p_18_AXI_03_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_03_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_03_AWLEN.bind(*p_18_AXI_03_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_03_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_03_AWSIZE.bind(*p_18_AXI_03_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_03_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_AWVALID.bind(*p_18_AXI_03_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_03_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_RREADY.bind(*p_18_AXI_03_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_03_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_BREADY.bind(*p_18_AXI_03_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_03_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_03_WDATA.bind(*p_18_AXI_03_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_03_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_WLAST.bind(*p_18_AXI_03_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_03_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_03_WSTRB.bind(*p_18_AXI_03_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_03_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_03_WDATA_PARITY.bind(*p_18_AXI_03_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_03_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_WVALID.bind(*p_18_AXI_03_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_03_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PWDATA.bind(*p_18_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_0_PADDR.bind(*p_18_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PCLK.bind(*p_18_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PENABLE.bind(*p_18_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PRESET_N.bind(*p_18_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSEL.bind(*p_18_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PWRITE.bind(*p_18_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARREADY.bind(*p_18_AXI_00_ARREADY);
        p_18_AXI_00_ARREADY->set_sv_netview_offsetfromdp(6543456);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWREADY.bind(*p_18_AXI_00_AWREADY);
        p_18_AXI_00_AWREADY->set_sv_netview_offsetfromdp(6543512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_RDATA_PARITY.bind(*p_18_AXI_00_RDATA_PARITY);
        p_18_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(6543568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_RDATA.bind(*p_18_AXI_00_RDATA);
        p_18_AXI_00_RDATA->set_sv_netview_offsetfromdp(6543624);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_RID.bind(*p_18_AXI_00_RID);
        p_18_AXI_00_RID->set_sv_netview_offsetfromdp(6543680);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RLAST.bind(*p_18_AXI_00_RLAST);
        p_18_AXI_00_RLAST->set_sv_netview_offsetfromdp(6543736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_RRESP.bind(*p_18_AXI_00_RRESP);
        p_18_AXI_00_RRESP->set_sv_netview_offsetfromdp(6543792);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RVALID.bind(*p_18_AXI_00_RVALID);
        p_18_AXI_00_RVALID->set_sv_netview_offsetfromdp(6543848);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WREADY.bind(*p_18_AXI_00_WREADY);
        p_18_AXI_00_WREADY->set_sv_netview_offsetfromdp(6543904);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_BID.bind(*p_18_AXI_00_BID);
        p_18_AXI_00_BID->set_sv_netview_offsetfromdp(6543960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_BRESP.bind(*p_18_AXI_00_BRESP);
        p_18_AXI_00_BRESP->set_sv_netview_offsetfromdp(6544016);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BVALID.bind(*p_18_AXI_00_BVALID);
        p_18_AXI_00_BVALID->set_sv_netview_offsetfromdp(6544072);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARREADY.bind(*p_18_AXI_01_ARREADY);
        p_18_AXI_01_ARREADY->set_sv_netview_offsetfromdp(6544128);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWREADY.bind(*p_18_AXI_01_AWREADY);
        p_18_AXI_01_AWREADY->set_sv_netview_offsetfromdp(6544184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_RDATA_PARITY.bind(*p_18_AXI_01_RDATA_PARITY);
        p_18_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(6544240);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_RDATA.bind(*p_18_AXI_01_RDATA);
        p_18_AXI_01_RDATA->set_sv_netview_offsetfromdp(6544296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_RID.bind(*p_18_AXI_01_RID);
        p_18_AXI_01_RID->set_sv_netview_offsetfromdp(6544352);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RLAST.bind(*p_18_AXI_01_RLAST);
        p_18_AXI_01_RLAST->set_sv_netview_offsetfromdp(6544408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_RRESP.bind(*p_18_AXI_01_RRESP);
        p_18_AXI_01_RRESP->set_sv_netview_offsetfromdp(6544464);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RVALID.bind(*p_18_AXI_01_RVALID);
        p_18_AXI_01_RVALID->set_sv_netview_offsetfromdp(6544520);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WREADY.bind(*p_18_AXI_01_WREADY);
        p_18_AXI_01_WREADY->set_sv_netview_offsetfromdp(6544576);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_BID.bind(*p_18_AXI_01_BID);
        p_18_AXI_01_BID->set_sv_netview_offsetfromdp(6544632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_BRESP.bind(*p_18_AXI_01_BRESP);
        p_18_AXI_01_BRESP->set_sv_netview_offsetfromdp(6544688);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BVALID.bind(*p_18_AXI_01_BVALID);
        p_18_AXI_01_BVALID->set_sv_netview_offsetfromdp(6544744);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARREADY.bind(*p_18_AXI_02_ARREADY);
        p_18_AXI_02_ARREADY->set_sv_netview_offsetfromdp(6544800);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWREADY.bind(*p_18_AXI_02_AWREADY);
        p_18_AXI_02_AWREADY->set_sv_netview_offsetfromdp(6544856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_RDATA_PARITY.bind(*p_18_AXI_02_RDATA_PARITY);
        p_18_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(6544912);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_RDATA.bind(*p_18_AXI_02_RDATA);
        p_18_AXI_02_RDATA->set_sv_netview_offsetfromdp(6544968);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_RID.bind(*p_18_AXI_02_RID);
        p_18_AXI_02_RID->set_sv_netview_offsetfromdp(6545024);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RLAST.bind(*p_18_AXI_02_RLAST);
        p_18_AXI_02_RLAST->set_sv_netview_offsetfromdp(6545080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_RRESP.bind(*p_18_AXI_02_RRESP);
        p_18_AXI_02_RRESP->set_sv_netview_offsetfromdp(6545136);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RVALID.bind(*p_18_AXI_02_RVALID);
        p_18_AXI_02_RVALID->set_sv_netview_offsetfromdp(6545192);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WREADY.bind(*p_18_AXI_02_WREADY);
        p_18_AXI_02_WREADY->set_sv_netview_offsetfromdp(6545248);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_BID.bind(*p_18_AXI_02_BID);
        p_18_AXI_02_BID->set_sv_netview_offsetfromdp(6545304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_BRESP.bind(*p_18_AXI_02_BRESP);
        p_18_AXI_02_BRESP->set_sv_netview_offsetfromdp(6545360);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BVALID.bind(*p_18_AXI_02_BVALID);
        p_18_AXI_02_BVALID->set_sv_netview_offsetfromdp(6545416);
        xsim_sc_channel<0, bool > *p_18_AXI_03_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_ARREADY.bind(*p_18_AXI_03_ARREADY);
        p_18_AXI_03_ARREADY->set_sv_netview_offsetfromdp(6545472);
        xsim_sc_channel<0, bool > *p_18_AXI_03_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_AWREADY.bind(*p_18_AXI_03_AWREADY);
        p_18_AXI_03_AWREADY->set_sv_netview_offsetfromdp(6545528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_03_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_03_RDATA_PARITY.bind(*p_18_AXI_03_RDATA_PARITY);
        p_18_AXI_03_RDATA_PARITY->set_sv_netview_offsetfromdp(6545584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_03_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_03_RDATA.bind(*p_18_AXI_03_RDATA);
        p_18_AXI_03_RDATA->set_sv_netview_offsetfromdp(6545640);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_03_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_03_RID.bind(*p_18_AXI_03_RID);
        p_18_AXI_03_RID->set_sv_netview_offsetfromdp(6545696);
        xsim_sc_channel<0, bool > *p_18_AXI_03_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_RLAST.bind(*p_18_AXI_03_RLAST);
        p_18_AXI_03_RLAST->set_sv_netview_offsetfromdp(6545752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_03_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_03_RRESP.bind(*p_18_AXI_03_RRESP);
        p_18_AXI_03_RRESP->set_sv_netview_offsetfromdp(6545808);
        xsim_sc_channel<0, bool > *p_18_AXI_03_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_RVALID.bind(*p_18_AXI_03_RVALID);
        p_18_AXI_03_RVALID->set_sv_netview_offsetfromdp(6545864);
        xsim_sc_channel<0, bool > *p_18_AXI_03_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_WREADY.bind(*p_18_AXI_03_WREADY);
        p_18_AXI_03_WREADY->set_sv_netview_offsetfromdp(6545920);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_03_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_03_BID.bind(*p_18_AXI_03_BID);
        p_18_AXI_03_BID->set_sv_netview_offsetfromdp(6545976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_03_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_03_BRESP.bind(*p_18_AXI_03_BRESP);
        p_18_AXI_03_BRESP->set_sv_netview_offsetfromdp(6546032);
        xsim_sc_channel<0, bool > *p_18_AXI_03_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_03_BVALID.bind(*p_18_AXI_03_BVALID);
        p_18_AXI_03_BVALID->set_sv_netview_offsetfromdp(6546088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PRDATA.bind(*p_18_APB_0_PRDATA);
        p_18_APB_0_PRDATA->set_sv_netview_offsetfromdp(6546144);
        xsim_sc_channel<0, bool > *p_18_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PREADY.bind(*p_18_APB_0_PREADY);
        p_18_APB_0_PREADY->set_sv_netview_offsetfromdp(6546200);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSLVERR.bind(*p_18_APB_0_PSLVERR);
        p_18_APB_0_PSLVERR->set_sv_netview_offsetfromdp(6546256);
        xsim_sc_channel<0, bool > *p_18_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_0.bind(*p_18_apb_complete_0);
        p_18_apb_complete_0->set_sv_netview_offsetfromdp(6546312);
        xsim_sc_channel<0, bool > *p_18_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_0_STAT_CATTRIP.bind(*p_18_DRAM_0_STAT_CATTRIP);
        p_18_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(6546368);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_0_STAT_TEMP.bind(*p_18_DRAM_0_STAT_TEMP);
        p_18_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(6546424);
        sc_inst_19 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_19->xsim_set_dbg_index(2037);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk1.bind(*p_19_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk1);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_araddr.bind(*p_19_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_arlen.bind(*p_19_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arsize.bind(*p_19_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_arburst.bind(*p_19_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arlock.bind(*p_19_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arcache.bind(*p_19_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arprot.bind(*p_19_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arqos.bind(*p_19_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arvalid.bind(*p_19_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arready.bind(*p_19_S00_AXI_arready);
        p_19_S00_AXI_arready->set_sv_netview_offsetfromdp(6720768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->S00_AXI_rdata.bind(*p_19_S00_AXI_rdata);
        p_19_S00_AXI_rdata->set_sv_netview_offsetfromdp(6720824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_rresp.bind(*p_19_S00_AXI_rresp);
        p_19_S00_AXI_rresp->set_sv_netview_offsetfromdp(6720880);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rlast.bind(*p_19_S00_AXI_rlast);
        p_19_S00_AXI_rlast->set_sv_netview_offsetfromdp(6720936);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rvalid.bind(*p_19_S00_AXI_rvalid);
        p_19_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6720992);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rready.bind(*p_19_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_araddr.bind(*p_19_M00_AXI_araddr);
        p_19_M00_AXI_araddr->set_sv_netview_offsetfromdp(6721104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arlen.bind(*p_19_M00_AXI_arlen);
        p_19_M00_AXI_arlen->set_sv_netview_offsetfromdp(6721160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arsize.bind(*p_19_M00_AXI_arsize);
        p_19_M00_AXI_arsize->set_sv_netview_offsetfromdp(6721216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arburst.bind(*p_19_M00_AXI_arburst);
        p_19_M00_AXI_arburst->set_sv_netview_offsetfromdp(6721272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arlock.bind(*p_19_M00_AXI_arlock);
        p_19_M00_AXI_arlock->set_sv_netview_offsetfromdp(6721328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arcache.bind(*p_19_M00_AXI_arcache);
        p_19_M00_AXI_arcache->set_sv_netview_offsetfromdp(6721384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arprot.bind(*p_19_M00_AXI_arprot);
        p_19_M00_AXI_arprot->set_sv_netview_offsetfromdp(6721440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arqos.bind(*p_19_M00_AXI_arqos);
        p_19_M00_AXI_arqos->set_sv_netview_offsetfromdp(6721496);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arvalid.bind(*p_19_M00_AXI_arvalid);
        p_19_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6721552);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arready.bind(*p_19_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_rdata.bind(*p_19_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_rresp.bind(*p_19_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rlast.bind(*p_19_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rvalid.bind(*p_19_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rready.bind(*p_19_M00_AXI_rready);
        p_19_M00_AXI_rready->set_sv_netview_offsetfromdp(6721888);
        sc_inst_20 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_20->xsim_set_dbg_index(2038);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awsize.bind(*p_20_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(6722608);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(6722888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(6722944);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(6723000);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arsize.bind(*p_20_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(6723616);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(6723672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(6723728);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(6723784);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(6723840);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(6723952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(6724008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awsize.bind(*p_20_m_axi_awsize);
        p_20_m_axi_awsize->set_sv_netview_offsetfromdp(6724064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(6724120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(6724176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(6724232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(6724288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(6724344);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(6724400);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(6724512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(6724568);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(6724624);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(6724680);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(6724904);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(6724960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(6725016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arsize.bind(*p_20_m_axi_arsize);
        p_20_m_axi_arsize->set_sv_netview_offsetfromdp(6725072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(6725128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(6725184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(6725240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(6725296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(6725352);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(6725408);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(6725744);
        sc_inst_21 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_21->xsim_set_dbg_index(2089);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk1.bind(*p_21_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk1);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->S00_AXI_awaddr.bind(*p_21_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->S00_AXI_awlen.bind(*p_21_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_awsize.bind(*p_21_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_awburst.bind(*p_21_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_awlock.bind(*p_21_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_awcache.bind(*p_21_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_awprot.bind(*p_21_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_awqos.bind(*p_21_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_awvalid.bind(*p_21_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_awready.bind(*p_21_S00_AXI_awready);
        p_21_S00_AXI_awready->set_sv_netview_offsetfromdp(6771072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->S00_AXI_wdata.bind(*p_21_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_wstrb.bind(*p_21_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wlast.bind(*p_21_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wvalid.bind(*p_21_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wready.bind(*p_21_S00_AXI_wready);
        p_21_S00_AXI_wready->set_sv_netview_offsetfromdp(6771352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_bresp.bind(*p_21_S00_AXI_bresp);
        p_21_S00_AXI_bresp->set_sv_netview_offsetfromdp(6771408);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_bvalid.bind(*p_21_S00_AXI_bvalid);
        p_21_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6771464);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_bready.bind(*p_21_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->M00_AXI_awaddr.bind(*p_21_M00_AXI_awaddr);
        p_21_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6771576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awlen.bind(*p_21_M00_AXI_awlen);
        p_21_M00_AXI_awlen->set_sv_netview_offsetfromdp(6771632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_awsize.bind(*p_21_M00_AXI_awsize);
        p_21_M00_AXI_awsize->set_sv_netview_offsetfromdp(6771688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_awburst.bind(*p_21_M00_AXI_awburst);
        p_21_M00_AXI_awburst->set_sv_netview_offsetfromdp(6771744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_awlock.bind(*p_21_M00_AXI_awlock);
        p_21_M00_AXI_awlock->set_sv_netview_offsetfromdp(6771800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awcache.bind(*p_21_M00_AXI_awcache);
        p_21_M00_AXI_awcache->set_sv_netview_offsetfromdp(6771856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_awprot.bind(*p_21_M00_AXI_awprot);
        p_21_M00_AXI_awprot->set_sv_netview_offsetfromdp(6771912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awqos.bind(*p_21_M00_AXI_awqos);
        p_21_M00_AXI_awqos->set_sv_netview_offsetfromdp(6771968);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_awvalid.bind(*p_21_M00_AXI_awvalid);
        p_21_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6772024);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_awready.bind(*p_21_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->M00_AXI_wdata.bind(*p_21_M00_AXI_wdata);
        p_21_M00_AXI_wdata->set_sv_netview_offsetfromdp(6772136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->M00_AXI_wstrb.bind(*p_21_M00_AXI_wstrb);
        p_21_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6772192);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wlast.bind(*p_21_M00_AXI_wlast);
        p_21_M00_AXI_wlast->set_sv_netview_offsetfromdp(6772248);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wvalid.bind(*p_21_M00_AXI_wvalid);
        p_21_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6772304);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wready.bind(*p_21_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_bresp.bind(*p_21_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_bvalid.bind(*p_21_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_bready.bind(*p_21_M00_AXI_bready);
        p_21_M00_AXI_bready->set_sv_netview_offsetfromdp(6772528);
        sc_inst_22 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_22->xsim_set_dbg_index(2090);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awsize.bind(*p_22_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(6773248);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(6773528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(6773584);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(6773640);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arsize.bind(*p_22_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(6774256);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(6774312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(6774368);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(6774424);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(6774480);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(6774592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(6774648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awsize.bind(*p_22_m_axi_awsize);
        p_22_m_axi_awsize->set_sv_netview_offsetfromdp(6774704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(6774760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(6774816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(6774872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(6774928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(6774984);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(6775040);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(6775152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(6775208);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(6775264);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(6775320);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(6775544);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(6775600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(6775656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arsize.bind(*p_22_m_axi_arsize);
        p_22_m_axi_arsize->set_sv_netview_offsetfromdp(6775712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(6775768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(6775824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(6775880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(6775936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(6775992);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(6776048);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(6776384);
        sc_inst_23 = new bd_5dca_interconnect3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect3_2");
        sc_inst_23->xsim_set_dbg_index(2144);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk1.bind(*p_23_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(6837920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(6838200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(6838256);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6838312);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(6838928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(6838984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(6839040);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(6839096);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6839152);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6839264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(6839320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(6839376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(6839432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(6839488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(6839544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(6839600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(6839656);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6839712);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(6839824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6839880);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(6839936);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6839992);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(6840216);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(6840272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(6840328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(6840384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(6840440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(6840496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(6840552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(6840608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(6840664);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6840720);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(6841056);
        sc_inst_24 = new bd_5dca_slice3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice3_2");
        sc_inst_24->xsim_set_dbg_index(2145);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awsize.bind(*p_24_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(6841776);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(6842056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(6842112);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(6842168);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arsize.bind(*p_24_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(6842784);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(6842840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(6842896);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(6842952);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(6843008);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(6843120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(6843176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awsize.bind(*p_24_m_axi_awsize);
        p_24_m_axi_awsize->set_sv_netview_offsetfromdp(6843232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(6843288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(6843344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(6843400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(6843456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(6843512);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(6843568);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(6843680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(6843736);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(6843792);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(6843848);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(6844072);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(6844128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(6844184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arsize.bind(*p_24_m_axi_arsize);
        p_24_m_axi_arsize->set_sv_netview_offsetfromdp(6844240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(6844296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(6844352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(6844408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(6844464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(6844520);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(6844576);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(6844912);
        sc_inst_25 = new bd_5dca_interconnect0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.interconnect0_3");
        sc_inst_25->xsim_set_dbg_index(2213);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk1.bind(*p_25_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk1);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->S00_AXI_awaddr.bind(*p_25_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->S00_AXI_awlen.bind(*p_25_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_awsize.bind(*p_25_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_awburst.bind(*p_25_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->S00_AXI_awlock.bind(*p_25_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_awcache.bind(*p_25_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_awprot.bind(*p_25_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_awqos.bind(*p_25_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_awvalid.bind(*p_25_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_awready.bind(*p_25_S00_AXI_awready);
        p_25_S00_AXI_awready->set_sv_netview_offsetfromdp(6907080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->S00_AXI_wdata.bind(*p_25_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->S00_AXI_wstrb.bind(*p_25_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_wlast.bind(*p_25_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_wvalid.bind(*p_25_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_wready.bind(*p_25_S00_AXI_wready);
        p_25_S00_AXI_wready->set_sv_netview_offsetfromdp(6907360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_bresp.bind(*p_25_S00_AXI_bresp);
        p_25_S00_AXI_bresp->set_sv_netview_offsetfromdp(6907416);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_bvalid.bind(*p_25_S00_AXI_bvalid);
        p_25_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6907472);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_bready.bind(*p_25_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->S00_AXI_araddr.bind(*p_25_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->S00_AXI_arlen.bind(*p_25_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_arsize.bind(*p_25_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_arburst.bind(*p_25_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->S00_AXI_arlock.bind(*p_25_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_arcache.bind(*p_25_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_arprot.bind(*p_25_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_arqos.bind(*p_25_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_arvalid.bind(*p_25_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_arready.bind(*p_25_S00_AXI_arready);
        p_25_S00_AXI_arready->set_sv_netview_offsetfromdp(6908088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->S00_AXI_rdata.bind(*p_25_S00_AXI_rdata);
        p_25_S00_AXI_rdata->set_sv_netview_offsetfromdp(6908144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_rresp.bind(*p_25_S00_AXI_rresp);
        p_25_S00_AXI_rresp->set_sv_netview_offsetfromdp(6908200);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rlast.bind(*p_25_S00_AXI_rlast);
        p_25_S00_AXI_rlast->set_sv_netview_offsetfromdp(6908256);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rvalid.bind(*p_25_S00_AXI_rvalid);
        p_25_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6908312);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rready.bind(*p_25_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->M00_AXI_awaddr.bind(*p_25_M00_AXI_awaddr);
        p_25_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6908424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_awlen.bind(*p_25_M00_AXI_awlen);
        p_25_M00_AXI_awlen->set_sv_netview_offsetfromdp(6908480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_awsize.bind(*p_25_M00_AXI_awsize);
        p_25_M00_AXI_awsize->set_sv_netview_offsetfromdp(6908536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_awburst.bind(*p_25_M00_AXI_awburst);
        p_25_M00_AXI_awburst->set_sv_netview_offsetfromdp(6908592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_awlock.bind(*p_25_M00_AXI_awlock);
        p_25_M00_AXI_awlock->set_sv_netview_offsetfromdp(6908648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_awcache.bind(*p_25_M00_AXI_awcache);
        p_25_M00_AXI_awcache->set_sv_netview_offsetfromdp(6908704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_awprot.bind(*p_25_M00_AXI_awprot);
        p_25_M00_AXI_awprot->set_sv_netview_offsetfromdp(6908760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_awqos.bind(*p_25_M00_AXI_awqos);
        p_25_M00_AXI_awqos->set_sv_netview_offsetfromdp(6908816);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_awvalid.bind(*p_25_M00_AXI_awvalid);
        p_25_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6908872);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_awready.bind(*p_25_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->M00_AXI_wdata.bind(*p_25_M00_AXI_wdata);
        p_25_M00_AXI_wdata->set_sv_netview_offsetfromdp(6908984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->M00_AXI_wstrb.bind(*p_25_M00_AXI_wstrb);
        p_25_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6909040);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_wlast.bind(*p_25_M00_AXI_wlast);
        p_25_M00_AXI_wlast->set_sv_netview_offsetfromdp(6909096);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_wvalid.bind(*p_25_M00_AXI_wvalid);
        p_25_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6909152);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_wready.bind(*p_25_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_bresp.bind(*p_25_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_bvalid.bind(*p_25_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_bready.bind(*p_25_M00_AXI_bready);
        p_25_M00_AXI_bready->set_sv_netview_offsetfromdp(6909376);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->M00_AXI_araddr.bind(*p_25_M00_AXI_araddr);
        p_25_M00_AXI_araddr->set_sv_netview_offsetfromdp(6909432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arlen.bind(*p_25_M00_AXI_arlen);
        p_25_M00_AXI_arlen->set_sv_netview_offsetfromdp(6909488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_arsize.bind(*p_25_M00_AXI_arsize);
        p_25_M00_AXI_arsize->set_sv_netview_offsetfromdp(6909544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_arburst.bind(*p_25_M00_AXI_arburst);
        p_25_M00_AXI_arburst->set_sv_netview_offsetfromdp(6909600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_arlock.bind(*p_25_M00_AXI_arlock);
        p_25_M00_AXI_arlock->set_sv_netview_offsetfromdp(6909656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arcache.bind(*p_25_M00_AXI_arcache);
        p_25_M00_AXI_arcache->set_sv_netview_offsetfromdp(6909712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_arprot.bind(*p_25_M00_AXI_arprot);
        p_25_M00_AXI_arprot->set_sv_netview_offsetfromdp(6909768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arqos.bind(*p_25_M00_AXI_arqos);
        p_25_M00_AXI_arqos->set_sv_netview_offsetfromdp(6909824);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_arvalid.bind(*p_25_M00_AXI_arvalid);
        p_25_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6909880);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_arready.bind(*p_25_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->M00_AXI_rdata.bind(*p_25_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_rresp.bind(*p_25_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rlast.bind(*p_25_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rvalid.bind(*p_25_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rready.bind(*p_25_M00_AXI_rready);
        p_25_M00_AXI_rready->set_sv_netview_offsetfromdp(6910216);
        sc_inst_26 = new bd_5dca_slice0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.slice0_3");
        sc_inst_26->xsim_set_dbg_index(2214);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awsize.bind(*p_26_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(6910936);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(6911216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(6911272);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(6911328);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arsize.bind(*p_26_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(6911944);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(6912000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(6912056);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(6912112);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(6912168);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(6912280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(6912336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awsize.bind(*p_26_m_axi_awsize);
        p_26_m_axi_awsize->set_sv_netview_offsetfromdp(6912392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(6912448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(6912504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(6912560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(6912616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(6912672);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(6912728);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(6912840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(6912896);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(6912952);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(6913008);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(6913232);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(6913288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(6913344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arsize.bind(*p_26_m_axi_arsize);
        p_26_m_axi_arsize->set_sv_netview_offsetfromdp(6913400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(6913456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(6913512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(6913568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(6913624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(6913680);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(6913736);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(6914072);
        sc_inst_27 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_27->xsim_set_dbg_index(843);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(6914736);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(6915016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(6915072);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(6915128);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(6915688);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(6915744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(6915800);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(6915856);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(6915912);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(6916024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(6916080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(6916136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(6916192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(6916248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(6916304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(6916360);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(6916416);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(6916528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(6916584);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(6916640);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(6916696);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(6916920);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(6916976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(6917032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(6917088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(6917144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(6917200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(6917256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(6917312);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(6917368);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(6917704);
        sc_inst_28 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_28->xsim_set_dbg_index(844);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awlen.bind(*p_28_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awburst.bind(*p_28_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awlock.bind(*p_28_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awcache.bind(*p_28_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot.bind(*p_28_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awqos.bind(*p_28_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(6918368);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wlast.bind(*p_28_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(6918648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(6918704);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(6918760);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arlen.bind(*p_28_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arburst.bind(*p_28_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arlock.bind(*p_28_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arcache.bind(*p_28_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot.bind(*p_28_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arqos.bind(*p_28_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(6919320);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(6919376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(6919432);
        xsim_sc_channel<0, bool > *p_28_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rlast.bind(*p_28_s_axi_rlast);
        p_28_s_axi_rlast->set_sv_netview_offsetfromdp(6919488);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(6919544);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->m_axi_awaddr.bind(*p_28_m_axi_awaddr);
        p_28_m_axi_awaddr->set_sv_netview_offsetfromdp(6919656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awlen.bind(*p_28_m_axi_awlen);
        p_28_m_axi_awlen->set_sv_netview_offsetfromdp(6919712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awburst.bind(*p_28_m_axi_awburst);
        p_28_m_axi_awburst->set_sv_netview_offsetfromdp(6919768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awlock.bind(*p_28_m_axi_awlock);
        p_28_m_axi_awlock->set_sv_netview_offsetfromdp(6919824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awcache.bind(*p_28_m_axi_awcache);
        p_28_m_axi_awcache->set_sv_netview_offsetfromdp(6919880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awprot.bind(*p_28_m_axi_awprot);
        p_28_m_axi_awprot->set_sv_netview_offsetfromdp(6919936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awqos.bind(*p_28_m_axi_awqos);
        p_28_m_axi_awqos->set_sv_netview_offsetfromdp(6919992);
        xsim_sc_channel<0, bool > *p_28_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awvalid.bind(*p_28_m_axi_awvalid);
        p_28_m_axi_awvalid->set_sv_netview_offsetfromdp(6920048);
        xsim_sc_channel<0, bool > *p_28_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awready.bind(*p_28_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->m_axi_wdata.bind(*p_28_m_axi_wdata);
        p_28_m_axi_wdata->set_sv_netview_offsetfromdp(6920160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_wstrb.bind(*p_28_m_axi_wstrb);
        p_28_m_axi_wstrb->set_sv_netview_offsetfromdp(6920216);
        xsim_sc_channel<0, bool > *p_28_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wlast.bind(*p_28_m_axi_wlast);
        p_28_m_axi_wlast->set_sv_netview_offsetfromdp(6920272);
        xsim_sc_channel<0, bool > *p_28_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wvalid.bind(*p_28_m_axi_wvalid);
        p_28_m_axi_wvalid->set_sv_netview_offsetfromdp(6920328);
        xsim_sc_channel<0, bool > *p_28_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wready.bind(*p_28_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_bresp.bind(*p_28_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bvalid.bind(*p_28_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bready.bind(*p_28_m_axi_bready);
        p_28_m_axi_bready->set_sv_netview_offsetfromdp(6920552);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->m_axi_araddr.bind(*p_28_m_axi_araddr);
        p_28_m_axi_araddr->set_sv_netview_offsetfromdp(6920608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arlen.bind(*p_28_m_axi_arlen);
        p_28_m_axi_arlen->set_sv_netview_offsetfromdp(6920664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arburst.bind(*p_28_m_axi_arburst);
        p_28_m_axi_arburst->set_sv_netview_offsetfromdp(6920720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arlock.bind(*p_28_m_axi_arlock);
        p_28_m_axi_arlock->set_sv_netview_offsetfromdp(6920776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arcache.bind(*p_28_m_axi_arcache);
        p_28_m_axi_arcache->set_sv_netview_offsetfromdp(6920832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arprot.bind(*p_28_m_axi_arprot);
        p_28_m_axi_arprot->set_sv_netview_offsetfromdp(6920888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arqos.bind(*p_28_m_axi_arqos);
        p_28_m_axi_arqos->set_sv_netview_offsetfromdp(6920944);
        xsim_sc_channel<0, bool > *p_28_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arvalid.bind(*p_28_m_axi_arvalid);
        p_28_m_axi_arvalid->set_sv_netview_offsetfromdp(6921000);
        xsim_sc_channel<0, bool > *p_28_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arready.bind(*p_28_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->m_axi_rdata.bind(*p_28_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_rresp.bind(*p_28_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rlast.bind(*p_28_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_28_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rvalid.bind(*p_28_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rready.bind(*p_28_m_axi_rready);
        p_28_m_axi_rready->set_sv_netview_offsetfromdp(6921336);
        sc_inst_29 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_29->xsim_set_dbg_index(845);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(6922000);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(6922280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(6922336);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(6922392);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(6922952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(6923008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(6923064);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(6923120);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(6923176);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(6923288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(6923344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(6923400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(6923456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(6923512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(6923568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(6923624);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(6923680);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(6923792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(6923848);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(6923904);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(6923960);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(6924184);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(6924240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(6924296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(6924352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(6924408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(6924464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(6924520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(6924576);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(6924632);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(6924968);
        sc_inst_30 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_30->xsim_set_dbg_index(846);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(6925632);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(6925912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(6925968);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(6926024);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(6926584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(6926640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(6926696);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(6926752);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(6926808);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(6926920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(6926976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(6927032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(6927088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(6927144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(6927200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(6927256);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(6927312);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(6927424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(6927480);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(6927536);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(6927592);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(6927816);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(6927872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(6927928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(6927984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(6928040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(6928096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(6928152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(6928208);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(6928264);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(6928600);
        sc_inst_31 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_31->xsim_set_dbg_index(45);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->dout.bind(*p_31_dout);
        p_31_dout->set_sv_netview_offsetfromdp(7098040);
        sc_inst_32 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_32->xsim_set_dbg_index(1303);
        sc_inst_33 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_33->xsim_set_dbg_index(2351);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(7749688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(7750024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(7750080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(7750136);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(7750192);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7750248);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(7750976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(7751032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(7751088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(7751144);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(7751200);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(7751256);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7751312);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7751424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(7751480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(7751536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(7751592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(7751648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(7751704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(7751760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(7751816);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7751872);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(7751984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7752040);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(7752096);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7752152);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(7752376);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(7752432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(7752488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(7752544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(7752600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(7752656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(7752712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(7752768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(7752824);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7752880);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(7753216);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_34->xsim_set_dbg_index(2352);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(7754048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(7754384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(7754440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(7754496);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(7754552);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7754608);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(7755336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(7755392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(7755448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(7755504);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(7755560);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(7755616);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7755672);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7755784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(7755840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(7755896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(7755952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(7756008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(7756064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(7756120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(7756176);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7756232);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(7756344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7756400);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(7756456);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7756512);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(7756736);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(7756792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(7756848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(7756904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(7756960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(7757016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(7757072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(7757128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(7757184);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7757240);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(7757576);
        sc_inst_35 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_35->xsim_set_dbg_index(2353);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(7758408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(7758744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(7758800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(7758856);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(7758912);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7758968);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(7759696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(7759752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(7759808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(7759864);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(7759920);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(7759976);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7760032);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7760144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(7760200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(7760256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(7760312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(7760368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(7760424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(7760480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(7760536);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7760592);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(7760704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7760760);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(7760816);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7760872);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(7761096);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(7761152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(7761208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(7761264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(7761320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(7761376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(7761432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(7761488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(7761544);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7761600);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(7761936);
        sc_inst_36 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_36->xsim_set_dbg_index(2354);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(7762768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(7763104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(7763160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(7763216);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(7763272);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7763328);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(7764056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(7764112);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(7764168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(7764224);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(7764280);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(7764336);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7764392);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7764504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(7764560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(7764616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(7764672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(7764728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(7764784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(7764840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(7764896);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7764952);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(7765064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7765120);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(7765176);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7765232);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(7765456);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(7765512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(7765568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(7765624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(7765680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(7765736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(7765792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(7765848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(7765904);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7765960);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(7766296);
        sc_inst_37 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_37->xsim_set_dbg_index(2355);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awid.bind(*p_37_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_awuser.bind(*p_37_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(7767128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_wuser.bind(*p_37_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(7767464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_bid.bind(*p_37_S00_AXI_bid);
        p_37_S00_AXI_bid->set_sv_netview_offsetfromdp(7767520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(7767576);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_buser.bind(*p_37_S00_AXI_buser);
        p_37_S00_AXI_buser->set_sv_netview_offsetfromdp(7767632);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7767688);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arid.bind(*p_37_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_aruser.bind(*p_37_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(7768416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_rid.bind(*p_37_S00_AXI_rid);
        p_37_S00_AXI_rid->set_sv_netview_offsetfromdp(7768472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(7768528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(7768584);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(7768640);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_ruser.bind(*p_37_S00_AXI_ruser);
        p_37_S00_AXI_ruser->set_sv_netview_offsetfromdp(7768696);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7768752);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7768864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(7768920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(7768976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(7769032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(7769088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(7769144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(7769200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(7769256);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7769312);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(7769424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7769480);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(7769536);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7769592);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(7769816);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(7769872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(7769928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(7769984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(7770040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(7770096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(7770152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(7770208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(7770264);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7770320);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(7770656);
        sc_inst_38 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_38->xsim_set_dbg_index(2356);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(7771376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(7771656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(7771712);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7771768);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(7772384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(7772440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(7772496);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(7772552);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7772608);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awid.bind(*p_38_M00_AXI_awid);
        p_38_M00_AXI_awid->set_sv_netview_offsetfromdp(7772720);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7772776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(7772832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(7772888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(7772944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(7773000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(7773056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(7773112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(7773168);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M00_AXI_awuser.bind(*p_38_M00_AXI_awuser);
        p_38_M00_AXI_awuser->set_sv_netview_offsetfromdp(7773224);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7773280);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(7773392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7773448);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(7773504);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M00_AXI_wuser.bind(*p_38_M00_AXI_wuser);
        p_38_M00_AXI_wuser->set_sv_netview_offsetfromdp(7773560);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7773616);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_bid.bind(*p_38_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M00_AXI_buser.bind(*p_38_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(7773952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arid.bind(*p_38_M00_AXI_arid);
        p_38_M00_AXI_arid->set_sv_netview_offsetfromdp(7774008);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(7774064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(7774120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(7774176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(7774232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(7774288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(7774344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(7774400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(7774456);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M00_AXI_aruser.bind(*p_38_M00_AXI_aruser);
        p_38_M00_AXI_aruser->set_sv_netview_offsetfromdp(7774512);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7774568);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_rid.bind(*p_38_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M00_AXI_ruser.bind(*p_38_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(7775016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_awid.bind(*p_38_M01_AXI_awid);
        p_38_M01_AXI_awid->set_sv_netview_offsetfromdp(7775072);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M01_AXI_awaddr.bind(*p_38_M01_AXI_awaddr);
        p_38_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7775128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M01_AXI_awlen.bind(*p_38_M01_AXI_awlen);
        p_38_M01_AXI_awlen->set_sv_netview_offsetfromdp(7775184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_awsize.bind(*p_38_M01_AXI_awsize);
        p_38_M01_AXI_awsize->set_sv_netview_offsetfromdp(7775240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_awburst.bind(*p_38_M01_AXI_awburst);
        p_38_M01_AXI_awburst->set_sv_netview_offsetfromdp(7775296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_awlock.bind(*p_38_M01_AXI_awlock);
        p_38_M01_AXI_awlock->set_sv_netview_offsetfromdp(7775352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_awcache.bind(*p_38_M01_AXI_awcache);
        p_38_M01_AXI_awcache->set_sv_netview_offsetfromdp(7775408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_awprot.bind(*p_38_M01_AXI_awprot);
        p_38_M01_AXI_awprot->set_sv_netview_offsetfromdp(7775464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_awqos.bind(*p_38_M01_AXI_awqos);
        p_38_M01_AXI_awqos->set_sv_netview_offsetfromdp(7775520);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M01_AXI_awuser.bind(*p_38_M01_AXI_awuser);
        p_38_M01_AXI_awuser->set_sv_netview_offsetfromdp(7775576);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_awvalid.bind(*p_38_M01_AXI_awvalid);
        p_38_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7775632);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_awready.bind(*p_38_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M01_AXI_wdata.bind(*p_38_M01_AXI_wdata);
        p_38_M01_AXI_wdata->set_sv_netview_offsetfromdp(7775744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M01_AXI_wstrb.bind(*p_38_M01_AXI_wstrb);
        p_38_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7775800);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wlast.bind(*p_38_M01_AXI_wlast);
        p_38_M01_AXI_wlast->set_sv_netview_offsetfromdp(7775856);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M01_AXI_wuser.bind(*p_38_M01_AXI_wuser);
        p_38_M01_AXI_wuser->set_sv_netview_offsetfromdp(7775912);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wvalid.bind(*p_38_M01_AXI_wvalid);
        p_38_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7775968);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wready.bind(*p_38_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_bid.bind(*p_38_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_bresp.bind(*p_38_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M01_AXI_buser.bind(*p_38_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_bvalid.bind(*p_38_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_bready.bind(*p_38_M01_AXI_bready);
        p_38_M01_AXI_bready->set_sv_netview_offsetfromdp(7776304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_arid.bind(*p_38_M01_AXI_arid);
        p_38_M01_AXI_arid->set_sv_netview_offsetfromdp(7776360);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M01_AXI_araddr.bind(*p_38_M01_AXI_araddr);
        p_38_M01_AXI_araddr->set_sv_netview_offsetfromdp(7776416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M01_AXI_arlen.bind(*p_38_M01_AXI_arlen);
        p_38_M01_AXI_arlen->set_sv_netview_offsetfromdp(7776472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_arsize.bind(*p_38_M01_AXI_arsize);
        p_38_M01_AXI_arsize->set_sv_netview_offsetfromdp(7776528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_arburst.bind(*p_38_M01_AXI_arburst);
        p_38_M01_AXI_arburst->set_sv_netview_offsetfromdp(7776584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_arlock.bind(*p_38_M01_AXI_arlock);
        p_38_M01_AXI_arlock->set_sv_netview_offsetfromdp(7776640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_arcache.bind(*p_38_M01_AXI_arcache);
        p_38_M01_AXI_arcache->set_sv_netview_offsetfromdp(7776696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_arprot.bind(*p_38_M01_AXI_arprot);
        p_38_M01_AXI_arprot->set_sv_netview_offsetfromdp(7776752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_arqos.bind(*p_38_M01_AXI_arqos);
        p_38_M01_AXI_arqos->set_sv_netview_offsetfromdp(7776808);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M01_AXI_aruser.bind(*p_38_M01_AXI_aruser);
        p_38_M01_AXI_aruser->set_sv_netview_offsetfromdp(7776864);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_arvalid.bind(*p_38_M01_AXI_arvalid);
        p_38_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7776920);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_arready.bind(*p_38_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_rid.bind(*p_38_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M01_AXI_rdata.bind(*p_38_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_rresp.bind(*p_38_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rlast.bind(*p_38_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M01_AXI_ruser.bind(*p_38_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rvalid.bind(*p_38_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rready.bind(*p_38_M01_AXI_rready);
        p_38_M01_AXI_rready->set_sv_netview_offsetfromdp(7777368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_awid.bind(*p_38_M02_AXI_awid);
        p_38_M02_AXI_awid->set_sv_netview_offsetfromdp(7777424);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M02_AXI_awaddr.bind(*p_38_M02_AXI_awaddr);
        p_38_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7777480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M02_AXI_awlen.bind(*p_38_M02_AXI_awlen);
        p_38_M02_AXI_awlen->set_sv_netview_offsetfromdp(7777536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_awsize.bind(*p_38_M02_AXI_awsize);
        p_38_M02_AXI_awsize->set_sv_netview_offsetfromdp(7777592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_awburst.bind(*p_38_M02_AXI_awburst);
        p_38_M02_AXI_awburst->set_sv_netview_offsetfromdp(7777648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_awlock.bind(*p_38_M02_AXI_awlock);
        p_38_M02_AXI_awlock->set_sv_netview_offsetfromdp(7777704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_awcache.bind(*p_38_M02_AXI_awcache);
        p_38_M02_AXI_awcache->set_sv_netview_offsetfromdp(7777760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_awprot.bind(*p_38_M02_AXI_awprot);
        p_38_M02_AXI_awprot->set_sv_netview_offsetfromdp(7777816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_awqos.bind(*p_38_M02_AXI_awqos);
        p_38_M02_AXI_awqos->set_sv_netview_offsetfromdp(7777872);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M02_AXI_awuser.bind(*p_38_M02_AXI_awuser);
        p_38_M02_AXI_awuser->set_sv_netview_offsetfromdp(7777928);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_awvalid.bind(*p_38_M02_AXI_awvalid);
        p_38_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7777984);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_awready.bind(*p_38_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M02_AXI_wdata.bind(*p_38_M02_AXI_wdata);
        p_38_M02_AXI_wdata->set_sv_netview_offsetfromdp(7778096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M02_AXI_wstrb.bind(*p_38_M02_AXI_wstrb);
        p_38_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7778152);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wlast.bind(*p_38_M02_AXI_wlast);
        p_38_M02_AXI_wlast->set_sv_netview_offsetfromdp(7778208);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M02_AXI_wuser.bind(*p_38_M02_AXI_wuser);
        p_38_M02_AXI_wuser->set_sv_netview_offsetfromdp(7778264);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wvalid.bind(*p_38_M02_AXI_wvalid);
        p_38_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7778320);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wready.bind(*p_38_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_bid.bind(*p_38_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_bresp.bind(*p_38_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M02_AXI_buser.bind(*p_38_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_bvalid.bind(*p_38_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_bready.bind(*p_38_M02_AXI_bready);
        p_38_M02_AXI_bready->set_sv_netview_offsetfromdp(7778656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_arid.bind(*p_38_M02_AXI_arid);
        p_38_M02_AXI_arid->set_sv_netview_offsetfromdp(7778712);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M02_AXI_araddr.bind(*p_38_M02_AXI_araddr);
        p_38_M02_AXI_araddr->set_sv_netview_offsetfromdp(7778768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M02_AXI_arlen.bind(*p_38_M02_AXI_arlen);
        p_38_M02_AXI_arlen->set_sv_netview_offsetfromdp(7778824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_arsize.bind(*p_38_M02_AXI_arsize);
        p_38_M02_AXI_arsize->set_sv_netview_offsetfromdp(7778880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_arburst.bind(*p_38_M02_AXI_arburst);
        p_38_M02_AXI_arburst->set_sv_netview_offsetfromdp(7778936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_arlock.bind(*p_38_M02_AXI_arlock);
        p_38_M02_AXI_arlock->set_sv_netview_offsetfromdp(7778992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_arcache.bind(*p_38_M02_AXI_arcache);
        p_38_M02_AXI_arcache->set_sv_netview_offsetfromdp(7779048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_arprot.bind(*p_38_M02_AXI_arprot);
        p_38_M02_AXI_arprot->set_sv_netview_offsetfromdp(7779104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_arqos.bind(*p_38_M02_AXI_arqos);
        p_38_M02_AXI_arqos->set_sv_netview_offsetfromdp(7779160);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M02_AXI_aruser.bind(*p_38_M02_AXI_aruser);
        p_38_M02_AXI_aruser->set_sv_netview_offsetfromdp(7779216);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_arvalid.bind(*p_38_M02_AXI_arvalid);
        p_38_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7779272);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_arready.bind(*p_38_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_rid.bind(*p_38_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M02_AXI_rdata.bind(*p_38_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_rresp.bind(*p_38_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rlast.bind(*p_38_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M02_AXI_ruser.bind(*p_38_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rvalid.bind(*p_38_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rready.bind(*p_38_M02_AXI_rready);
        p_38_M02_AXI_rready->set_sv_netview_offsetfromdp(7779720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_awid.bind(*p_38_M03_AXI_awid);
        p_38_M03_AXI_awid->set_sv_netview_offsetfromdp(7779776);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M03_AXI_awaddr.bind(*p_38_M03_AXI_awaddr);
        p_38_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7779832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M03_AXI_awlen.bind(*p_38_M03_AXI_awlen);
        p_38_M03_AXI_awlen->set_sv_netview_offsetfromdp(7779888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_awsize.bind(*p_38_M03_AXI_awsize);
        p_38_M03_AXI_awsize->set_sv_netview_offsetfromdp(7779944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_awburst.bind(*p_38_M03_AXI_awburst);
        p_38_M03_AXI_awburst->set_sv_netview_offsetfromdp(7780000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_awlock.bind(*p_38_M03_AXI_awlock);
        p_38_M03_AXI_awlock->set_sv_netview_offsetfromdp(7780056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_awcache.bind(*p_38_M03_AXI_awcache);
        p_38_M03_AXI_awcache->set_sv_netview_offsetfromdp(7780112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_awprot.bind(*p_38_M03_AXI_awprot);
        p_38_M03_AXI_awprot->set_sv_netview_offsetfromdp(7780168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_awqos.bind(*p_38_M03_AXI_awqos);
        p_38_M03_AXI_awqos->set_sv_netview_offsetfromdp(7780224);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M03_AXI_awuser.bind(*p_38_M03_AXI_awuser);
        p_38_M03_AXI_awuser->set_sv_netview_offsetfromdp(7780280);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_awvalid.bind(*p_38_M03_AXI_awvalid);
        p_38_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7780336);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_awready.bind(*p_38_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M03_AXI_wdata.bind(*p_38_M03_AXI_wdata);
        p_38_M03_AXI_wdata->set_sv_netview_offsetfromdp(7780448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M03_AXI_wstrb.bind(*p_38_M03_AXI_wstrb);
        p_38_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7780504);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wlast.bind(*p_38_M03_AXI_wlast);
        p_38_M03_AXI_wlast->set_sv_netview_offsetfromdp(7780560);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M03_AXI_wuser.bind(*p_38_M03_AXI_wuser);
        p_38_M03_AXI_wuser->set_sv_netview_offsetfromdp(7780616);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wvalid.bind(*p_38_M03_AXI_wvalid);
        p_38_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7780672);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wready.bind(*p_38_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_bid.bind(*p_38_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_bresp.bind(*p_38_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M03_AXI_buser.bind(*p_38_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_bvalid.bind(*p_38_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_bready.bind(*p_38_M03_AXI_bready);
        p_38_M03_AXI_bready->set_sv_netview_offsetfromdp(7781008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_arid.bind(*p_38_M03_AXI_arid);
        p_38_M03_AXI_arid->set_sv_netview_offsetfromdp(7781064);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M03_AXI_araddr.bind(*p_38_M03_AXI_araddr);
        p_38_M03_AXI_araddr->set_sv_netview_offsetfromdp(7781120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M03_AXI_arlen.bind(*p_38_M03_AXI_arlen);
        p_38_M03_AXI_arlen->set_sv_netview_offsetfromdp(7781176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_arsize.bind(*p_38_M03_AXI_arsize);
        p_38_M03_AXI_arsize->set_sv_netview_offsetfromdp(7781232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_arburst.bind(*p_38_M03_AXI_arburst);
        p_38_M03_AXI_arburst->set_sv_netview_offsetfromdp(7781288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_arlock.bind(*p_38_M03_AXI_arlock);
        p_38_M03_AXI_arlock->set_sv_netview_offsetfromdp(7781344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_arcache.bind(*p_38_M03_AXI_arcache);
        p_38_M03_AXI_arcache->set_sv_netview_offsetfromdp(7781400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_arprot.bind(*p_38_M03_AXI_arprot);
        p_38_M03_AXI_arprot->set_sv_netview_offsetfromdp(7781456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_arqos.bind(*p_38_M03_AXI_arqos);
        p_38_M03_AXI_arqos->set_sv_netview_offsetfromdp(7781512);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M03_AXI_aruser.bind(*p_38_M03_AXI_aruser);
        p_38_M03_AXI_aruser->set_sv_netview_offsetfromdp(7781568);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_arvalid.bind(*p_38_M03_AXI_arvalid);
        p_38_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7781624);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_arready.bind(*p_38_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_rid.bind(*p_38_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M03_AXI_rdata.bind(*p_38_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_rresp.bind(*p_38_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rlast.bind(*p_38_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M03_AXI_ruser.bind(*p_38_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rvalid.bind(*p_38_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rready.bind(*p_38_M03_AXI_rready);
        p_38_M03_AXI_rready->set_sv_netview_offsetfromdp(7782072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_awid.bind(*p_38_M04_AXI_awid);
        p_38_M04_AXI_awid->set_sv_netview_offsetfromdp(7782128);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M04_AXI_awaddr.bind(*p_38_M04_AXI_awaddr);
        p_38_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7782184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M04_AXI_awlen.bind(*p_38_M04_AXI_awlen);
        p_38_M04_AXI_awlen->set_sv_netview_offsetfromdp(7782240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_awsize.bind(*p_38_M04_AXI_awsize);
        p_38_M04_AXI_awsize->set_sv_netview_offsetfromdp(7782296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_awburst.bind(*p_38_M04_AXI_awburst);
        p_38_M04_AXI_awburst->set_sv_netview_offsetfromdp(7782352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_awlock.bind(*p_38_M04_AXI_awlock);
        p_38_M04_AXI_awlock->set_sv_netview_offsetfromdp(7782408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_awcache.bind(*p_38_M04_AXI_awcache);
        p_38_M04_AXI_awcache->set_sv_netview_offsetfromdp(7782464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_awprot.bind(*p_38_M04_AXI_awprot);
        p_38_M04_AXI_awprot->set_sv_netview_offsetfromdp(7782520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_awqos.bind(*p_38_M04_AXI_awqos);
        p_38_M04_AXI_awqos->set_sv_netview_offsetfromdp(7782576);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M04_AXI_awuser.bind(*p_38_M04_AXI_awuser);
        p_38_M04_AXI_awuser->set_sv_netview_offsetfromdp(7782632);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_awvalid.bind(*p_38_M04_AXI_awvalid);
        p_38_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7782688);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_awready.bind(*p_38_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M04_AXI_wdata.bind(*p_38_M04_AXI_wdata);
        p_38_M04_AXI_wdata->set_sv_netview_offsetfromdp(7782800);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M04_AXI_wstrb.bind(*p_38_M04_AXI_wstrb);
        p_38_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7782856);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wlast.bind(*p_38_M04_AXI_wlast);
        p_38_M04_AXI_wlast->set_sv_netview_offsetfromdp(7782912);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M04_AXI_wuser.bind(*p_38_M04_AXI_wuser);
        p_38_M04_AXI_wuser->set_sv_netview_offsetfromdp(7782968);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wvalid.bind(*p_38_M04_AXI_wvalid);
        p_38_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7783024);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wready.bind(*p_38_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_bid.bind(*p_38_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_bresp.bind(*p_38_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M04_AXI_buser.bind(*p_38_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_bvalid.bind(*p_38_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_bready.bind(*p_38_M04_AXI_bready);
        p_38_M04_AXI_bready->set_sv_netview_offsetfromdp(7783360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_arid.bind(*p_38_M04_AXI_arid);
        p_38_M04_AXI_arid->set_sv_netview_offsetfromdp(7783416);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M04_AXI_araddr.bind(*p_38_M04_AXI_araddr);
        p_38_M04_AXI_araddr->set_sv_netview_offsetfromdp(7783472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M04_AXI_arlen.bind(*p_38_M04_AXI_arlen);
        p_38_M04_AXI_arlen->set_sv_netview_offsetfromdp(7783528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_arsize.bind(*p_38_M04_AXI_arsize);
        p_38_M04_AXI_arsize->set_sv_netview_offsetfromdp(7783584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_arburst.bind(*p_38_M04_AXI_arburst);
        p_38_M04_AXI_arburst->set_sv_netview_offsetfromdp(7783640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_arlock.bind(*p_38_M04_AXI_arlock);
        p_38_M04_AXI_arlock->set_sv_netview_offsetfromdp(7783696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_arcache.bind(*p_38_M04_AXI_arcache);
        p_38_M04_AXI_arcache->set_sv_netview_offsetfromdp(7783752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_arprot.bind(*p_38_M04_AXI_arprot);
        p_38_M04_AXI_arprot->set_sv_netview_offsetfromdp(7783808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_arqos.bind(*p_38_M04_AXI_arqos);
        p_38_M04_AXI_arqos->set_sv_netview_offsetfromdp(7783864);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->M04_AXI_aruser.bind(*p_38_M04_AXI_aruser);
        p_38_M04_AXI_aruser->set_sv_netview_offsetfromdp(7783920);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_arvalid.bind(*p_38_M04_AXI_arvalid);
        p_38_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7783976);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_arready.bind(*p_38_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_rid.bind(*p_38_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M04_AXI_rdata.bind(*p_38_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_rresp.bind(*p_38_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rlast.bind(*p_38_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->M04_AXI_ruser.bind(*p_38_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rvalid.bind(*p_38_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rready.bind(*p_38_M04_AXI_rready);
        p_38_M04_AXI_rready->set_sv_netview_offsetfromdp(7784424);
        sc_inst_39 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_39->xsim_set_dbg_index(2357);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->s_axi_awaddr.bind(*p_39_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_awlen.bind(*p_39_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awsize.bind(*p_39_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_awburst.bind(*p_39_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->s_axi_awlock.bind(*p_39_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_awcache.bind(*p_39_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awprot.bind(*p_39_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_awregion.bind(*p_39_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_awqos.bind(*p_39_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_39_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awvalid.bind(*p_39_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awready.bind(*p_39_s_axi_awready);
        p_39_s_axi_awready->set_sv_netview_offsetfromdp(7785200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_wdata.bind(*p_39_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_wstrb.bind(*p_39_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_39_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wlast.bind(*p_39_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_39_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wvalid.bind(*p_39_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wready.bind(*p_39_s_axi_wready);
        p_39_s_axi_wready->set_sv_netview_offsetfromdp(7785480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_bresp.bind(*p_39_s_axi_bresp);
        p_39_s_axi_bresp->set_sv_netview_offsetfromdp(7785536);
        xsim_sc_channel<0, bool > *p_39_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bvalid.bind(*p_39_s_axi_bvalid);
        p_39_s_axi_bvalid->set_sv_netview_offsetfromdp(7785592);
        xsim_sc_channel<0, bool > *p_39_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bready.bind(*p_39_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->s_axi_araddr.bind(*p_39_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_arlen.bind(*p_39_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arsize.bind(*p_39_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_arburst.bind(*p_39_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->s_axi_arlock.bind(*p_39_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_arcache.bind(*p_39_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arprot.bind(*p_39_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_arregion.bind(*p_39_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_arqos.bind(*p_39_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_39_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arvalid.bind(*p_39_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arready.bind(*p_39_s_axi_arready);
        p_39_s_axi_arready->set_sv_netview_offsetfromdp(7786264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_rdata.bind(*p_39_s_axi_rdata);
        p_39_s_axi_rdata->set_sv_netview_offsetfromdp(7786320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_rresp.bind(*p_39_s_axi_rresp);
        p_39_s_axi_rresp->set_sv_netview_offsetfromdp(7786376);
        xsim_sc_channel<0, bool > *p_39_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rlast.bind(*p_39_s_axi_rlast);
        p_39_s_axi_rlast->set_sv_netview_offsetfromdp(7786432);
        xsim_sc_channel<0, bool > *p_39_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rvalid.bind(*p_39_s_axi_rvalid);
        p_39_s_axi_rvalid->set_sv_netview_offsetfromdp(7786488);
        xsim_sc_channel<0, bool > *p_39_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rready.bind(*p_39_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->m_axi_awaddr.bind(*p_39_m_axi_awaddr);
        p_39_m_axi_awaddr->set_sv_netview_offsetfromdp(7786600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->m_axi_awlen.bind(*p_39_m_axi_awlen);
        p_39_m_axi_awlen->set_sv_netview_offsetfromdp(7786656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_awsize.bind(*p_39_m_axi_awsize);
        p_39_m_axi_awsize->set_sv_netview_offsetfromdp(7786712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_awburst.bind(*p_39_m_axi_awburst);
        p_39_m_axi_awburst->set_sv_netview_offsetfromdp(7786768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->m_axi_awlock.bind(*p_39_m_axi_awlock);
        p_39_m_axi_awlock->set_sv_netview_offsetfromdp(7786824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_awcache.bind(*p_39_m_axi_awcache);
        p_39_m_axi_awcache->set_sv_netview_offsetfromdp(7786880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_awprot.bind(*p_39_m_axi_awprot);
        p_39_m_axi_awprot->set_sv_netview_offsetfromdp(7786936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_awregion.bind(*p_39_m_axi_awregion);
        p_39_m_axi_awregion->set_sv_netview_offsetfromdp(7786992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_awqos.bind(*p_39_m_axi_awqos);
        p_39_m_axi_awqos->set_sv_netview_offsetfromdp(7787048);
        xsim_sc_channel<0, bool > *p_39_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_awvalid.bind(*p_39_m_axi_awvalid);
        p_39_m_axi_awvalid->set_sv_netview_offsetfromdp(7787104);
        xsim_sc_channel<0, bool > *p_39_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_awready.bind(*p_39_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_wdata.bind(*p_39_m_axi_wdata);
        p_39_m_axi_wdata->set_sv_netview_offsetfromdp(7787216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_wstrb.bind(*p_39_m_axi_wstrb);
        p_39_m_axi_wstrb->set_sv_netview_offsetfromdp(7787272);
        xsim_sc_channel<0, bool > *p_39_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_wlast.bind(*p_39_m_axi_wlast);
        p_39_m_axi_wlast->set_sv_netview_offsetfromdp(7787328);
        xsim_sc_channel<0, bool > *p_39_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_wvalid.bind(*p_39_m_axi_wvalid);
        p_39_m_axi_wvalid->set_sv_netview_offsetfromdp(7787384);
        xsim_sc_channel<0, bool > *p_39_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_wready.bind(*p_39_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_bresp.bind(*p_39_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_39_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_bvalid.bind(*p_39_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_39_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_bready.bind(*p_39_m_axi_bready);
        p_39_m_axi_bready->set_sv_netview_offsetfromdp(7787608);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->m_axi_araddr.bind(*p_39_m_axi_araddr);
        p_39_m_axi_araddr->set_sv_netview_offsetfromdp(7787664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->m_axi_arlen.bind(*p_39_m_axi_arlen);
        p_39_m_axi_arlen->set_sv_netview_offsetfromdp(7787720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_arsize.bind(*p_39_m_axi_arsize);
        p_39_m_axi_arsize->set_sv_netview_offsetfromdp(7787776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_arburst.bind(*p_39_m_axi_arburst);
        p_39_m_axi_arburst->set_sv_netview_offsetfromdp(7787832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->m_axi_arlock.bind(*p_39_m_axi_arlock);
        p_39_m_axi_arlock->set_sv_netview_offsetfromdp(7787888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_arcache.bind(*p_39_m_axi_arcache);
        p_39_m_axi_arcache->set_sv_netview_offsetfromdp(7787944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_arprot.bind(*p_39_m_axi_arprot);
        p_39_m_axi_arprot->set_sv_netview_offsetfromdp(7788000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_arregion.bind(*p_39_m_axi_arregion);
        p_39_m_axi_arregion->set_sv_netview_offsetfromdp(7788056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_arqos.bind(*p_39_m_axi_arqos);
        p_39_m_axi_arqos->set_sv_netview_offsetfromdp(7788112);
        xsim_sc_channel<0, bool > *p_39_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_arvalid.bind(*p_39_m_axi_arvalid);
        p_39_m_axi_arvalid->set_sv_netview_offsetfromdp(7788168);
        xsim_sc_channel<0, bool > *p_39_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_arready.bind(*p_39_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_rdata.bind(*p_39_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_rresp.bind(*p_39_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_39_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_rlast.bind(*p_39_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_39_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_rvalid.bind(*p_39_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_39_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_rready.bind(*p_39_m_axi_rready);
        p_39_m_axi_rready->set_sv_netview_offsetfromdp(7788504);
        sc_inst_40 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_40->xsim_set_dbg_index(2553);
        xsim_sc_channel<0, bool > *p_40_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aclk.bind(*p_40_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_40_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aresetn.bind(*p_40_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(7888888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(7889168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(7889224);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(7889280);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(7889840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(7889896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(7889952);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(7890008);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(7890064);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<0, bool > *p_40_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_a.bind(*p_40_bram_rst_a);
        p_40_bram_rst_a->set_sv_netview_offsetfromdp(7890176);
        xsim_sc_channel<0, bool > *p_40_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_a.bind(*p_40_bram_clk_a);
        p_40_bram_clk_a->set_sv_netview_offsetfromdp(7890232);
        xsim_sc_channel<0, bool > *p_40_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_a.bind(*p_40_bram_en_a);
        p_40_bram_en_a->set_sv_netview_offsetfromdp(7890288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_a.bind(*p_40_bram_we_a);
        p_40_bram_we_a->set_sv_netview_offsetfromdp(7890344);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_a.bind(*p_40_bram_addr_a);
        p_40_bram_addr_a->set_sv_netview_offsetfromdp(7890400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_a.bind(*p_40_bram_wrdata_a);
        p_40_bram_wrdata_a->set_sv_netview_offsetfromdp(7890456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_a.bind(*p_40_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_40_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_b.bind(*p_40_bram_rst_b);
        p_40_bram_rst_b->set_sv_netview_offsetfromdp(7890568);
        xsim_sc_channel<0, bool > *p_40_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_b.bind(*p_40_bram_clk_b);
        p_40_bram_clk_b->set_sv_netview_offsetfromdp(7890624);
        xsim_sc_channel<0, bool > *p_40_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_b.bind(*p_40_bram_en_b);
        p_40_bram_en_b->set_sv_netview_offsetfromdp(7890680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_b.bind(*p_40_bram_we_b);
        p_40_bram_we_b->set_sv_netview_offsetfromdp(7890736);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_b.bind(*p_40_bram_addr_b);
        p_40_bram_addr_b->set_sv_netview_offsetfromdp(7890792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_b.bind(*p_40_bram_wrdata_b);
        p_40_bram_wrdata_b->set_sv_netview_offsetfromdp(7890848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_b.bind(*p_40_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_b);
        sc_inst_41 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_41->xsim_set_dbg_index(2555);
        xsim_sc_channel<0, bool > *p_41_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aclk.bind(*p_41_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_41_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aresetn.bind(*p_41_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->s_axi_awaddr.bind(*p_41_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->s_axi_awlen.bind(*p_41_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_awsize.bind(*p_41_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_awburst.bind(*p_41_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_41_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awlock.bind(*p_41_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->s_axi_awcache.bind(*p_41_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_awprot.bind(*p_41_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awvalid.bind(*p_41_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awready.bind(*p_41_s_axi_awready);
        p_41_s_axi_awready->set_sv_netview_offsetfromdp(7952688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->s_axi_wdata.bind(*p_41_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->s_axi_wstrb.bind(*p_41_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_41_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wlast.bind(*p_41_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_41_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wvalid.bind(*p_41_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wready.bind(*p_41_s_axi_wready);
        p_41_s_axi_wready->set_sv_netview_offsetfromdp(7952968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_bresp.bind(*p_41_s_axi_bresp);
        p_41_s_axi_bresp->set_sv_netview_offsetfromdp(7953024);
        xsim_sc_channel<0, bool > *p_41_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bvalid.bind(*p_41_s_axi_bvalid);
        p_41_s_axi_bvalid->set_sv_netview_offsetfromdp(7953080);
        xsim_sc_channel<0, bool > *p_41_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bready.bind(*p_41_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->s_axi_araddr.bind(*p_41_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->s_axi_arlen.bind(*p_41_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_arsize.bind(*p_41_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_arburst.bind(*p_41_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_41_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arlock.bind(*p_41_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->s_axi_arcache.bind(*p_41_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_arprot.bind(*p_41_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arvalid.bind(*p_41_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arready.bind(*p_41_s_axi_arready);
        p_41_s_axi_arready->set_sv_netview_offsetfromdp(7953640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->s_axi_rdata.bind(*p_41_s_axi_rdata);
        p_41_s_axi_rdata->set_sv_netview_offsetfromdp(7953696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_rresp.bind(*p_41_s_axi_rresp);
        p_41_s_axi_rresp->set_sv_netview_offsetfromdp(7953752);
        xsim_sc_channel<0, bool > *p_41_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rlast.bind(*p_41_s_axi_rlast);
        p_41_s_axi_rlast->set_sv_netview_offsetfromdp(7953808);
        xsim_sc_channel<0, bool > *p_41_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rvalid.bind(*p_41_s_axi_rvalid);
        p_41_s_axi_rvalid->set_sv_netview_offsetfromdp(7953864);
        xsim_sc_channel<0, bool > *p_41_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rready.bind(*p_41_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_rready);
        xsim_sc_channel<0, bool > *p_41_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_rst_a.bind(*p_41_bram_rst_a);
        p_41_bram_rst_a->set_sv_netview_offsetfromdp(7953976);
        xsim_sc_channel<0, bool > *p_41_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_clk_a.bind(*p_41_bram_clk_a);
        p_41_bram_clk_a->set_sv_netview_offsetfromdp(7954032);
        xsim_sc_channel<0, bool > *p_41_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_en_a.bind(*p_41_bram_en_a);
        p_41_bram_en_a->set_sv_netview_offsetfromdp(7954088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->bram_we_a.bind(*p_41_bram_we_a);
        p_41_bram_we_a->set_sv_netview_offsetfromdp(7954144);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->bram_addr_a.bind(*p_41_bram_addr_a);
        p_41_bram_addr_a->set_sv_netview_offsetfromdp(7954200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_wrdata_a.bind(*p_41_bram_wrdata_a);
        p_41_bram_wrdata_a->set_sv_netview_offsetfromdp(7954256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_rddata_a.bind(*p_41_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_41_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_41_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_rst_b.bind(*p_41_bram_rst_b);
        p_41_bram_rst_b->set_sv_netview_offsetfromdp(7954368);
        xsim_sc_channel<0, bool > *p_41_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_clk_b.bind(*p_41_bram_clk_b);
        p_41_bram_clk_b->set_sv_netview_offsetfromdp(7954424);
        xsim_sc_channel<0, bool > *p_41_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_41->bram_en_b.bind(*p_41_bram_en_b);
        p_41_bram_en_b->set_sv_netview_offsetfromdp(7954480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->bram_we_b.bind(*p_41_bram_we_b);
        p_41_bram_we_b->set_sv_netview_offsetfromdp(7954536);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->bram_addr_b.bind(*p_41_bram_addr_b);
        p_41_bram_addr_b->set_sv_netview_offsetfromdp(7954592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_wrdata_b.bind(*p_41_bram_wrdata_b);
        p_41_bram_wrdata_b->set_sv_netview_offsetfromdp(7954648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->bram_rddata_b.bind(*p_41_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_41_bram_rddata_b);
        sc_inst_42 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_42->xsim_set_dbg_index(2557);
        xsim_sc_channel<0, bool > *p_42_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aclk.bind(*p_42_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aresetn.bind(*p_42_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_awlen.bind(*p_42_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awsize.bind(*p_42_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awburst.bind(*p_42_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_42_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awlock.bind(*p_42_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awcache.bind(*p_42_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(8016488);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wlast.bind(*p_42_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(8016768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(8016824);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(8016880);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_arlen.bind(*p_42_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arsize.bind(*p_42_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arburst.bind(*p_42_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_42_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arlock.bind(*p_42_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arcache.bind(*p_42_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(8017440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(8017496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(8017552);
        xsim_sc_channel<0, bool > *p_42_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rlast.bind(*p_42_s_axi_rlast);
        p_42_s_axi_rlast->set_sv_netview_offsetfromdp(8017608);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(8017664);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<0, bool > *p_42_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_rst_a.bind(*p_42_bram_rst_a);
        p_42_bram_rst_a->set_sv_netview_offsetfromdp(8017776);
        xsim_sc_channel<0, bool > *p_42_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_clk_a.bind(*p_42_bram_clk_a);
        p_42_bram_clk_a->set_sv_netview_offsetfromdp(8017832);
        xsim_sc_channel<0, bool > *p_42_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_en_a.bind(*p_42_bram_en_a);
        p_42_bram_en_a->set_sv_netview_offsetfromdp(8017888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->bram_we_a.bind(*p_42_bram_we_a);
        p_42_bram_we_a->set_sv_netview_offsetfromdp(8017944);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->bram_addr_a.bind(*p_42_bram_addr_a);
        p_42_bram_addr_a->set_sv_netview_offsetfromdp(8018000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_wrdata_a.bind(*p_42_bram_wrdata_a);
        p_42_bram_wrdata_a->set_sv_netview_offsetfromdp(8018056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_rddata_a.bind(*p_42_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_42_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_42_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_rst_b.bind(*p_42_bram_rst_b);
        p_42_bram_rst_b->set_sv_netview_offsetfromdp(8018168);
        xsim_sc_channel<0, bool > *p_42_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_clk_b.bind(*p_42_bram_clk_b);
        p_42_bram_clk_b->set_sv_netview_offsetfromdp(8018224);
        xsim_sc_channel<0, bool > *p_42_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_42->bram_en_b.bind(*p_42_bram_en_b);
        p_42_bram_en_b->set_sv_netview_offsetfromdp(8018280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->bram_we_b.bind(*p_42_bram_we_b);
        p_42_bram_we_b->set_sv_netview_offsetfromdp(8018336);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->bram_addr_b.bind(*p_42_bram_addr_b);
        p_42_bram_addr_b->set_sv_netview_offsetfromdp(8018392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_wrdata_b.bind(*p_42_bram_wrdata_b);
        p_42_bram_wrdata_b->set_sv_netview_offsetfromdp(8018448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->bram_rddata_b.bind(*p_42_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_42_bram_rddata_b);
        sc_inst_43 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_43->xsim_set_dbg_index(2559);
        xsim_sc_channel<0, bool > *p_43_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aclk.bind(*p_43_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_43_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aresetn.bind(*p_43_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_awaddr.bind(*p_43_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_awlen.bind(*p_43_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awsize.bind(*p_43_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_awburst.bind(*p_43_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awlock.bind(*p_43_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_awcache.bind(*p_43_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awprot.bind(*p_43_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awvalid.bind(*p_43_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awready.bind(*p_43_s_axi_awready);
        p_43_s_axi_awready->set_sv_netview_offsetfromdp(8080288);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_wdata.bind(*p_43_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_wstrb.bind(*p_43_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wlast.bind(*p_43_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wvalid.bind(*p_43_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wready.bind(*p_43_s_axi_wready);
        p_43_s_axi_wready->set_sv_netview_offsetfromdp(8080568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_bresp.bind(*p_43_s_axi_bresp);
        p_43_s_axi_bresp->set_sv_netview_offsetfromdp(8080624);
        xsim_sc_channel<0, bool > *p_43_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bvalid.bind(*p_43_s_axi_bvalid);
        p_43_s_axi_bvalid->set_sv_netview_offsetfromdp(8080680);
        xsim_sc_channel<0, bool > *p_43_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bready.bind(*p_43_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_araddr.bind(*p_43_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_arlen.bind(*p_43_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arsize.bind(*p_43_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_arburst.bind(*p_43_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arlock.bind(*p_43_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_arcache.bind(*p_43_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arprot.bind(*p_43_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arvalid.bind(*p_43_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arready.bind(*p_43_s_axi_arready);
        p_43_s_axi_arready->set_sv_netview_offsetfromdp(8081240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_rdata.bind(*p_43_s_axi_rdata);
        p_43_s_axi_rdata->set_sv_netview_offsetfromdp(8081296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_rresp.bind(*p_43_s_axi_rresp);
        p_43_s_axi_rresp->set_sv_netview_offsetfromdp(8081352);
        xsim_sc_channel<0, bool > *p_43_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rlast.bind(*p_43_s_axi_rlast);
        p_43_s_axi_rlast->set_sv_netview_offsetfromdp(8081408);
        xsim_sc_channel<0, bool > *p_43_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rvalid.bind(*p_43_s_axi_rvalid);
        p_43_s_axi_rvalid->set_sv_netview_offsetfromdp(8081464);
        xsim_sc_channel<0, bool > *p_43_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rready.bind(*p_43_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_a.bind(*p_43_bram_rst_a);
        p_43_bram_rst_a->set_sv_netview_offsetfromdp(8081576);
        xsim_sc_channel<0, bool > *p_43_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_a.bind(*p_43_bram_clk_a);
        p_43_bram_clk_a->set_sv_netview_offsetfromdp(8081632);
        xsim_sc_channel<0, bool > *p_43_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_a.bind(*p_43_bram_en_a);
        p_43_bram_en_a->set_sv_netview_offsetfromdp(8081688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_a.bind(*p_43_bram_we_a);
        p_43_bram_we_a->set_sv_netview_offsetfromdp(8081744);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_a.bind(*p_43_bram_addr_a);
        p_43_bram_addr_a->set_sv_netview_offsetfromdp(8081800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_a.bind(*p_43_bram_wrdata_a);
        p_43_bram_wrdata_a->set_sv_netview_offsetfromdp(8081856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_a.bind(*p_43_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_43_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_b.bind(*p_43_bram_rst_b);
        p_43_bram_rst_b->set_sv_netview_offsetfromdp(8081968);
        xsim_sc_channel<0, bool > *p_43_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_b.bind(*p_43_bram_clk_b);
        p_43_bram_clk_b->set_sv_netview_offsetfromdp(8082024);
        xsim_sc_channel<0, bool > *p_43_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_b.bind(*p_43_bram_en_b);
        p_43_bram_en_b->set_sv_netview_offsetfromdp(8082080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_b.bind(*p_43_bram_we_b);
        p_43_bram_we_b->set_sv_netview_offsetfromdp(8082136);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_b.bind(*p_43_bram_addr_b);
        p_43_bram_addr_b->set_sv_netview_offsetfromdp(8082192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_b.bind(*p_43_bram_wrdata_b);
        p_43_bram_wrdata_b->set_sv_netview_offsetfromdp(8082248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_b.bind(*p_43_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_b);
        sc_inst_44 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_44->xsim_set_dbg_index(52);
        sc_inst_45 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_45->xsim_set_dbg_index(53);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_awlen.bind(*p_45_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_awburst.bind(*p_45_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awlock.bind(*p_45_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awcache.bind(*p_45_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awqos.bind(*p_45_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_45_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(8242528);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_45_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wlast.bind(*p_45_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_45_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(8242808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(8242864);
        xsim_sc_channel<0, bool > *p_45_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(8242920);
        xsim_sc_channel<0, bool > *p_45_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_arlen.bind(*p_45_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_arburst.bind(*p_45_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arlock.bind(*p_45_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arcache.bind(*p_45_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arqos.bind(*p_45_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_45_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(8243480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(8243536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(8243592);
        xsim_sc_channel<0, bool > *p_45_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rlast.bind(*p_45_s_axi_rlast);
        p_45_s_axi_rlast->set_sv_netview_offsetfromdp(8243648);
        xsim_sc_channel<0, bool > *p_45_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(8243704);
        xsim_sc_channel<0, bool > *p_45_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_awaddr.bind(*p_45_m_axi_awaddr);
        p_45_m_axi_awaddr->set_sv_netview_offsetfromdp(8243816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_awlen.bind(*p_45_m_axi_awlen);
        p_45_m_axi_awlen->set_sv_netview_offsetfromdp(8243872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awburst.bind(*p_45_m_axi_awburst);
        p_45_m_axi_awburst->set_sv_netview_offsetfromdp(8243928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->m_axi_awlock.bind(*p_45_m_axi_awlock);
        p_45_m_axi_awlock->set_sv_netview_offsetfromdp(8243984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_awcache.bind(*p_45_m_axi_awcache);
        p_45_m_axi_awcache->set_sv_netview_offsetfromdp(8244040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_awprot.bind(*p_45_m_axi_awprot);
        p_45_m_axi_awprot->set_sv_netview_offsetfromdp(8244096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_awqos.bind(*p_45_m_axi_awqos);
        p_45_m_axi_awqos->set_sv_netview_offsetfromdp(8244152);
        xsim_sc_channel<0, bool > *p_45_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awvalid.bind(*p_45_m_axi_awvalid);
        p_45_m_axi_awvalid->set_sv_netview_offsetfromdp(8244208);
        xsim_sc_channel<0, bool > *p_45_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awready.bind(*p_45_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_wdata.bind(*p_45_m_axi_wdata);
        p_45_m_axi_wdata->set_sv_netview_offsetfromdp(8244320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_wstrb.bind(*p_45_m_axi_wstrb);
        p_45_m_axi_wstrb->set_sv_netview_offsetfromdp(8244376);
        xsim_sc_channel<0, bool > *p_45_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wlast.bind(*p_45_m_axi_wlast);
        p_45_m_axi_wlast->set_sv_netview_offsetfromdp(8244432);
        xsim_sc_channel<0, bool > *p_45_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wvalid.bind(*p_45_m_axi_wvalid);
        p_45_m_axi_wvalid->set_sv_netview_offsetfromdp(8244488);
        xsim_sc_channel<0, bool > *p_45_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wready.bind(*p_45_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bresp.bind(*p_45_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bvalid.bind(*p_45_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bready.bind(*p_45_m_axi_bready);
        p_45_m_axi_bready->set_sv_netview_offsetfromdp(8244712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_araddr.bind(*p_45_m_axi_araddr);
        p_45_m_axi_araddr->set_sv_netview_offsetfromdp(8244768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_arlen.bind(*p_45_m_axi_arlen);
        p_45_m_axi_arlen->set_sv_netview_offsetfromdp(8244824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arburst.bind(*p_45_m_axi_arburst);
        p_45_m_axi_arburst->set_sv_netview_offsetfromdp(8244880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->m_axi_arlock.bind(*p_45_m_axi_arlock);
        p_45_m_axi_arlock->set_sv_netview_offsetfromdp(8244936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_arcache.bind(*p_45_m_axi_arcache);
        p_45_m_axi_arcache->set_sv_netview_offsetfromdp(8244992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_arprot.bind(*p_45_m_axi_arprot);
        p_45_m_axi_arprot->set_sv_netview_offsetfromdp(8245048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_arqos.bind(*p_45_m_axi_arqos);
        p_45_m_axi_arqos->set_sv_netview_offsetfromdp(8245104);
        xsim_sc_channel<0, bool > *p_45_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arvalid.bind(*p_45_m_axi_arvalid);
        p_45_m_axi_arvalid->set_sv_netview_offsetfromdp(8245160);
        xsim_sc_channel<0, bool > *p_45_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arready.bind(*p_45_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_rdata.bind(*p_45_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rresp.bind(*p_45_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rlast.bind(*p_45_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_45_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rvalid.bind(*p_45_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rready.bind(*p_45_m_axi_rready);
        p_45_m_axi_rready->set_sv_netview_offsetfromdp(8245496);
        sc_inst_46 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_46->xsim_set_dbg_index(2895);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(8778560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(8778784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(8778840);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(8778896);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(8779176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(8779232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(8779288);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(8779344);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(8779456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(8779512);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(8779568);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(8779680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(8779736);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(8779792);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(8780016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(8780072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(8780128);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(8780184);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(8780464);
        sc_inst_47 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_47->xsim_set_dbg_index(2936);
        xsim_sc_channel<0, bool > *p_47_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aclk.bind(*p_47_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aresetn.bind(*p_47_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_47_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(8817488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(8817712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(8817768);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(8817824);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_47_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(8818104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(8818160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(8818216);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(8818272);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_aclk.bind(*p_47_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_aresetn.bind(*p_47_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_47_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_47->m_axi_awaddr.bind(*p_47_m_axi_awaddr);
        p_47_m_axi_awaddr->set_sv_netview_offsetfromdp(8818496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->m_axi_awprot.bind(*p_47_m_axi_awprot);
        p_47_m_axi_awprot->set_sv_netview_offsetfromdp(8818552);
        xsim_sc_channel<0, bool > *p_47_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_awvalid.bind(*p_47_m_axi_awvalid);
        p_47_m_axi_awvalid->set_sv_netview_offsetfromdp(8818608);
        xsim_sc_channel<0, bool > *p_47_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_awready.bind(*p_47_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->m_axi_wdata.bind(*p_47_m_axi_wdata);
        p_47_m_axi_wdata->set_sv_netview_offsetfromdp(8818720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->m_axi_wstrb.bind(*p_47_m_axi_wstrb);
        p_47_m_axi_wstrb->set_sv_netview_offsetfromdp(8818776);
        xsim_sc_channel<0, bool > *p_47_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_wvalid.bind(*p_47_m_axi_wvalid);
        p_47_m_axi_wvalid->set_sv_netview_offsetfromdp(8818832);
        xsim_sc_channel<0, bool > *p_47_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_wready.bind(*p_47_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->m_axi_bresp.bind(*p_47_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_47_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_bvalid.bind(*p_47_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_47_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_bready.bind(*p_47_m_axi_bready);
        p_47_m_axi_bready->set_sv_netview_offsetfromdp(8819056);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_47_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_47->m_axi_araddr.bind(*p_47_m_axi_araddr);
        p_47_m_axi_araddr->set_sv_netview_offsetfromdp(8819112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->m_axi_arprot.bind(*p_47_m_axi_arprot);
        p_47_m_axi_arprot->set_sv_netview_offsetfromdp(8819168);
        xsim_sc_channel<0, bool > *p_47_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_arvalid.bind(*p_47_m_axi_arvalid);
        p_47_m_axi_arvalid->set_sv_netview_offsetfromdp(8819224);
        xsim_sc_channel<0, bool > *p_47_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_arready.bind(*p_47_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->m_axi_rdata.bind(*p_47_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->m_axi_rresp.bind(*p_47_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_47_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_rvalid.bind(*p_47_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_47_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->m_axi_rready.bind(*p_47_m_axi_rready);
        p_47_m_axi_rready->set_sv_netview_offsetfromdp(8819504);
        sc_inst_48 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_48->xsim_set_dbg_index(2937);
        xsim_sc_channel<0, bool > *p_48_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->aclk.bind(*p_48_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aclk);
        xsim_sc_channel<0, bool > *p_48_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->aresetn.bind(*p_48_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_48_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(8819888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(8820112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(8820168);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(8820224);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_48_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(8820504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(8820560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(8820616);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(8820672);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_48_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(8820784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(8820840);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(8820896);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(8821008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(8821064);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(8821120);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(8821344);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_48_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(8821400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(8821456);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(8821512);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(8821792);
        sc_inst_49 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.auto_cc");
        sc_inst_49->xsim_set_dbg_index(2980);
        xsim_sc_channel<0, bool > *p_49_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aclk.bind(*p_49_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_49_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aresetn.bind(*p_49_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_49_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(8858816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(8859040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(8859096);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(8859152);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_49_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(8859432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(8859488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(8859544);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(8859600);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_aclk.bind(*p_49_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_49_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_aresetn.bind(*p_49_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_49_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_49->m_axi_awaddr.bind(*p_49_m_axi_awaddr);
        p_49_m_axi_awaddr->set_sv_netview_offsetfromdp(8859824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_awprot.bind(*p_49_m_axi_awprot);
        p_49_m_axi_awprot->set_sv_netview_offsetfromdp(8859880);
        xsim_sc_channel<0, bool > *p_49_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awvalid.bind(*p_49_m_axi_awvalid);
        p_49_m_axi_awvalid->set_sv_netview_offsetfromdp(8859936);
        xsim_sc_channel<0, bool > *p_49_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awready.bind(*p_49_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_wdata.bind(*p_49_m_axi_wdata);
        p_49_m_axi_wdata->set_sv_netview_offsetfromdp(8860048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_wstrb.bind(*p_49_m_axi_wstrb);
        p_49_m_axi_wstrb->set_sv_netview_offsetfromdp(8860104);
        xsim_sc_channel<0, bool > *p_49_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wvalid.bind(*p_49_m_axi_wvalid);
        p_49_m_axi_wvalid->set_sv_netview_offsetfromdp(8860160);
        xsim_sc_channel<0, bool > *p_49_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wready.bind(*p_49_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_bresp.bind(*p_49_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bvalid.bind(*p_49_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bready.bind(*p_49_m_axi_bready);
        p_49_m_axi_bready->set_sv_netview_offsetfromdp(8860384);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_49_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_49->m_axi_araddr.bind(*p_49_m_axi_araddr);
        p_49_m_axi_araddr->set_sv_netview_offsetfromdp(8860440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_arprot.bind(*p_49_m_axi_arprot);
        p_49_m_axi_arprot->set_sv_netview_offsetfromdp(8860496);
        xsim_sc_channel<0, bool > *p_49_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arvalid.bind(*p_49_m_axi_arvalid);
        p_49_m_axi_arvalid->set_sv_netview_offsetfromdp(8860552);
        xsim_sc_channel<0, bool > *p_49_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arready.bind(*p_49_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_rdata.bind(*p_49_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_rresp.bind(*p_49_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rvalid.bind(*p_49_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rready.bind(*p_49_m_axi_rready);
        p_49_m_axi_rready->set_sv_netview_offsetfromdp(8860832);
        sc_inst_50 = new pfm_dynamic_m03_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.m03_regslice");
        sc_inst_50->xsim_set_dbg_index(2981);
        xsim_sc_channel<0, bool > *p_50_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->aclk.bind(*p_50_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aclk);
        xsim_sc_channel<0, bool > *p_50_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->aresetn.bind(*p_50_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(8861216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(8861440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(8861496);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(8861552);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(8861832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(8861888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(8861944);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(8862000);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(8862112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(8862168);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(8862224);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(8862336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(8862392);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(8862448);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(8862672);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(8862728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(8862784);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(8862840);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(8863120);
        sc_inst_51 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_51->xsim_set_dbg_index(1440);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(8873680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(8873904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(8873960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(8874016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(8874296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(8874352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(8874408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(8874464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(8874576);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_51_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(8874632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(8874688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_51_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(8874800);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_51_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(8874856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(8874912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(8875136);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(8875192);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_51_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(8875248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(8875304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_51_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(8875584);
        sc_inst_52 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_52->xsim_set_dbg_index(61);
        xsim_sc_channel<0, bool > *p_52_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->aclk.bind(*p_52_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aclk);
        xsim_sc_channel<0, bool > *p_52_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->aresetn.bind(*p_52_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_awid.bind(*p_52_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->S00_AXI_awaddr.bind(*p_52_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->S00_AXI_awlen.bind(*p_52_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->S00_AXI_awsize.bind(*p_52_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->S00_AXI_awburst.bind(*p_52_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_awlock.bind(*p_52_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->S00_AXI_awcache.bind(*p_52_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->S00_AXI_awprot.bind(*p_52_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->S00_AXI_awqos.bind(*p_52_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_awvalid.bind(*p_52_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_awready.bind(*p_52_S00_AXI_awready);
        p_52_S00_AXI_awready->set_sv_netview_offsetfromdp(9704680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->S00_AXI_wdata.bind(*p_52_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->S00_AXI_wstrb.bind(*p_52_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_wlast.bind(*p_52_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_wvalid.bind(*p_52_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_wready.bind(*p_52_S00_AXI_wready);
        p_52_S00_AXI_wready->set_sv_netview_offsetfromdp(9704960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_bid.bind(*p_52_S00_AXI_bid);
        p_52_S00_AXI_bid->set_sv_netview_offsetfromdp(9705016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->S00_AXI_bresp.bind(*p_52_S00_AXI_bresp);
        p_52_S00_AXI_bresp->set_sv_netview_offsetfromdp(9705072);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_bvalid.bind(*p_52_S00_AXI_bvalid);
        p_52_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9705128);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_bready.bind(*p_52_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_arid.bind(*p_52_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->S00_AXI_araddr.bind(*p_52_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->S00_AXI_arlen.bind(*p_52_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->S00_AXI_arsize.bind(*p_52_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->S00_AXI_arburst.bind(*p_52_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_arlock.bind(*p_52_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->S00_AXI_arcache.bind(*p_52_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->S00_AXI_arprot.bind(*p_52_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->S00_AXI_arqos.bind(*p_52_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_arvalid.bind(*p_52_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_arready.bind(*p_52_S00_AXI_arready);
        p_52_S00_AXI_arready->set_sv_netview_offsetfromdp(9705800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->S00_AXI_rid.bind(*p_52_S00_AXI_rid);
        p_52_S00_AXI_rid->set_sv_netview_offsetfromdp(9705856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->S00_AXI_rdata.bind(*p_52_S00_AXI_rdata);
        p_52_S00_AXI_rdata->set_sv_netview_offsetfromdp(9705912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->S00_AXI_rresp.bind(*p_52_S00_AXI_rresp);
        p_52_S00_AXI_rresp->set_sv_netview_offsetfromdp(9705968);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_rlast.bind(*p_52_S00_AXI_rlast);
        p_52_S00_AXI_rlast->set_sv_netview_offsetfromdp(9706024);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_rvalid.bind(*p_52_S00_AXI_rvalid);
        p_52_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9706080);
        xsim_sc_channel<0, bool > *p_52_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->S00_AXI_rready.bind(*p_52_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_52_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_52->M00_AXI_awaddr.bind(*p_52_M00_AXI_awaddr);
        p_52_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9706192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M00_AXI_awlen.bind(*p_52_M00_AXI_awlen);
        p_52_M00_AXI_awlen->set_sv_netview_offsetfromdp(9706248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M00_AXI_awsize.bind(*p_52_M00_AXI_awsize);
        p_52_M00_AXI_awsize->set_sv_netview_offsetfromdp(9706304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M00_AXI_awburst.bind(*p_52_M00_AXI_awburst);
        p_52_M00_AXI_awburst->set_sv_netview_offsetfromdp(9706360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M00_AXI_awlock.bind(*p_52_M00_AXI_awlock);
        p_52_M00_AXI_awlock->set_sv_netview_offsetfromdp(9706416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M00_AXI_awcache.bind(*p_52_M00_AXI_awcache);
        p_52_M00_AXI_awcache->set_sv_netview_offsetfromdp(9706472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M00_AXI_awprot.bind(*p_52_M00_AXI_awprot);
        p_52_M00_AXI_awprot->set_sv_netview_offsetfromdp(9706528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M00_AXI_awqos.bind(*p_52_M00_AXI_awqos);
        p_52_M00_AXI_awqos->set_sv_netview_offsetfromdp(9706584);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_awvalid.bind(*p_52_M00_AXI_awvalid);
        p_52_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9706640);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_awready.bind(*p_52_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->M00_AXI_wdata.bind(*p_52_M00_AXI_wdata);
        p_52_M00_AXI_wdata->set_sv_netview_offsetfromdp(9706752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M00_AXI_wstrb.bind(*p_52_M00_AXI_wstrb);
        p_52_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9706808);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_wlast.bind(*p_52_M00_AXI_wlast);
        p_52_M00_AXI_wlast->set_sv_netview_offsetfromdp(9706864);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_wvalid.bind(*p_52_M00_AXI_wvalid);
        p_52_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9706920);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_wready.bind(*p_52_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M00_AXI_bresp.bind(*p_52_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_bvalid.bind(*p_52_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_bready.bind(*p_52_M00_AXI_bready);
        p_52_M00_AXI_bready->set_sv_netview_offsetfromdp(9707144);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_52_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_52->M00_AXI_araddr.bind(*p_52_M00_AXI_araddr);
        p_52_M00_AXI_araddr->set_sv_netview_offsetfromdp(9707200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M00_AXI_arlen.bind(*p_52_M00_AXI_arlen);
        p_52_M00_AXI_arlen->set_sv_netview_offsetfromdp(9707256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M00_AXI_arsize.bind(*p_52_M00_AXI_arsize);
        p_52_M00_AXI_arsize->set_sv_netview_offsetfromdp(9707312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M00_AXI_arburst.bind(*p_52_M00_AXI_arburst);
        p_52_M00_AXI_arburst->set_sv_netview_offsetfromdp(9707368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M00_AXI_arlock.bind(*p_52_M00_AXI_arlock);
        p_52_M00_AXI_arlock->set_sv_netview_offsetfromdp(9707424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M00_AXI_arcache.bind(*p_52_M00_AXI_arcache);
        p_52_M00_AXI_arcache->set_sv_netview_offsetfromdp(9707480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M00_AXI_arprot.bind(*p_52_M00_AXI_arprot);
        p_52_M00_AXI_arprot->set_sv_netview_offsetfromdp(9707536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M00_AXI_arqos.bind(*p_52_M00_AXI_arqos);
        p_52_M00_AXI_arqos->set_sv_netview_offsetfromdp(9707592);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_arvalid.bind(*p_52_M00_AXI_arvalid);
        p_52_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9707648);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_arready.bind(*p_52_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->M00_AXI_rdata.bind(*p_52_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M00_AXI_rresp.bind(*p_52_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_rlast.bind(*p_52_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_rvalid.bind(*p_52_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_52_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M00_AXI_rready.bind(*p_52_M00_AXI_rready);
        p_52_M00_AXI_rready->set_sv_netview_offsetfromdp(9707984);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_M01_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->M01_AXI_awaddr.bind(*p_52_M01_AXI_awaddr);
        p_52_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9708040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M01_AXI_awlen.bind(*p_52_M01_AXI_awlen);
        p_52_M01_AXI_awlen->set_sv_netview_offsetfromdp(9708096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M01_AXI_awsize.bind(*p_52_M01_AXI_awsize);
        p_52_M01_AXI_awsize->set_sv_netview_offsetfromdp(9708152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M01_AXI_awburst.bind(*p_52_M01_AXI_awburst);
        p_52_M01_AXI_awburst->set_sv_netview_offsetfromdp(9708208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M01_AXI_awlock.bind(*p_52_M01_AXI_awlock);
        p_52_M01_AXI_awlock->set_sv_netview_offsetfromdp(9708264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M01_AXI_awcache.bind(*p_52_M01_AXI_awcache);
        p_52_M01_AXI_awcache->set_sv_netview_offsetfromdp(9708320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M01_AXI_awprot.bind(*p_52_M01_AXI_awprot);
        p_52_M01_AXI_awprot->set_sv_netview_offsetfromdp(9708376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M01_AXI_awqos.bind(*p_52_M01_AXI_awqos);
        p_52_M01_AXI_awqos->set_sv_netview_offsetfromdp(9708432);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_awvalid.bind(*p_52_M01_AXI_awvalid);
        p_52_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9708488);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_awready.bind(*p_52_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->M01_AXI_wdata.bind(*p_52_M01_AXI_wdata);
        p_52_M01_AXI_wdata->set_sv_netview_offsetfromdp(9708600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->M01_AXI_wstrb.bind(*p_52_M01_AXI_wstrb);
        p_52_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9708656);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_wlast.bind(*p_52_M01_AXI_wlast);
        p_52_M01_AXI_wlast->set_sv_netview_offsetfromdp(9708712);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_wvalid.bind(*p_52_M01_AXI_wvalid);
        p_52_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9708768);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_wready.bind(*p_52_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M01_AXI_bresp.bind(*p_52_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_bvalid.bind(*p_52_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_bready.bind(*p_52_M01_AXI_bready);
        p_52_M01_AXI_bready->set_sv_netview_offsetfromdp(9708992);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_M01_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->M01_AXI_araddr.bind(*p_52_M01_AXI_araddr);
        p_52_M01_AXI_araddr->set_sv_netview_offsetfromdp(9709048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M01_AXI_arlen.bind(*p_52_M01_AXI_arlen);
        p_52_M01_AXI_arlen->set_sv_netview_offsetfromdp(9709104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M01_AXI_arsize.bind(*p_52_M01_AXI_arsize);
        p_52_M01_AXI_arsize->set_sv_netview_offsetfromdp(9709160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M01_AXI_arburst.bind(*p_52_M01_AXI_arburst);
        p_52_M01_AXI_arburst->set_sv_netview_offsetfromdp(9709216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M01_AXI_arlock.bind(*p_52_M01_AXI_arlock);
        p_52_M01_AXI_arlock->set_sv_netview_offsetfromdp(9709272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M01_AXI_arcache.bind(*p_52_M01_AXI_arcache);
        p_52_M01_AXI_arcache->set_sv_netview_offsetfromdp(9709328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M01_AXI_arprot.bind(*p_52_M01_AXI_arprot);
        p_52_M01_AXI_arprot->set_sv_netview_offsetfromdp(9709384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M01_AXI_arqos.bind(*p_52_M01_AXI_arqos);
        p_52_M01_AXI_arqos->set_sv_netview_offsetfromdp(9709440);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_arvalid.bind(*p_52_M01_AXI_arvalid);
        p_52_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9709496);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_arready.bind(*p_52_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->M01_AXI_rdata.bind(*p_52_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M01_AXI_rresp.bind(*p_52_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_rlast.bind(*p_52_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_rvalid.bind(*p_52_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_52_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M01_AXI_rready.bind(*p_52_M01_AXI_rready);
        p_52_M01_AXI_rready->set_sv_netview_offsetfromdp(9709832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_M02_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->M02_AXI_awaddr.bind(*p_52_M02_AXI_awaddr);
        p_52_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9709888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M02_AXI_awlen.bind(*p_52_M02_AXI_awlen);
        p_52_M02_AXI_awlen->set_sv_netview_offsetfromdp(9709944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M02_AXI_awsize.bind(*p_52_M02_AXI_awsize);
        p_52_M02_AXI_awsize->set_sv_netview_offsetfromdp(9710000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M02_AXI_awburst.bind(*p_52_M02_AXI_awburst);
        p_52_M02_AXI_awburst->set_sv_netview_offsetfromdp(9710056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M02_AXI_awlock.bind(*p_52_M02_AXI_awlock);
        p_52_M02_AXI_awlock->set_sv_netview_offsetfromdp(9710112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M02_AXI_awcache.bind(*p_52_M02_AXI_awcache);
        p_52_M02_AXI_awcache->set_sv_netview_offsetfromdp(9710168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M02_AXI_awprot.bind(*p_52_M02_AXI_awprot);
        p_52_M02_AXI_awprot->set_sv_netview_offsetfromdp(9710224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M02_AXI_awqos.bind(*p_52_M02_AXI_awqos);
        p_52_M02_AXI_awqos->set_sv_netview_offsetfromdp(9710280);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_awvalid.bind(*p_52_M02_AXI_awvalid);
        p_52_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9710336);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_awready.bind(*p_52_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_M02_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->M02_AXI_wdata.bind(*p_52_M02_AXI_wdata);
        p_52_M02_AXI_wdata->set_sv_netview_offsetfromdp(9710448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M02_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M02_AXI_wstrb.bind(*p_52_M02_AXI_wstrb);
        p_52_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9710504);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_wlast.bind(*p_52_M02_AXI_wlast);
        p_52_M02_AXI_wlast->set_sv_netview_offsetfromdp(9710560);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_wvalid.bind(*p_52_M02_AXI_wvalid);
        p_52_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9710616);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_wready.bind(*p_52_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M02_AXI_bresp.bind(*p_52_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_bvalid.bind(*p_52_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_bready.bind(*p_52_M02_AXI_bready);
        p_52_M02_AXI_bready->set_sv_netview_offsetfromdp(9710840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_M02_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->M02_AXI_araddr.bind(*p_52_M02_AXI_araddr);
        p_52_M02_AXI_araddr->set_sv_netview_offsetfromdp(9710896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->M02_AXI_arlen.bind(*p_52_M02_AXI_arlen);
        p_52_M02_AXI_arlen->set_sv_netview_offsetfromdp(9710952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M02_AXI_arsize.bind(*p_52_M02_AXI_arsize);
        p_52_M02_AXI_arsize->set_sv_netview_offsetfromdp(9711008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M02_AXI_arburst.bind(*p_52_M02_AXI_arburst);
        p_52_M02_AXI_arburst->set_sv_netview_offsetfromdp(9711064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->M02_AXI_arlock.bind(*p_52_M02_AXI_arlock);
        p_52_M02_AXI_arlock->set_sv_netview_offsetfromdp(9711120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M02_AXI_arcache.bind(*p_52_M02_AXI_arcache);
        p_52_M02_AXI_arcache->set_sv_netview_offsetfromdp(9711176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->M02_AXI_arprot.bind(*p_52_M02_AXI_arprot);
        p_52_M02_AXI_arprot->set_sv_netview_offsetfromdp(9711232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->M02_AXI_arqos.bind(*p_52_M02_AXI_arqos);
        p_52_M02_AXI_arqos->set_sv_netview_offsetfromdp(9711288);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_arvalid.bind(*p_52_M02_AXI_arvalid);
        p_52_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9711344);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_arready.bind(*p_52_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_M02_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->M02_AXI_rdata.bind(*p_52_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->M02_AXI_rresp.bind(*p_52_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_rlast.bind(*p_52_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_rvalid.bind(*p_52_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_52_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->M02_AXI_rready.bind(*p_52_M02_AXI_rready);
        p_52_M02_AXI_rready->set_sv_netview_offsetfromdp(9711680);
        sc_inst_53 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_53->xsim_set_dbg_index(37);
        sc_inst_54 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_54->xsim_set_dbg_index(189);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_awlen.bind(*p_54_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awburst.bind(*p_54_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_awlock.bind(*p_54_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awcache.bind(*p_54_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awqos.bind(*p_54_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_awuser.bind(*p_54_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(9886624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wlast.bind(*p_54_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(9886904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(9886960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_buser.bind(*p_54_s_axi_buser);
        p_54_s_axi_buser->set_sv_netview_offsetfromdp(9887016);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(9887072);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_arlen.bind(*p_54_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arburst.bind(*p_54_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_arlock.bind(*p_54_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arcache.bind(*p_54_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arqos.bind(*p_54_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_aruser.bind(*p_54_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(9887688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(9887744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(9887800);
        xsim_sc_channel<0, bool > *p_54_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rlast.bind(*p_54_s_axi_rlast);
        p_54_s_axi_rlast->set_sv_netview_offsetfromdp(9887856);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(9887912);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(9888024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_awlen.bind(*p_54_m_axi_awlen);
        p_54_m_axi_awlen->set_sv_netview_offsetfromdp(9888080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_awburst.bind(*p_54_m_axi_awburst);
        p_54_m_axi_awburst->set_sv_netview_offsetfromdp(9888136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->m_axi_awlock.bind(*p_54_m_axi_awlock);
        p_54_m_axi_awlock->set_sv_netview_offsetfromdp(9888192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awcache.bind(*p_54_m_axi_awcache);
        p_54_m_axi_awcache->set_sv_netview_offsetfromdp(9888248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(9888304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awqos.bind(*p_54_m_axi_awqos);
        p_54_m_axi_awqos->set_sv_netview_offsetfromdp(9888360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_awuser.bind(*p_54_m_axi_awuser);
        p_54_m_axi_awuser->set_sv_netview_offsetfromdp(9888416);
        xsim_sc_channel<0, bool > *p_54_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(9888472);
        xsim_sc_channel<0, bool > *p_54_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(9888584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(9888640);
        xsim_sc_channel<0, bool > *p_54_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wlast.bind(*p_54_m_axi_wlast);
        p_54_m_axi_wlast->set_sv_netview_offsetfromdp(9888696);
        xsim_sc_channel<0, bool > *p_54_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(9888752);
        xsim_sc_channel<0, bool > *p_54_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->m_axi_buser.bind(*p_54_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_buser);
        xsim_sc_channel<0, bool > *p_54_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(9889032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(9889088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->m_axi_arlen.bind(*p_54_m_axi_arlen);
        p_54_m_axi_arlen->set_sv_netview_offsetfromdp(9889144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_arburst.bind(*p_54_m_axi_arburst);
        p_54_m_axi_arburst->set_sv_netview_offsetfromdp(9889200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->m_axi_arlock.bind(*p_54_m_axi_arlock);
        p_54_m_axi_arlock->set_sv_netview_offsetfromdp(9889256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arcache.bind(*p_54_m_axi_arcache);
        p_54_m_axi_arcache->set_sv_netview_offsetfromdp(9889312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(9889368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arqos.bind(*p_54_m_axi_arqos);
        p_54_m_axi_arqos->set_sv_netview_offsetfromdp(9889424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_aruser.bind(*p_54_m_axi_aruser);
        p_54_m_axi_aruser->set_sv_netview_offsetfromdp(9889480);
        xsim_sc_channel<0, bool > *p_54_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(9889536);
        xsim_sc_channel<0, bool > *p_54_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rlast.bind(*p_54_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_54_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(9889872);
        sc_inst_55 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_55->xsim_set_dbg_index(599);
        xsim_sc_channel<0, bool > *p_55_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->aclk.bind(*p_55_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aclk);
        xsim_sc_channel<0, bool > *p_55_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->aresetn.bind(*p_55_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_55_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(9989848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(9990072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(9990128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(9990184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_55_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(9990464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(9990520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(9990576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(9990632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_55_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_55->m_axi_awaddr.bind(*p_55_m_axi_awaddr);
        p_55_m_axi_awaddr->set_sv_netview_offsetfromdp(9990744);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_55_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_55->m_axi_awprot.bind(*p_55_m_axi_awprot);
        p_55_m_axi_awprot->set_sv_netview_offsetfromdp(9990800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awvalid.bind(*p_55_m_axi_awvalid);
        p_55_m_axi_awvalid->set_sv_netview_offsetfromdp(9990856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awready.bind(*p_55_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_55_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_55->m_axi_wdata.bind(*p_55_m_axi_wdata);
        p_55_m_axi_wdata->set_sv_netview_offsetfromdp(9990968);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_55_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_55->m_axi_wstrb.bind(*p_55_m_axi_wstrb);
        p_55_m_axi_wstrb->set_sv_netview_offsetfromdp(9991024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_wvalid.bind(*p_55_m_axi_wvalid);
        p_55_m_axi_wvalid->set_sv_netview_offsetfromdp(9991080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_wready.bind(*p_55_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_bresp.bind(*p_55_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_bvalid.bind(*p_55_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_bready.bind(*p_55_m_axi_bready);
        p_55_m_axi_bready->set_sv_netview_offsetfromdp(9991304);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_55_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_55->m_axi_araddr.bind(*p_55_m_axi_araddr);
        p_55_m_axi_araddr->set_sv_netview_offsetfromdp(9991360);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_55_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_55->m_axi_arprot.bind(*p_55_m_axi_arprot);
        p_55_m_axi_arprot->set_sv_netview_offsetfromdp(9991416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arvalid.bind(*p_55_m_axi_arvalid);
        p_55_m_axi_arvalid->set_sv_netview_offsetfromdp(9991472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arready.bind(*p_55_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_55_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_55->m_axi_rdata.bind(*p_55_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_rresp.bind(*p_55_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_rvalid.bind(*p_55_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_rready.bind(*p_55_m_axi_rready);
        p_55_m_axi_rready->set_sv_netview_offsetfromdp(9991752);
        sc_inst_56 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_56->xsim_set_dbg_index(193);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_56_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_56->interrupt_cu.bind(*p_56_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_56_interrupt_cu);
        xsim_sc_channel<0, bool > *p_56_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_56->interrupt_m2m.bind(*p_56_interrupt_m2m);
        p_56_interrupt_m2m->set_sv_netview_offsetfromdp(9993640);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_aresetn.bind(*p_56_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_aresetn.bind(*p_56_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_aresetn.bind(*p_56_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_56_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_data_m2m_aresetn.bind(*p_56_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_aclk.bind(*p_56_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_aclk.bind(*p_56_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_aclk.bind(*p_56_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_56_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_data_m2m_aclk.bind(*p_56_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_data_p2p_awaddr.bind(*p_56_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_data_p2p_awlen.bind(*p_56_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_data_p2p_awsize.bind(*p_56_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_data_p2p_awburst.bind(*p_56_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_awlock.bind(*p_56_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_awcache.bind(*p_56_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_data_p2p_awprot.bind(*p_56_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_awregion.bind(*p_56_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_awqos.bind(*p_56_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_data_p2p_awuser.bind(*p_56_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_awvalid.bind(*p_56_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_awready.bind(*p_56_s_axi_data_p2p_awready);
        p_56_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(9994760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_data_p2p_wdata.bind(*p_56_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_wstrb.bind(*p_56_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_wlast.bind(*p_56_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_wvalid.bind(*p_56_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_wready.bind(*p_56_s_axi_data_p2p_wready);
        p_56_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(9995040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_data_p2p_bresp.bind(*p_56_s_axi_data_p2p_bresp);
        p_56_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(9995096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_56_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_56->s_axi_data_p2p_buser.bind(*p_56_s_axi_data_p2p_buser);
        p_56_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(9995152);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_bvalid.bind(*p_56_s_axi_data_p2p_bvalid);
        p_56_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(9995208);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_bready.bind(*p_56_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_data_p2p_araddr.bind(*p_56_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_data_p2p_arlen.bind(*p_56_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_data_p2p_arsize.bind(*p_56_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_data_p2p_arburst.bind(*p_56_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_arlock.bind(*p_56_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_arcache.bind(*p_56_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_data_p2p_arprot.bind(*p_56_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_arregion.bind(*p_56_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_data_p2p_arqos.bind(*p_56_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_data_p2p_aruser.bind(*p_56_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_arvalid.bind(*p_56_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_arready.bind(*p_56_s_axi_data_p2p_arready);
        p_56_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(9995936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_data_p2p_rdata.bind(*p_56_s_axi_data_p2p_rdata);
        p_56_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(9995992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_data_p2p_rresp.bind(*p_56_s_axi_data_p2p_rresp);
        p_56_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(9996048);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_rlast.bind(*p_56_s_axi_data_p2p_rlast);
        p_56_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(9996104);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_rvalid.bind(*p_56_s_axi_data_p2p_rvalid);
        p_56_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(9996160);
        xsim_sc_channel<0, bool > *p_56_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_data_p2p_rready.bind(*p_56_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->maxi_lite_mb_awaddr.bind(*p_56_maxi_lite_mb_awaddr);
        p_56_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(9996272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->maxi_lite_mb_awprot.bind(*p_56_maxi_lite_mb_awprot);
        p_56_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(9996328);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_awvalid.bind(*p_56_maxi_lite_mb_awvalid);
        p_56_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(9996384);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_awready.bind(*p_56_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->maxi_lite_mb_wdata.bind(*p_56_maxi_lite_mb_wdata);
        p_56_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(9996496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->maxi_lite_mb_wstrb.bind(*p_56_maxi_lite_mb_wstrb);
        p_56_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(9996552);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_wvalid.bind(*p_56_maxi_lite_mb_wvalid);
        p_56_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(9996608);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_wready.bind(*p_56_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->maxi_lite_mb_bresp.bind(*p_56_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_bvalid.bind(*p_56_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_bready.bind(*p_56_maxi_lite_mb_bready);
        p_56_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(9996832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->maxi_lite_mb_araddr.bind(*p_56_maxi_lite_mb_araddr);
        p_56_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(9996888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->maxi_lite_mb_arprot.bind(*p_56_maxi_lite_mb_arprot);
        p_56_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(9996944);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_arvalid.bind(*p_56_maxi_lite_mb_arvalid);
        p_56_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(9997000);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_arready.bind(*p_56_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->maxi_lite_mb_rdata.bind(*p_56_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->maxi_lite_mb_rresp.bind(*p_56_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_rvalid.bind(*p_56_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_56_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->maxi_lite_mb_rready.bind(*p_56_maxi_lite_mb_rready);
        p_56_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(9997280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_ctrl_user_awaddr.bind(*p_56_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_ctrl_user_awprot.bind(*p_56_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_awvalid.bind(*p_56_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_awready.bind(*p_56_s_axi_ctrl_user_awready);
        p_56_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(9997504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_ctrl_user_wdata.bind(*p_56_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_ctrl_user_wstrb.bind(*p_56_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_wvalid.bind(*p_56_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_wready.bind(*p_56_s_axi_ctrl_user_wready);
        p_56_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(9997728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_ctrl_user_bresp.bind(*p_56_s_axi_ctrl_user_bresp);
        p_56_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(9997784);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_bvalid.bind(*p_56_s_axi_ctrl_user_bvalid);
        p_56_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(9997840);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_bready.bind(*p_56_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_ctrl_user_araddr.bind(*p_56_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_ctrl_user_arprot.bind(*p_56_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_arvalid.bind(*p_56_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_arready.bind(*p_56_s_axi_ctrl_user_arready);
        p_56_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(9998120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_ctrl_user_rdata.bind(*p_56_s_axi_ctrl_user_rdata);
        p_56_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(9998176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_ctrl_user_rresp.bind(*p_56_s_axi_ctrl_user_rresp);
        p_56_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(9998232);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_rvalid.bind(*p_56_s_axi_ctrl_user_rvalid);
        p_56_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(9998288);
        xsim_sc_channel<0, bool > *p_56_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_ctrl_user_rready.bind(*p_56_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_ctrl_user_rready);
        sc_inst_57 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_57->xsim_set_dbg_index(194);
        xsim_sc_channel<0, bool > *p_57_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_aclk.bind(*p_57_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_57_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_aresetn.bind(*p_57_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_57_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_aximm_aclk.bind(*p_57_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_57_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_aximm_aresetn.bind(*p_57_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_57_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_AWVALID.bind(*p_57_m_aximm_AWVALID);
        p_57_m_aximm_AWVALID->set_sv_netview_offsetfromdp(9998672);
        xsim_sc_channel<0, bool > *p_57_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_AWREADY.bind(*p_57_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_aximm_AWADDR.bind(*p_57_m_aximm_AWADDR);
        p_57_m_aximm_AWADDR->set_sv_netview_offsetfromdp(9998784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_AWID.bind(*p_57_m_aximm_AWID);
        p_57_m_aximm_AWID->set_sv_netview_offsetfromdp(9998840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_aximm_AWLEN.bind(*p_57_m_aximm_AWLEN);
        p_57_m_aximm_AWLEN->set_sv_netview_offsetfromdp(9998896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_AWSIZE.bind(*p_57_m_aximm_AWSIZE);
        p_57_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(9998952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_AWBURST.bind(*p_57_m_aximm_AWBURST);
        p_57_m_aximm_AWBURST->set_sv_netview_offsetfromdp(9999008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_AWLOCK.bind(*p_57_m_aximm_AWLOCK);
        p_57_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(9999064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWCACHE.bind(*p_57_m_aximm_AWCACHE);
        p_57_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(9999120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_AWPROT.bind(*p_57_m_aximm_AWPROT);
        p_57_m_aximm_AWPROT->set_sv_netview_offsetfromdp(9999176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWREGION.bind(*p_57_m_aximm_AWREGION);
        p_57_m_aximm_AWREGION->set_sv_netview_offsetfromdp(9999232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_AWQOS.bind(*p_57_m_aximm_AWQOS);
        p_57_m_aximm_AWQOS->set_sv_netview_offsetfromdp(9999288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_AWUSER.bind(*p_57_m_aximm_AWUSER);
        p_57_m_aximm_AWUSER->set_sv_netview_offsetfromdp(9999344);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WVALID.bind(*p_57_m_aximm_WVALID);
        p_57_m_aximm_WVALID->set_sv_netview_offsetfromdp(9999400);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WREADY.bind(*p_57_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_WDATA.bind(*p_57_m_aximm_WDATA);
        p_57_m_aximm_WDATA->set_sv_netview_offsetfromdp(9999512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_WSTRB.bind(*p_57_m_aximm_WSTRB);
        p_57_m_aximm_WSTRB->set_sv_netview_offsetfromdp(9999568);
        xsim_sc_channel<0, bool > *p_57_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_WLAST.bind(*p_57_m_aximm_WLAST);
        p_57_m_aximm_WLAST->set_sv_netview_offsetfromdp(9999624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_WUSER.bind(*p_57_m_aximm_WUSER);
        p_57_m_aximm_WUSER->set_sv_netview_offsetfromdp(9999680);
        xsim_sc_channel<0, bool > *p_57_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_ARVALID.bind(*p_57_m_aximm_ARVALID);
        p_57_m_aximm_ARVALID->set_sv_netview_offsetfromdp(9999736);
        xsim_sc_channel<0, bool > *p_57_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_ARREADY.bind(*p_57_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->m_aximm_ARADDR.bind(*p_57_m_aximm_ARADDR);
        p_57_m_aximm_ARADDR->set_sv_netview_offsetfromdp(9999848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_ARID.bind(*p_57_m_aximm_ARID);
        p_57_m_aximm_ARID->set_sv_netview_offsetfromdp(9999904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_aximm_ARLEN.bind(*p_57_m_aximm_ARLEN);
        p_57_m_aximm_ARLEN->set_sv_netview_offsetfromdp(9999960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_ARSIZE.bind(*p_57_m_aximm_ARSIZE);
        p_57_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10000016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_ARBURST.bind(*p_57_m_aximm_ARBURST);
        p_57_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10000072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_ARLOCK.bind(*p_57_m_aximm_ARLOCK);
        p_57_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10000128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARCACHE.bind(*p_57_m_aximm_ARCACHE);
        p_57_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10000184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_aximm_ARPROT.bind(*p_57_m_aximm_ARPROT);
        p_57_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10000240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARREGION.bind(*p_57_m_aximm_ARREGION);
        p_57_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10000296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_aximm_ARQOS.bind(*p_57_m_aximm_ARQOS);
        p_57_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10000352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_ARUSER.bind(*p_57_m_aximm_ARUSER);
        p_57_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10000408);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RVALID.bind(*p_57_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RREADY.bind(*p_57_m_aximm_RREADY);
        p_57_m_aximm_RREADY->set_sv_netview_offsetfromdp(10000520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_aximm_RDATA.bind(*p_57_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_57_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_RLAST.bind(*p_57_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_RID.bind(*p_57_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_RRESP.bind(*p_57_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_RUSER.bind(*p_57_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_57_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_BVALID.bind(*p_57_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_57_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_aximm_BREADY.bind(*p_57_m_aximm_BREADY);
        p_57_m_aximm_BREADY->set_sv_netview_offsetfromdp(10000912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_aximm_BRESP.bind(*p_57_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_BID.bind(*p_57_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_aximm_BUSER.bind(*p_57_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awsize.bind(*p_57_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awregion.bind(*p_57_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awqos.bind(*p_57_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awuser.bind(*p_57_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(10001752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(10002032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(10002088);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(10002144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_buser.bind(*p_57_s_axi_buser);
        p_57_s_axi_buser->set_sv_netview_offsetfromdp(10002200);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arsize.bind(*p_57_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arregion.bind(*p_57_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arqos.bind(*p_57_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_aruser.bind(*p_57_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(10002928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(10002984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(10003040);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(10003096);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(10003152);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        sc_inst_58 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_58->xsim_set_dbg_index(195);
        xsim_sc_channel<0, bool > *p_58_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_aclk.bind(*p_58_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_58_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_aresetn.bind(*p_58_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_aclk.bind(*p_58_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_aresetn.bind(*p_58_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_58_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_aximm_aclk.bind(*p_58_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_58_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_aximm_aresetn.bind(*p_58_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->m_axictrl_awaddr.bind(*p_58_m_axictrl_awaddr);
        p_58_m_axictrl_awaddr->set_sv_netview_offsetfromdp(10003648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axictrl_awprot.bind(*p_58_m_axictrl_awprot);
        p_58_m_axictrl_awprot->set_sv_netview_offsetfromdp(10003704);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_awvalid.bind(*p_58_m_axictrl_awvalid);
        p_58_m_axictrl_awvalid->set_sv_netview_offsetfromdp(10003760);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_awready.bind(*p_58_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_axictrl_wdata.bind(*p_58_m_axictrl_wdata);
        p_58_m_axictrl_wdata->set_sv_netview_offsetfromdp(10003872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axictrl_wstrb.bind(*p_58_m_axictrl_wstrb);
        p_58_m_axictrl_wstrb->set_sv_netview_offsetfromdp(10003928);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_wvalid.bind(*p_58_m_axictrl_wvalid);
        p_58_m_axictrl_wvalid->set_sv_netview_offsetfromdp(10003984);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_wready.bind(*p_58_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_bvalid.bind(*p_58_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_bready.bind(*p_58_m_axictrl_bready);
        p_58_m_axictrl_bready->set_sv_netview_offsetfromdp(10004152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_axictrl_bresp.bind(*p_58_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->m_axictrl_araddr.bind(*p_58_m_axictrl_araddr);
        p_58_m_axictrl_araddr->set_sv_netview_offsetfromdp(10004264);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_arvalid.bind(*p_58_m_axictrl_arvalid);
        p_58_m_axictrl_arvalid->set_sv_netview_offsetfromdp(10004320);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_arready.bind(*p_58_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_axictrl_arprot.bind(*p_58_m_axictrl_arprot);
        p_58_m_axictrl_arprot->set_sv_netview_offsetfromdp(10004432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_axictrl_rdata.bind(*p_58_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_axictrl_rresp.bind(*p_58_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_rvalid.bind(*p_58_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_58_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_axictrl_rready.bind(*p_58_m_axictrl_rready);
        p_58_m_axictrl_rready->set_sv_netview_offsetfromdp(10004656);
        xsim_sc_channel<0, bool > *p_58_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_AWVALID.bind(*p_58_m_aximm_AWVALID);
        p_58_m_aximm_AWVALID->set_sv_netview_offsetfromdp(10004712);
        xsim_sc_channel<0, bool > *p_58_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_AWREADY.bind(*p_58_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->m_aximm_AWADDR.bind(*p_58_m_aximm_AWADDR);
        p_58_m_aximm_AWADDR->set_sv_netview_offsetfromdp(10004824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_AWID.bind(*p_58_m_aximm_AWID);
        p_58_m_aximm_AWID->set_sv_netview_offsetfromdp(10004880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->m_aximm_AWLEN.bind(*p_58_m_aximm_AWLEN);
        p_58_m_aximm_AWLEN->set_sv_netview_offsetfromdp(10004936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_aximm_AWSIZE.bind(*p_58_m_aximm_AWSIZE);
        p_58_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(10004992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_aximm_AWBURST.bind(*p_58_m_aximm_AWBURST);
        p_58_m_aximm_AWBURST->set_sv_netview_offsetfromdp(10005048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_AWLOCK.bind(*p_58_m_aximm_AWLOCK);
        p_58_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(10005104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_AWCACHE.bind(*p_58_m_aximm_AWCACHE);
        p_58_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(10005160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_aximm_AWPROT.bind(*p_58_m_aximm_AWPROT);
        p_58_m_aximm_AWPROT->set_sv_netview_offsetfromdp(10005216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_AWREGION.bind(*p_58_m_aximm_AWREGION);
        p_58_m_aximm_AWREGION->set_sv_netview_offsetfromdp(10005272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_AWQOS.bind(*p_58_m_aximm_AWQOS);
        p_58_m_aximm_AWQOS->set_sv_netview_offsetfromdp(10005328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_AWUSER.bind(*p_58_m_aximm_AWUSER);
        p_58_m_aximm_AWUSER->set_sv_netview_offsetfromdp(10005384);
        xsim_sc_channel<0, bool > *p_58_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_WVALID.bind(*p_58_m_aximm_WVALID);
        p_58_m_aximm_WVALID->set_sv_netview_offsetfromdp(10005440);
        xsim_sc_channel<0, bool > *p_58_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_WREADY.bind(*p_58_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_WDATA.bind(*p_58_m_aximm_WDATA);
        p_58_m_aximm_WDATA->set_sv_netview_offsetfromdp(10005552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_WSTRB.bind(*p_58_m_aximm_WSTRB);
        p_58_m_aximm_WSTRB->set_sv_netview_offsetfromdp(10005608);
        xsim_sc_channel<0, bool > *p_58_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_WLAST.bind(*p_58_m_aximm_WLAST);
        p_58_m_aximm_WLAST->set_sv_netview_offsetfromdp(10005664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_WUSER.bind(*p_58_m_aximm_WUSER);
        p_58_m_aximm_WUSER->set_sv_netview_offsetfromdp(10005720);
        xsim_sc_channel<0, bool > *p_58_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_ARVALID.bind(*p_58_m_aximm_ARVALID);
        p_58_m_aximm_ARVALID->set_sv_netview_offsetfromdp(10005776);
        xsim_sc_channel<0, bool > *p_58_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_ARREADY.bind(*p_58_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->m_aximm_ARADDR.bind(*p_58_m_aximm_ARADDR);
        p_58_m_aximm_ARADDR->set_sv_netview_offsetfromdp(10005888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_ARID.bind(*p_58_m_aximm_ARID);
        p_58_m_aximm_ARID->set_sv_netview_offsetfromdp(10005944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->m_aximm_ARLEN.bind(*p_58_m_aximm_ARLEN);
        p_58_m_aximm_ARLEN->set_sv_netview_offsetfromdp(10006000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_aximm_ARSIZE.bind(*p_58_m_aximm_ARSIZE);
        p_58_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10006056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_aximm_ARBURST.bind(*p_58_m_aximm_ARBURST);
        p_58_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10006112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_ARLOCK.bind(*p_58_m_aximm_ARLOCK);
        p_58_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10006168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_ARCACHE.bind(*p_58_m_aximm_ARCACHE);
        p_58_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10006224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->m_aximm_ARPROT.bind(*p_58_m_aximm_ARPROT);
        p_58_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10006280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_ARREGION.bind(*p_58_m_aximm_ARREGION);
        p_58_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10006336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_aximm_ARQOS.bind(*p_58_m_aximm_ARQOS);
        p_58_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10006392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_ARUSER.bind(*p_58_m_aximm_ARUSER);
        p_58_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10006448);
        xsim_sc_channel<0, bool > *p_58_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_RVALID.bind(*p_58_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_58_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_RREADY.bind(*p_58_m_aximm_RREADY);
        p_58_m_aximm_RREADY->set_sv_netview_offsetfromdp(10006560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_RDATA.bind(*p_58_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_58_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_RLAST.bind(*p_58_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_RID.bind(*p_58_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_aximm_RRESP.bind(*p_58_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->m_aximm_RUSER.bind(*p_58_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_58_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_BVALID.bind(*p_58_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_58_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_58->m_aximm_BREADY.bind(*p_58_m_aximm_BREADY);
        p_58_m_aximm_BREADY->set_sv_netview_offsetfromdp(10006952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->m_aximm_BRESP.bind(*p_58_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_BID.bind(*p_58_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->m_aximm_BUSER.bind(*p_58_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->s_axi_awaddr.bind(*p_58_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->s_axi_awlen.bind(*p_58_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->s_axi_awsize.bind(*p_58_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_awburst.bind(*p_58_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->s_axi_awlock.bind(*p_58_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_awcache.bind(*p_58_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->s_axi_awprot.bind(*p_58_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_awregion.bind(*p_58_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_awqos.bind(*p_58_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_58_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_awvalid.bind(*p_58_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_58_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_awready.bind(*p_58_s_axi_awready);
        p_58_s_axi_awready->set_sv_netview_offsetfromdp(10007736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->s_axi_wdata.bind(*p_58_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_wstrb.bind(*p_58_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_58_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_wlast.bind(*p_58_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_58_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_wvalid.bind(*p_58_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_58_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_wready.bind(*p_58_s_axi_wready);
        p_58_s_axi_wready->set_sv_netview_offsetfromdp(10008016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_bresp.bind(*p_58_s_axi_bresp);
        p_58_s_axi_bresp->set_sv_netview_offsetfromdp(10008072);
        xsim_sc_channel<0, bool > *p_58_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_bvalid.bind(*p_58_s_axi_bvalid);
        p_58_s_axi_bvalid->set_sv_netview_offsetfromdp(10008128);
        xsim_sc_channel<0, bool > *p_58_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_bready.bind(*p_58_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->s_axi_araddr.bind(*p_58_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->s_axi_arlen.bind(*p_58_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->s_axi_arsize.bind(*p_58_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_arburst.bind(*p_58_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->s_axi_arlock.bind(*p_58_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_arcache.bind(*p_58_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->s_axi_arprot.bind(*p_58_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_arregion.bind(*p_58_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_arqos.bind(*p_58_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_58_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_arvalid.bind(*p_58_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_58_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_arready.bind(*p_58_s_axi_arready);
        p_58_s_axi_arready->set_sv_netview_offsetfromdp(10008800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->s_axi_rdata.bind(*p_58_s_axi_rdata);
        p_58_s_axi_rdata->set_sv_netview_offsetfromdp(10008856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_rresp.bind(*p_58_s_axi_rresp);
        p_58_s_axi_rresp->set_sv_netview_offsetfromdp(10008912);
        xsim_sc_channel<0, bool > *p_58_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_rlast.bind(*p_58_s_axi_rlast);
        p_58_s_axi_rlast->set_sv_netview_offsetfromdp(10008968);
        xsim_sc_channel<0, bool > *p_58_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_rvalid.bind(*p_58_s_axi_rvalid);
        p_58_s_axi_rvalid->set_sv_netview_offsetfromdp(10009024);
        xsim_sc_channel<0, bool > *p_58_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->s_axi_rready.bind(*p_58_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_58_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_58->usr_irq_req.bind(*p_58_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_58_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_58_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_58->usr_irq_ack.bind(*p_58_usr_irq_ack);
        p_58_usr_irq_ack->set_sv_netview_offsetfromdp(10009192);
        sc_inst_59 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_59->xsim_set_dbg_index(196);
        xsim_sc_channel<0, bool > *p_59_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->aclk.bind(*p_59_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aclk);
        xsim_sc_channel<0, bool > *p_59_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->aresetn.bind(*p_59_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_awid.bind(*p_59_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->S00_AXI_awaddr.bind(*p_59_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->S00_AXI_awlen.bind(*p_59_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->S00_AXI_awsize.bind(*p_59_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->S00_AXI_awburst.bind(*p_59_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_awlock.bind(*p_59_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->S00_AXI_awcache.bind(*p_59_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->S00_AXI_awprot.bind(*p_59_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->S00_AXI_awqos.bind(*p_59_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_awuser.bind(*p_59_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_awvalid.bind(*p_59_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_awready.bind(*p_59_S00_AXI_awready);
        p_59_S00_AXI_awready->set_sv_netview_offsetfromdp(10010024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_wdata.bind(*p_59_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->S00_AXI_wstrb.bind(*p_59_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_wlast.bind(*p_59_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_wuser.bind(*p_59_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_wvalid.bind(*p_59_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_wready.bind(*p_59_S00_AXI_wready);
        p_59_S00_AXI_wready->set_sv_netview_offsetfromdp(10010360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_bid.bind(*p_59_S00_AXI_bid);
        p_59_S00_AXI_bid->set_sv_netview_offsetfromdp(10010416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->S00_AXI_bresp.bind(*p_59_S00_AXI_bresp);
        p_59_S00_AXI_bresp->set_sv_netview_offsetfromdp(10010472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_buser.bind(*p_59_S00_AXI_buser);
        p_59_S00_AXI_buser->set_sv_netview_offsetfromdp(10010528);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_bvalid.bind(*p_59_S00_AXI_bvalid);
        p_59_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10010584);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_bready.bind(*p_59_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_arid.bind(*p_59_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->S00_AXI_araddr.bind(*p_59_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->S00_AXI_arlen.bind(*p_59_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->S00_AXI_arsize.bind(*p_59_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->S00_AXI_arburst.bind(*p_59_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_arlock.bind(*p_59_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->S00_AXI_arcache.bind(*p_59_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->S00_AXI_arprot.bind(*p_59_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->S00_AXI_arqos.bind(*p_59_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_aruser.bind(*p_59_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_arvalid.bind(*p_59_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_arready.bind(*p_59_S00_AXI_arready);
        p_59_S00_AXI_arready->set_sv_netview_offsetfromdp(10011312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->S00_AXI_rid.bind(*p_59_S00_AXI_rid);
        p_59_S00_AXI_rid->set_sv_netview_offsetfromdp(10011368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_rdata.bind(*p_59_S00_AXI_rdata);
        p_59_S00_AXI_rdata->set_sv_netview_offsetfromdp(10011424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->S00_AXI_rresp.bind(*p_59_S00_AXI_rresp);
        p_59_S00_AXI_rresp->set_sv_netview_offsetfromdp(10011480);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_rlast.bind(*p_59_S00_AXI_rlast);
        p_59_S00_AXI_rlast->set_sv_netview_offsetfromdp(10011536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->S00_AXI_ruser.bind(*p_59_S00_AXI_ruser);
        p_59_S00_AXI_ruser->set_sv_netview_offsetfromdp(10011592);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_rvalid.bind(*p_59_S00_AXI_rvalid);
        p_59_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10011648);
        xsim_sc_channel<0, bool > *p_59_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->S00_AXI_rready.bind(*p_59_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_awaddr.bind(*p_59_M00_AXI_awaddr);
        p_59_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10011760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->M00_AXI_awlen.bind(*p_59_M00_AXI_awlen);
        p_59_M00_AXI_awlen->set_sv_netview_offsetfromdp(10011816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M00_AXI_awsize.bind(*p_59_M00_AXI_awsize);
        p_59_M00_AXI_awsize->set_sv_netview_offsetfromdp(10011872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M00_AXI_awburst.bind(*p_59_M00_AXI_awburst);
        p_59_M00_AXI_awburst->set_sv_netview_offsetfromdp(10011928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M00_AXI_awlock.bind(*p_59_M00_AXI_awlock);
        p_59_M00_AXI_awlock->set_sv_netview_offsetfromdp(10011984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M00_AXI_awcache.bind(*p_59_M00_AXI_awcache);
        p_59_M00_AXI_awcache->set_sv_netview_offsetfromdp(10012040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M00_AXI_awprot.bind(*p_59_M00_AXI_awprot);
        p_59_M00_AXI_awprot->set_sv_netview_offsetfromdp(10012096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M00_AXI_awqos.bind(*p_59_M00_AXI_awqos);
        p_59_M00_AXI_awqos->set_sv_netview_offsetfromdp(10012152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_awuser.bind(*p_59_M00_AXI_awuser);
        p_59_M00_AXI_awuser->set_sv_netview_offsetfromdp(10012208);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_awvalid.bind(*p_59_M00_AXI_awvalid);
        p_59_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10012264);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_awready.bind(*p_59_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_wdata.bind(*p_59_M00_AXI_wdata);
        p_59_M00_AXI_wdata->set_sv_netview_offsetfromdp(10012376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M00_AXI_wstrb.bind(*p_59_M00_AXI_wstrb);
        p_59_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10012432);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_wlast.bind(*p_59_M00_AXI_wlast);
        p_59_M00_AXI_wlast->set_sv_netview_offsetfromdp(10012488);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_wvalid.bind(*p_59_M00_AXI_wvalid);
        p_59_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10012544);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_wready.bind(*p_59_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M00_AXI_bresp.bind(*p_59_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M00_AXI_buser.bind(*p_59_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_bvalid.bind(*p_59_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_bready.bind(*p_59_M00_AXI_bready);
        p_59_M00_AXI_bready->set_sv_netview_offsetfromdp(10012824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_araddr.bind(*p_59_M00_AXI_araddr);
        p_59_M00_AXI_araddr->set_sv_netview_offsetfromdp(10012880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->M00_AXI_arlen.bind(*p_59_M00_AXI_arlen);
        p_59_M00_AXI_arlen->set_sv_netview_offsetfromdp(10012936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M00_AXI_arsize.bind(*p_59_M00_AXI_arsize);
        p_59_M00_AXI_arsize->set_sv_netview_offsetfromdp(10012992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M00_AXI_arburst.bind(*p_59_M00_AXI_arburst);
        p_59_M00_AXI_arburst->set_sv_netview_offsetfromdp(10013048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M00_AXI_arlock.bind(*p_59_M00_AXI_arlock);
        p_59_M00_AXI_arlock->set_sv_netview_offsetfromdp(10013104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M00_AXI_arcache.bind(*p_59_M00_AXI_arcache);
        p_59_M00_AXI_arcache->set_sv_netview_offsetfromdp(10013160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M00_AXI_arprot.bind(*p_59_M00_AXI_arprot);
        p_59_M00_AXI_arprot->set_sv_netview_offsetfromdp(10013216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M00_AXI_arqos.bind(*p_59_M00_AXI_arqos);
        p_59_M00_AXI_arqos->set_sv_netview_offsetfromdp(10013272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_aruser.bind(*p_59_M00_AXI_aruser);
        p_59_M00_AXI_aruser->set_sv_netview_offsetfromdp(10013328);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_arvalid.bind(*p_59_M00_AXI_arvalid);
        p_59_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10013384);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_arready.bind(*p_59_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M00_AXI_rdata.bind(*p_59_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M00_AXI_rresp.bind(*p_59_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_rlast.bind(*p_59_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_rvalid.bind(*p_59_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_59_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M00_AXI_rready.bind(*p_59_M00_AXI_rready);
        p_59_M00_AXI_rready->set_sv_netview_offsetfromdp(10013720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->M01_AXI_awaddr.bind(*p_59_M01_AXI_awaddr);
        p_59_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10013776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->M01_AXI_awlen.bind(*p_59_M01_AXI_awlen);
        p_59_M01_AXI_awlen->set_sv_netview_offsetfromdp(10013832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M01_AXI_awsize.bind(*p_59_M01_AXI_awsize);
        p_59_M01_AXI_awsize->set_sv_netview_offsetfromdp(10013888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M01_AXI_awburst.bind(*p_59_M01_AXI_awburst);
        p_59_M01_AXI_awburst->set_sv_netview_offsetfromdp(10013944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M01_AXI_awlock.bind(*p_59_M01_AXI_awlock);
        p_59_M01_AXI_awlock->set_sv_netview_offsetfromdp(10014000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M01_AXI_awcache.bind(*p_59_M01_AXI_awcache);
        p_59_M01_AXI_awcache->set_sv_netview_offsetfromdp(10014056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M01_AXI_awprot.bind(*p_59_M01_AXI_awprot);
        p_59_M01_AXI_awprot->set_sv_netview_offsetfromdp(10014112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M01_AXI_awqos.bind(*p_59_M01_AXI_awqos);
        p_59_M01_AXI_awqos->set_sv_netview_offsetfromdp(10014168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M01_AXI_awuser.bind(*p_59_M01_AXI_awuser);
        p_59_M01_AXI_awuser->set_sv_netview_offsetfromdp(10014224);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_awvalid.bind(*p_59_M01_AXI_awvalid);
        p_59_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10014280);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_awready.bind(*p_59_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M01_AXI_wdata.bind(*p_59_M01_AXI_wdata);
        p_59_M01_AXI_wdata->set_sv_netview_offsetfromdp(10014392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M01_AXI_wstrb.bind(*p_59_M01_AXI_wstrb);
        p_59_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10014448);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_wlast.bind(*p_59_M01_AXI_wlast);
        p_59_M01_AXI_wlast->set_sv_netview_offsetfromdp(10014504);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_wvalid.bind(*p_59_M01_AXI_wvalid);
        p_59_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10014560);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_wready.bind(*p_59_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M01_AXI_bresp.bind(*p_59_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M01_AXI_buser.bind(*p_59_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_bvalid.bind(*p_59_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_bready.bind(*p_59_M01_AXI_bready);
        p_59_M01_AXI_bready->set_sv_netview_offsetfromdp(10014840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->M01_AXI_araddr.bind(*p_59_M01_AXI_araddr);
        p_59_M01_AXI_araddr->set_sv_netview_offsetfromdp(10014896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->M01_AXI_arlen.bind(*p_59_M01_AXI_arlen);
        p_59_M01_AXI_arlen->set_sv_netview_offsetfromdp(10014952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M01_AXI_arsize.bind(*p_59_M01_AXI_arsize);
        p_59_M01_AXI_arsize->set_sv_netview_offsetfromdp(10015008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M01_AXI_arburst.bind(*p_59_M01_AXI_arburst);
        p_59_M01_AXI_arburst->set_sv_netview_offsetfromdp(10015064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->M01_AXI_arlock.bind(*p_59_M01_AXI_arlock);
        p_59_M01_AXI_arlock->set_sv_netview_offsetfromdp(10015120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M01_AXI_arcache.bind(*p_59_M01_AXI_arcache);
        p_59_M01_AXI_arcache->set_sv_netview_offsetfromdp(10015176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->M01_AXI_arprot.bind(*p_59_M01_AXI_arprot);
        p_59_M01_AXI_arprot->set_sv_netview_offsetfromdp(10015232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->M01_AXI_arqos.bind(*p_59_M01_AXI_arqos);
        p_59_M01_AXI_arqos->set_sv_netview_offsetfromdp(10015288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M01_AXI_aruser.bind(*p_59_M01_AXI_aruser);
        p_59_M01_AXI_aruser->set_sv_netview_offsetfromdp(10015344);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_arvalid.bind(*p_59_M01_AXI_arvalid);
        p_59_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10015400);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_arready.bind(*p_59_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->M01_AXI_rdata.bind(*p_59_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->M01_AXI_rresp.bind(*p_59_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_rlast.bind(*p_59_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_rvalid.bind(*p_59_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_59_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->M01_AXI_rready.bind(*p_59_M01_AXI_rready);
        p_59_M01_AXI_rready->set_sv_netview_offsetfromdp(10015736);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
    }
