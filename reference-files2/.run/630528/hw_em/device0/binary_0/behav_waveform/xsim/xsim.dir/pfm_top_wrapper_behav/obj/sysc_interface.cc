#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_21(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<21, sc_dt::sc_bv<21> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_28(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<28, sc_dt::sc_bv<28> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_224(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<224, sc_dt::sc_bv<224> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_448(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<448, sc_dt::sc_bv<448> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1825);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6284936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6285160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6285216);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6285272);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6285552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6285608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6285664);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6285720);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(6285944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(6286000);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(6286056);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(6286168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(6286224);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(6286280);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(6286504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(6286560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(6286616);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(6286672);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(6286952);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1826);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6287336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6287560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6287616);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6287672);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6287952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6288008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6288064);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6288120);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(6288232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(6288288);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(6288344);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(6288456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(6288512);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(6288568);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(6288792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(6288848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(6288904);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(6288960);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(6289240);
        sc_inst_3 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1867);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6325112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6325336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6325392);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6325448);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6325728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6325784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6325840);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6325896);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(6326120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(6326176);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(6326232);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(6326344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(6326400);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(6326456);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(6326680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(6326736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(6326792);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(6326848);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(6327128);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1868);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6327512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6327736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6327792);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6327848);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6328128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6328184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6328240);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6328296);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(6328408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(6328464);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(6328520);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(6328632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(6328688);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(6328744);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(6328968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(6329024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(6329080);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(6329136);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(6329416);
        sc_inst_5 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1909);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6366440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6366664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6366720);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6366776);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6367056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6367112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6367168);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6367224);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(6367448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(6367504);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(6367560);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(6367672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(6367728);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(6367784);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(6368008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(6368064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(6368120);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(6368176);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(6368456);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1910);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(6368840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(6369064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(6369120);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(6369176);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(6369456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(6369512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(6369568);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(6369624);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(6369736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(6369792);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(6369848);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(6369960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(6370016);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(6370072);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(6370296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(6370352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(6370408);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(6370464);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(6370744);
        sc_inst_7 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1953);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(6406616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(6406840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(6406896);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(6406952);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(6407232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(6407288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(6407344);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(6407400);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(6407624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(6407680);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(6407736);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(6407848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(6407904);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(6407960);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(6408184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(6408240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(6408296);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(6408352);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(6408632);
        sc_inst_8 = new pfm_dynamic_m03_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(1954);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(6409016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(6409240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(6409296);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(6409352);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(6409632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(6409688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(6409744);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(6409800);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(6409912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(6409968);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(6410024);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(6410136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(6410192);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(6410248);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(6410472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(6410528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(6410584);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(6410640);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(6410920);
        sc_inst_9 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(1995);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(6446792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(6447016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(6447072);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(6447128);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(6447408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(6447464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(6447520);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(6447576);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(6447800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(6447856);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(6447912);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(6448024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(6448080);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(6448136);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(6448360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(6448416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(6448472);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(6448528);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(6448808);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(1996);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(6449192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(6449416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(6449472);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(6449528);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(6449808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(6449864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(6449920);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(6449976);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(6450088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(6450144);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(6450200);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(6450312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(6450368);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(6450424);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(6450648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(6450704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(6450760);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(6450816);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(6451096);
        sc_inst_11 = new pfm_dynamic_auto_cc_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2037);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(6488120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(6488344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(6488400);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(6488456);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(6488736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(6488792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(6488848);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(6488904);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(6489128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(6489184);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(6489240);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(6489352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(6489408);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(6489464);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(6489688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(6489744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(6489800);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(6489856);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(6490136);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2038);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(6490520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(6490744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(6490800);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(6490856);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(6491136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(6491192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(6491248);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(6491304);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(6491416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(6491472);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(6491528);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(6491640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(6491696);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(6491752);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(6491976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(6492032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(6492088);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(6492144);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(6492424);
        sc_inst_13 = new pfm_dynamic_auto_cc_8(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m06_couplers.auto_cc");
        sc_inst_13->xsim_set_dbg_index(2081);
        xsim_sc_channel<0, bool > *p_13_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_aclk.bind(*p_13_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_aresetn.bind(*p_13_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(6528296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(6528520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(6528576);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(6528632);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(6528912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(6528968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(6529024);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(6529080);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<0, bool > *p_13_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_aclk.bind(*p_13_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_aresetn.bind(*p_13_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(6529304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(6529360);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(6529416);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(6529528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(6529584);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(6529640);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(6529864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(6529920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(6529976);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(6530032);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(6530312);
        sc_inst_14 = new pfm_dynamic_m06_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m06_couplers.m06_regslice");
        sc_inst_14->xsim_set_dbg_index(2082);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(6530696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(6530920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(6530976);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(6531032);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(6531312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(6531368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(6531424);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(6531480);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(6531592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(6531648);
        xsim_sc_channel<0, bool > *p_14_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(6531704);
        xsim_sc_channel<0, bool > *p_14_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(6531816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(6531872);
        xsim_sc_channel<0, bool > *p_14_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(6531928);
        xsim_sc_channel<0, bool > *p_14_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(6532152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(6532208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(6532264);
        xsim_sc_channel<0, bool > *p_14_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(6532320);
        xsim_sc_channel<0, bool > *p_14_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(6532600);
        sc_inst_15 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_15->xsim_set_dbg_index(2123);
        xsim_sc_channel<0, bool > *p_15_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->aclk.bind(*p_15_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_aclk);
        xsim_sc_channel<0, bool > *p_15_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->aresetn.bind(*p_15_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot.bind(*p_15_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(6556240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(6556464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(6556520);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(6556576);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot.bind(*p_15_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(6556856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(6556912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(6556968);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(6557024);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axi_awaddr.bind(*p_15_m_axi_awaddr);
        p_15_m_axi_awaddr->set_sv_netview_offsetfromdp(6557136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_awprot.bind(*p_15_m_axi_awprot);
        p_15_m_axi_awprot->set_sv_netview_offsetfromdp(6557192);
        xsim_sc_channel<0, bool > *p_15_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awvalid.bind(*p_15_m_axi_awvalid);
        p_15_m_axi_awvalid->set_sv_netview_offsetfromdp(6557248);
        xsim_sc_channel<0, bool > *p_15_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awready.bind(*p_15_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_wdata.bind(*p_15_m_axi_wdata);
        p_15_m_axi_wdata->set_sv_netview_offsetfromdp(6557360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_wstrb.bind(*p_15_m_axi_wstrb);
        p_15_m_axi_wstrb->set_sv_netview_offsetfromdp(6557416);
        xsim_sc_channel<0, bool > *p_15_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wvalid.bind(*p_15_m_axi_wvalid);
        p_15_m_axi_wvalid->set_sv_netview_offsetfromdp(6557472);
        xsim_sc_channel<0, bool > *p_15_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wready.bind(*p_15_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_bresp.bind(*p_15_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bvalid.bind(*p_15_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bready.bind(*p_15_m_axi_bready);
        p_15_m_axi_bready->set_sv_netview_offsetfromdp(6557696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axi_araddr.bind(*p_15_m_axi_araddr);
        p_15_m_axi_araddr->set_sv_netview_offsetfromdp(6557752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_arprot.bind(*p_15_m_axi_arprot);
        p_15_m_axi_arprot->set_sv_netview_offsetfromdp(6557808);
        xsim_sc_channel<0, bool > *p_15_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arvalid.bind(*p_15_m_axi_arvalid);
        p_15_m_axi_arvalid->set_sv_netview_offsetfromdp(6557864);
        xsim_sc_channel<0, bool > *p_15_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arready.bind(*p_15_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_rdata.bind(*p_15_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_rresp.bind(*p_15_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rvalid.bind(*p_15_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rready.bind(*p_15_m_axi_rready);
        p_15_m_axi_rready->set_sv_netview_offsetfromdp(6558144);
        sc_inst_16 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_16->xsim_set_dbg_index(706);
        xsim_sc_channel<0, bool > *p_16_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk.bind(*p_16_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk);
        xsim_sc_channel<0, bool > *p_16_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->aresetn.bind(*p_16_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(6558528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(6558752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(6558808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(6558864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(6559144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(6559200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(6559256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(6559312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<448, sc_dt::sc_bv<448> > *p_16_m_axi_awaddr = new xsim_sc_channel<448, sc_dt::sc_bv<448> >();
        sc_inst_16->m_axi_awaddr.bind(*p_16_m_axi_awaddr);
        p_16_m_axi_awaddr->set_sv_netview_offsetfromdp(6559424);
        xsim_sc_channel<21, sc_dt::sc_bv<21> > *p_16_m_axi_awprot = new xsim_sc_channel<21, sc_dt::sc_bv<21> >();
        sc_inst_16->m_axi_awprot.bind(*p_16_m_axi_awprot);
        p_16_m_axi_awprot->set_sv_netview_offsetfromdp(6559480);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_awvalid = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_awvalid.bind(*p_16_m_axi_awvalid);
        p_16_m_axi_awvalid->set_sv_netview_offsetfromdp(6559536);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_awready = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_awready.bind(*p_16_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_awready);
        xsim_sc_channel<224, sc_dt::sc_bv<224> > *p_16_m_axi_wdata = new xsim_sc_channel<224, sc_dt::sc_bv<224> >();
        sc_inst_16->m_axi_wdata.bind(*p_16_m_axi_wdata);
        p_16_m_axi_wdata->set_sv_netview_offsetfromdp(6559648);
        xsim_sc_channel<28, sc_dt::sc_bv<28> > *p_16_m_axi_wstrb = new xsim_sc_channel<28, sc_dt::sc_bv<28> >();
        sc_inst_16->m_axi_wstrb.bind(*p_16_m_axi_wstrb);
        p_16_m_axi_wstrb->set_sv_netview_offsetfromdp(6559704);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_wvalid = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_wvalid.bind(*p_16_m_axi_wvalid);
        p_16_m_axi_wvalid->set_sv_netview_offsetfromdp(6559760);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_wready = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_wready.bind(*p_16_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_wready);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_16_m_axi_bresp = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_16->m_axi_bresp.bind(*p_16_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_bresp);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_bvalid = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_bvalid.bind(*p_16_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_bvalid);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_bready = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_bready.bind(*p_16_m_axi_bready);
        p_16_m_axi_bready->set_sv_netview_offsetfromdp(6559984);
        xsim_sc_channel<448, sc_dt::sc_bv<448> > *p_16_m_axi_araddr = new xsim_sc_channel<448, sc_dt::sc_bv<448> >();
        sc_inst_16->m_axi_araddr.bind(*p_16_m_axi_araddr);
        p_16_m_axi_araddr->set_sv_netview_offsetfromdp(6560040);
        xsim_sc_channel<21, sc_dt::sc_bv<21> > *p_16_m_axi_arprot = new xsim_sc_channel<21, sc_dt::sc_bv<21> >();
        sc_inst_16->m_axi_arprot.bind(*p_16_m_axi_arprot);
        p_16_m_axi_arprot->set_sv_netview_offsetfromdp(6560096);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_arvalid = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_arvalid.bind(*p_16_m_axi_arvalid);
        p_16_m_axi_arvalid->set_sv_netview_offsetfromdp(6560152);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_arready = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_arready.bind(*p_16_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_arready);
        xsim_sc_channel<224, sc_dt::sc_bv<224> > *p_16_m_axi_rdata = new xsim_sc_channel<224, sc_dt::sc_bv<224> >();
        sc_inst_16->m_axi_rdata.bind(*p_16_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rdata);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_16_m_axi_rresp = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_16->m_axi_rresp.bind(*p_16_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rresp);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_rvalid = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_rvalid.bind(*p_16_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rvalid);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_16_m_axi_rready = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_16->m_axi_rready.bind(*p_16_m_axi_rready);
        p_16_m_axi_rready->set_sv_netview_offsetfromdp(6560432);
        sc_inst_17 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_17->xsim_set_dbg_index(313);
        xsim_sc_channel<0, bool > *p_17_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_clk.bind(*p_17_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_17_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_aresetn.bind(*p_17_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_17_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_clk.bind(*p_17_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_clk);
        xsim_sc_channel<0, bool > *p_17_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_aresetn.bind(*p_17_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_aresetn);
        xsim_sc_channel<0, bool > *p_17_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->axilite_clk.bind(*p_17_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_axilite_clk);
        xsim_sc_channel<0, bool > *p_17_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->axilite_aresetn.bind(*p_17_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_17_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready0.bind(*p_17_trace_tready0);
        p_17_trace_tready0->set_sv_netview_offsetfromdp(6560872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata0.bind(*p_17_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata0);
        xsim_sc_channel<0, bool > *p_17_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast0.bind(*p_17_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid0.bind(*p_17_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest0.bind(*p_17_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest0);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid0.bind(*p_17_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_17_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready1.bind(*p_17_trace_tready1);
        p_17_trace_tready1->set_sv_netview_offsetfromdp(6561208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata1.bind(*p_17_trace_tdata1);
        p_17_trace_tdata1->set_sv_netview_offsetfromdp(6561264);
        xsim_sc_channel<0, bool > *p_17_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast1.bind(*p_17_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid1.bind(*p_17_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest1.bind(*p_17_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest1);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid1.bind(*p_17_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata2.bind(*p_17_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata2);
        xsim_sc_channel<0, bool > *p_17_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready2.bind(*p_17_trace_tready2);
        p_17_trace_tready2->set_sv_netview_offsetfromdp(6561600);
        xsim_sc_channel<0, bool > *p_17_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast2.bind(*p_17_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid2.bind(*p_17_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest2.bind(*p_17_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest2);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid2.bind(*p_17_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata3.bind(*p_17_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata3);
        xsim_sc_channel<0, bool > *p_17_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready3.bind(*p_17_trace_tready3);
        p_17_trace_tready3->set_sv_netview_offsetfromdp(6561936);
        xsim_sc_channel<0, bool > *p_17_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast3.bind(*p_17_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid3.bind(*p_17_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest3.bind(*p_17_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest3);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid3.bind(*p_17_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata4.bind(*p_17_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata4);
        xsim_sc_channel<0, bool > *p_17_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready4.bind(*p_17_trace_tready4);
        p_17_trace_tready4->set_sv_netview_offsetfromdp(6562272);
        xsim_sc_channel<0, bool > *p_17_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast4.bind(*p_17_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid4.bind(*p_17_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest4.bind(*p_17_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest4);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid4.bind(*p_17_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata5.bind(*p_17_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata5);
        xsim_sc_channel<0, bool > *p_17_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready5.bind(*p_17_trace_tready5);
        p_17_trace_tready5->set_sv_netview_offsetfromdp(6562608);
        xsim_sc_channel<0, bool > *p_17_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast5.bind(*p_17_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid5.bind(*p_17_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest5.bind(*p_17_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest5);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid5.bind(*p_17_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata6.bind(*p_17_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata6);
        xsim_sc_channel<0, bool > *p_17_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready6.bind(*p_17_trace_tready6);
        p_17_trace_tready6->set_sv_netview_offsetfromdp(6562944);
        xsim_sc_channel<0, bool > *p_17_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast6.bind(*p_17_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid6.bind(*p_17_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest6.bind(*p_17_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest6);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid6.bind(*p_17_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->trace_tdata7.bind(*p_17_trace_tdata7);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdata7);
        xsim_sc_channel<0, bool > *p_17_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tready7.bind(*p_17_trace_tready7);
        p_17_trace_tready7->set_sv_netview_offsetfromdp(6563280);
        xsim_sc_channel<0, bool > *p_17_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tlast7.bind(*p_17_trace_tlast7);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tid7.bind(*p_17_trace_tid7);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->trace_tdest7.bind(*p_17_trace_tdest7);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tdest7);
        xsim_sc_channel<0, bool > *p_17_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_tvalid7.bind(*p_17_trace_tvalid7);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_tvalid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(6563672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(6563896);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(6563952);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(6564064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(6564232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(6564288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(6564344);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(6564400);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axihub_awaddr.bind(*p_17_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_awvalid.bind(*p_17_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_awready.bind(*p_17_s_axihub_awready);
        p_17_s_axihub_awready->set_sv_netview_offsetfromdp(6564624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axihub_wdata.bind(*p_17_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axihub_wstrb.bind(*p_17_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_wvalid.bind(*p_17_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_wready.bind(*p_17_s_axihub_wready);
        p_17_s_axihub_wready->set_sv_netview_offsetfromdp(6564848);
        xsim_sc_channel<0, bool > *p_17_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_bvalid.bind(*p_17_s_axihub_bvalid);
        p_17_s_axihub_bvalid->set_sv_netview_offsetfromdp(6564904);
        xsim_sc_channel<0, bool > *p_17_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_bready.bind(*p_17_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axihub_bresp.bind(*p_17_s_axihub_bresp);
        p_17_s_axihub_bresp->set_sv_netview_offsetfromdp(6565016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axihub_araddr.bind(*p_17_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_arvalid.bind(*p_17_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_arready.bind(*p_17_s_axihub_arready);
        p_17_s_axihub_arready->set_sv_netview_offsetfromdp(6565184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axihub_rdata.bind(*p_17_s_axihub_rdata);
        p_17_s_axihub_rdata->set_sv_netview_offsetfromdp(6565240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axihub_rresp.bind(*p_17_s_axihub_rresp);
        p_17_s_axihub_rresp->set_sv_netview_offsetfromdp(6565296);
        xsim_sc_channel<0, bool > *p_17_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_rvalid.bind(*p_17_s_axihub_rvalid);
        p_17_s_axihub_rvalid->set_sv_netview_offsetfromdp(6565352);
        xsim_sc_channel<0, bool > *p_17_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axihub_rready.bind(*p_17_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_aximm_awaddr.bind(*p_17_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_awvalid.bind(*p_17_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_awready.bind(*p_17_s_aximm_awready);
        p_17_s_aximm_awready->set_sv_netview_offsetfromdp(6565576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_aximm_awlen.bind(*p_17_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_aximm_awsize.bind(*p_17_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_aximm_awburst.bind(*p_17_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_aximm_awid.bind(*p_17_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_aximm_wdata.bind(*p_17_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_aximm_wstrb.bind(*p_17_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_wvalid.bind(*p_17_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_wready.bind(*p_17_s_aximm_wready);
        p_17_s_aximm_wready->set_sv_netview_offsetfromdp(6566024);
        xsim_sc_channel<0, bool > *p_17_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_bvalid.bind(*p_17_s_aximm_bvalid);
        p_17_s_aximm_bvalid->set_sv_netview_offsetfromdp(6566080);
        xsim_sc_channel<0, bool > *p_17_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_bready.bind(*p_17_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_17_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_wlast.bind(*p_17_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_17_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_rlast.bind(*p_17_s_aximm_rlast);
        p_17_s_aximm_rlast->set_sv_netview_offsetfromdp(6566248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_aximm_bresp.bind(*p_17_s_aximm_bresp);
        p_17_s_aximm_bresp->set_sv_netview_offsetfromdp(6566304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_aximm_bid.bind(*p_17_s_aximm_bid);
        p_17_s_aximm_bid->set_sv_netview_offsetfromdp(6566360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_aximm_araddr.bind(*p_17_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_17_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_arvalid.bind(*p_17_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_arready.bind(*p_17_s_aximm_arready);
        p_17_s_aximm_arready->set_sv_netview_offsetfromdp(6566528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_aximm_arlen.bind(*p_17_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_aximm_arsize.bind(*p_17_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_aximm_arburst.bind(*p_17_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_aximm_arid.bind(*p_17_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_aximm_rdata.bind(*p_17_s_aximm_rdata);
        p_17_s_aximm_rdata->set_sv_netview_offsetfromdp(6566808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_aximm_rid.bind(*p_17_s_aximm_rid);
        p_17_s_aximm_rid->set_sv_netview_offsetfromdp(6566864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_aximm_rresp.bind(*p_17_s_aximm_rresp);
        p_17_s_aximm_rresp->set_sv_netview_offsetfromdp(6566920);
        xsim_sc_channel<0, bool > *p_17_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_rvalid.bind(*p_17_s_aximm_rvalid);
        p_17_s_aximm_rvalid->set_sv_netview_offsetfromdp(6566976);
        xsim_sc_channel<0, bool > *p_17_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_aximm_rready.bind(*p_17_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_aximm_rready);
        sc_inst_18 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_18->xsim_set_dbg_index(314);
        xsim_sc_channel<0, bool > *p_18_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_clk.bind(*p_18_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_clk);
        xsim_sc_channel<0, bool > *p_18_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_resetn.bind(*p_18_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_resetn);
        xsim_sc_channel<0, bool > *p_18_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_clk.bind(*p_18_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_clk);
        xsim_sc_channel<0, bool > *p_18_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_rst.bind(*p_18_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot.bind(*p_18_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(6567528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(6567752);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(6567808);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(6567920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot.bind(*p_18_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(6568144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(6568200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(6568256);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(6568312);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<0, bool > *p_18_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWVALID.bind(*p_18_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_18_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWREADY.bind(*p_18_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_AWADDR.bind(*p_18_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_18_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WVALID.bind(*p_18_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WVALID);
        xsim_sc_channel<0, bool > *p_18_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WREADY.bind(*p_18_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_WDATA.bind(*p_18_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->mon_WSTRB.bind(*p_18_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_18_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARVALID.bind(*p_18_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_18_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARREADY.bind(*p_18_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_ARADDR.bind(*p_18_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_18_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RVALID.bind(*p_18_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RVALID);
        xsim_sc_channel<0, bool > *p_18_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RREADY.bind(*p_18_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_RDATA.bind(*p_18_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_RRESP.bind(*p_18_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RRESP);
        xsim_sc_channel<0, bool > *p_18_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BVALID.bind(*p_18_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BVALID);
        xsim_sc_channel<0, bool > *p_18_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BREADY.bind(*p_18_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_BRESP.bind(*p_18_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axis_tready.bind(*p_18_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_tdata.bind(*p_18_m_axis_tdata);
        p_18_m_axis_tdata->set_sv_netview_offsetfromdp(6569432);
        xsim_sc_channel<0, bool > *p_18_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_tlast.bind(*p_18_m_axis_tlast);
        p_18_m_axis_tlast->set_sv_netview_offsetfromdp(6569488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_tid.bind(*p_18_m_axis_tid);
        p_18_m_axis_tid->set_sv_netview_offsetfromdp(6569544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_tdest.bind(*p_18_m_axis_tdest);
        p_18_m_axis_tdest->set_sv_netview_offsetfromdp(6569600);
        xsim_sc_channel<0, bool > *p_18_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_tvalid.bind(*p_18_m_axis_tvalid);
        p_18_m_axis_tvalid->set_sv_netview_offsetfromdp(6569656);
        xsim_sc_channel<0, bool > *p_18_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_continue.bind(*p_18_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_continue);
        xsim_sc_channel<0, bool > *p_18_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_ready.bind(*p_18_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_ready);
        xsim_sc_channel<0, bool > *p_18_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_start.bind(*p_18_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_start);
        xsim_sc_channel<0, bool > *p_18_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_idle.bind(*p_18_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_idle);
        xsim_sc_channel<0, bool > *p_18_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_done.bind(*p_18_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_done);
        sc_inst_19 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_19->xsim_set_dbg_index(315);
        xsim_sc_channel<0, bool > *p_19_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_clk.bind(*p_19_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_clk);
        xsim_sc_channel<0, bool > *p_19_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_resetn.bind(*p_19_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_resetn);
        xsim_sc_channel<0, bool > *p_19_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_clk.bind(*p_19_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_clk);
        xsim_sc_channel<0, bool > *p_19_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_rst.bind(*p_19_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(6570376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(6570600);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(6570656);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(6570768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(6570936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(6570992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(6571048);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(6571104);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWVALID.bind(*p_19_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_19_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWREADY.bind(*p_19_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_AWADDR.bind(*p_19_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_AWID.bind(*p_19_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_AWLEN.bind(*p_19_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_AWSIZE.bind(*p_19_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_AWBURST.bind(*p_19_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_19_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WVALID.bind(*p_19_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WVALID);
        xsim_sc_channel<0, bool > *p_19_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WREADY.bind(*p_19_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->mon_WDATA.bind(*p_19_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->mon_WSTRB.bind(*p_19_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_19_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WLAST.bind(*p_19_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WLAST);
        xsim_sc_channel<0, bool > *p_19_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARVALID.bind(*p_19_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_19_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARREADY.bind(*p_19_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_ARADDR.bind(*p_19_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_ARID.bind(*p_19_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_ARLEN.bind(*p_19_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_ARSIZE.bind(*p_19_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_ARBURST.bind(*p_19_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_19_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RVALID.bind(*p_19_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RVALID);
        xsim_sc_channel<0, bool > *p_19_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RREADY.bind(*p_19_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->mon_RDATA.bind(*p_19_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RDATA);
        xsim_sc_channel<0, bool > *p_19_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RLAST.bind(*p_19_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_RID.bind(*p_19_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_RRESP.bind(*p_19_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RRESP);
        xsim_sc_channel<0, bool > *p_19_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BVALID.bind(*p_19_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BVALID);
        xsim_sc_channel<0, bool > *p_19_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BREADY.bind(*p_19_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_BRESP.bind(*p_19_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_BID.bind(*p_19_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BID);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tready.bind(*p_19_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_rd_tdata.bind(*p_19_m_axis_rd_tdata);
        p_19_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6572896);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tlast.bind(*p_19_m_axis_rd_tlast);
        p_19_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6572952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tid.bind(*p_19_m_axis_rd_tid);
        p_19_m_axis_rd_tid->set_sv_netview_offsetfromdp(6573008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tdest.bind(*p_19_m_axis_rd_tdest);
        p_19_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6573064);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tready.bind(*p_19_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_wr_tdata.bind(*p_19_m_axis_wr_tdata);
        p_19_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6573176);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tlast.bind(*p_19_m_axis_wr_tlast);
        p_19_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6573232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tid.bind(*p_19_m_axis_wr_tid);
        p_19_m_axis_wr_tid->set_sv_netview_offsetfromdp(6573288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tdest.bind(*p_19_m_axis_wr_tdest);
        p_19_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6573344);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tvalid.bind(*p_19_m_axis_wr_tvalid);
        p_19_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6573400);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tvalid.bind(*p_19_m_axis_rd_tvalid);
        p_19_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6573456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr_mon.bind(*p_19_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot_mon.bind(*p_19_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid_mon.bind(*p_19_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready_mon.bind(*p_19_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata_mon.bind(*p_19_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb_mon.bind(*p_19_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid_mon.bind(*p_19_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready_mon.bind(*p_19_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp_mon.bind(*p_19_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid_mon.bind(*p_19_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready_mon.bind(*p_19_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr_mon.bind(*p_19_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot_mon.bind(*p_19_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid_mon.bind(*p_19_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready_mon.bind(*p_19_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata_mon.bind(*p_19_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp_mon.bind(*p_19_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid_mon.bind(*p_19_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready_mon.bind(*p_19_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready_mon);
        sc_inst_20 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_20->xsim_set_dbg_index(316);
        xsim_sc_channel<0, bool > *p_20_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_clk.bind(*p_20_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_clk);
        xsim_sc_channel<0, bool > *p_20_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_resetn.bind(*p_20_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_resetn);
        xsim_sc_channel<0, bool > *p_20_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->trace_clk.bind(*p_20_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_trace_clk);
        xsim_sc_channel<0, bool > *p_20_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_20->trace_rst.bind(*p_20_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(6574960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(6575184);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(6575240);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(6575352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(6575520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(6575576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(6575632);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(6575688);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<0, bool > *p_20_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_AWVALID.bind(*p_20_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_20_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_AWREADY.bind(*p_20_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->mon_AWADDR.bind(*p_20_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->mon_AWID.bind(*p_20_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->mon_AWLEN.bind(*p_20_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->mon_AWSIZE.bind(*p_20_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->mon_AWBURST.bind(*p_20_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_20_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_WVALID.bind(*p_20_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_WVALID);
        xsim_sc_channel<0, bool > *p_20_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_WREADY.bind(*p_20_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->mon_WDATA.bind(*p_20_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->mon_WSTRB.bind(*p_20_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_20_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_WLAST.bind(*p_20_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_WLAST);
        xsim_sc_channel<0, bool > *p_20_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_ARVALID.bind(*p_20_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_20_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_ARREADY.bind(*p_20_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->mon_ARADDR.bind(*p_20_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->mon_ARID.bind(*p_20_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->mon_ARLEN.bind(*p_20_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->mon_ARSIZE.bind(*p_20_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->mon_ARBURST.bind(*p_20_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_20_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_RVALID.bind(*p_20_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RVALID);
        xsim_sc_channel<0, bool > *p_20_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_RREADY.bind(*p_20_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->mon_RDATA.bind(*p_20_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RDATA);
        xsim_sc_channel<0, bool > *p_20_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_RLAST.bind(*p_20_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->mon_RID.bind(*p_20_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->mon_RRESP.bind(*p_20_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_RRESP);
        xsim_sc_channel<0, bool > *p_20_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_BVALID.bind(*p_20_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_BVALID);
        xsim_sc_channel<0, bool > *p_20_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->mon_BREADY.bind(*p_20_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->mon_BRESP.bind(*p_20_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->mon_BID.bind(*p_20_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_mon_BID);
        xsim_sc_channel<0, bool > *p_20_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_rd_tready.bind(*p_20_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axis_rd_tdata.bind(*p_20_m_axis_rd_tdata);
        p_20_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6577480);
        xsim_sc_channel<0, bool > *p_20_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_rd_tlast.bind(*p_20_m_axis_rd_tlast);
        p_20_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6577536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axis_rd_tid.bind(*p_20_m_axis_rd_tid);
        p_20_m_axis_rd_tid->set_sv_netview_offsetfromdp(6577592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axis_rd_tdest.bind(*p_20_m_axis_rd_tdest);
        p_20_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6577648);
        xsim_sc_channel<0, bool > *p_20_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_wr_tready.bind(*p_20_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axis_wr_tdata.bind(*p_20_m_axis_wr_tdata);
        p_20_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6577760);
        xsim_sc_channel<0, bool > *p_20_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_wr_tlast.bind(*p_20_m_axis_wr_tlast);
        p_20_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6577816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axis_wr_tid.bind(*p_20_m_axis_wr_tid);
        p_20_m_axis_wr_tid->set_sv_netview_offsetfromdp(6577872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axis_wr_tdest.bind(*p_20_m_axis_wr_tdest);
        p_20_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6577928);
        xsim_sc_channel<0, bool > *p_20_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_wr_tvalid.bind(*p_20_m_axis_wr_tvalid);
        p_20_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6577984);
        xsim_sc_channel<0, bool > *p_20_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axis_rd_tvalid.bind(*p_20_m_axis_rd_tvalid);
        p_20_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6578040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_awaddr_mon.bind(*p_20_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot_mon.bind(*p_20_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid_mon.bind(*p_20_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready_mon.bind(*p_20_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wdata_mon.bind(*p_20_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_wstrb_mon.bind(*p_20_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid_mon.bind(*p_20_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready_mon.bind(*p_20_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp_mon.bind(*p_20_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid_mon.bind(*p_20_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready_mon.bind(*p_20_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_araddr_mon.bind(*p_20_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot_mon.bind(*p_20_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid_mon.bind(*p_20_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready_mon.bind(*p_20_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_rdata_mon.bind(*p_20_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp_mon.bind(*p_20_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid_mon.bind(*p_20_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready_mon.bind(*p_20_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready_mon);
        sc_inst_21 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_21->xsim_set_dbg_index(317);
        xsim_sc_channel<0, bool > *p_21_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_clk.bind(*p_21_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_clk);
        xsim_sc_channel<0, bool > *p_21_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_resetn.bind(*p_21_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_resetn);
        xsim_sc_channel<0, bool > *p_21_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->trace_clk.bind(*p_21_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_trace_clk);
        xsim_sc_channel<0, bool > *p_21_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_21->trace_rst.bind(*p_21_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(6579600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(6579824);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(6579880);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(6579992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(6580216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(6580272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(6580328);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(6580384);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<0, bool > *p_21_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_AWVALID.bind(*p_21_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_21_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_AWREADY.bind(*p_21_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->mon_AWADDR.bind(*p_21_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_21_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_WVALID.bind(*p_21_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_WVALID);
        xsim_sc_channel<0, bool > *p_21_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_WREADY.bind(*p_21_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->mon_WDATA.bind(*p_21_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->mon_WSTRB.bind(*p_21_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_21_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_ARVALID.bind(*p_21_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_21_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_ARREADY.bind(*p_21_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->mon_ARADDR.bind(*p_21_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_21_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_RVALID.bind(*p_21_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_RVALID);
        xsim_sc_channel<0, bool > *p_21_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_RREADY.bind(*p_21_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->mon_RDATA.bind(*p_21_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->mon_RRESP.bind(*p_21_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_RRESP);
        xsim_sc_channel<0, bool > *p_21_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_BVALID.bind(*p_21_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_BVALID);
        xsim_sc_channel<0, bool > *p_21_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->mon_BREADY.bind(*p_21_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->mon_BRESP.bind(*p_21_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axis_tready.bind(*p_21_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axis_tdata.bind(*p_21_m_axis_tdata);
        p_21_m_axis_tdata->set_sv_netview_offsetfromdp(6581504);
        xsim_sc_channel<0, bool > *p_21_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axis_tlast.bind(*p_21_m_axis_tlast);
        p_21_m_axis_tlast->set_sv_netview_offsetfromdp(6581560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axis_tid.bind(*p_21_m_axis_tid);
        p_21_m_axis_tid->set_sv_netview_offsetfromdp(6581616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axis_tdest.bind(*p_21_m_axis_tdest);
        p_21_m_axis_tdest->set_sv_netview_offsetfromdp(6581672);
        xsim_sc_channel<0, bool > *p_21_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axis_tvalid.bind(*p_21_m_axis_tvalid);
        p_21_m_axis_tvalid->set_sv_netview_offsetfromdp(6581728);
        xsim_sc_channel<0, bool > *p_21_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_continue.bind(*p_21_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_continue);
        xsim_sc_channel<0, bool > *p_21_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_ready.bind(*p_21_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_ready);
        xsim_sc_channel<0, bool > *p_21_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_start.bind(*p_21_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_start);
        xsim_sc_channel<0, bool > *p_21_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_idle.bind(*p_21_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_idle);
        xsim_sc_channel<0, bool > *p_21_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_done.bind(*p_21_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_done);
        sc_inst_22 = new pfm_dynamic_dpa_mon4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon4");
        sc_inst_22->xsim_set_dbg_index(318);
        xsim_sc_channel<0, bool > *p_22_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_clk.bind(*p_22_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_clk);
        xsim_sc_channel<0, bool > *p_22_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_resetn.bind(*p_22_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_resetn);
        xsim_sc_channel<0, bool > *p_22_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->trace_clk.bind(*p_22_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_trace_clk);
        xsim_sc_channel<0, bool > *p_22_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_22->trace_rst.bind(*p_22_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(6582448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(6582672);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(6582728);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(6582840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(6583008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(6583064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(6583120);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(6583176);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<0, bool > *p_22_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_AWVALID.bind(*p_22_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_22_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_AWREADY.bind(*p_22_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->mon_AWADDR.bind(*p_22_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->mon_AWID.bind(*p_22_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->mon_AWLEN.bind(*p_22_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->mon_AWSIZE.bind(*p_22_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->mon_AWBURST.bind(*p_22_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_22_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_WVALID.bind(*p_22_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_WVALID);
        xsim_sc_channel<0, bool > *p_22_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_WREADY.bind(*p_22_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->mon_WDATA.bind(*p_22_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->mon_WSTRB.bind(*p_22_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_22_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_WLAST.bind(*p_22_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_WLAST);
        xsim_sc_channel<0, bool > *p_22_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_ARVALID.bind(*p_22_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_22_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_ARREADY.bind(*p_22_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->mon_ARADDR.bind(*p_22_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->mon_ARID.bind(*p_22_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->mon_ARLEN.bind(*p_22_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->mon_ARSIZE.bind(*p_22_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->mon_ARBURST.bind(*p_22_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_22_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_RVALID.bind(*p_22_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RVALID);
        xsim_sc_channel<0, bool > *p_22_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_RREADY.bind(*p_22_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->mon_RDATA.bind(*p_22_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RDATA);
        xsim_sc_channel<0, bool > *p_22_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_RLAST.bind(*p_22_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->mon_RID.bind(*p_22_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->mon_RRESP.bind(*p_22_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_RRESP);
        xsim_sc_channel<0, bool > *p_22_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_BVALID.bind(*p_22_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_BVALID);
        xsim_sc_channel<0, bool > *p_22_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->mon_BREADY.bind(*p_22_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->mon_BRESP.bind(*p_22_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->mon_BID.bind(*p_22_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_mon_BID);
        xsim_sc_channel<0, bool > *p_22_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_rd_tready.bind(*p_22_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axis_rd_tdata.bind(*p_22_m_axis_rd_tdata);
        p_22_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6584968);
        xsim_sc_channel<0, bool > *p_22_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_rd_tlast.bind(*p_22_m_axis_rd_tlast);
        p_22_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6585024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axis_rd_tid.bind(*p_22_m_axis_rd_tid);
        p_22_m_axis_rd_tid->set_sv_netview_offsetfromdp(6585080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axis_rd_tdest.bind(*p_22_m_axis_rd_tdest);
        p_22_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6585136);
        xsim_sc_channel<0, bool > *p_22_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_wr_tready.bind(*p_22_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axis_wr_tdata.bind(*p_22_m_axis_wr_tdata);
        p_22_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6585248);
        xsim_sc_channel<0, bool > *p_22_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_wr_tlast.bind(*p_22_m_axis_wr_tlast);
        p_22_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6585304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axis_wr_tid.bind(*p_22_m_axis_wr_tid);
        p_22_m_axis_wr_tid->set_sv_netview_offsetfromdp(6585360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axis_wr_tdest.bind(*p_22_m_axis_wr_tdest);
        p_22_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6585416);
        xsim_sc_channel<0, bool > *p_22_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_wr_tvalid.bind(*p_22_m_axis_wr_tvalid);
        p_22_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6585472);
        xsim_sc_channel<0, bool > *p_22_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axis_rd_tvalid.bind(*p_22_m_axis_rd_tvalid);
        p_22_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6585528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_awaddr_mon.bind(*p_22_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot_mon.bind(*p_22_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid_mon.bind(*p_22_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready_mon.bind(*p_22_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata_mon.bind(*p_22_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb_mon.bind(*p_22_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid_mon.bind(*p_22_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready_mon.bind(*p_22_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp_mon.bind(*p_22_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid_mon.bind(*p_22_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready_mon.bind(*p_22_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_araddr_mon.bind(*p_22_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot_mon.bind(*p_22_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid_mon.bind(*p_22_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready_mon.bind(*p_22_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata_mon.bind(*p_22_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp_mon.bind(*p_22_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid_mon.bind(*p_22_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready_mon.bind(*p_22_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready_mon);
        sc_inst_23 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_23->xsim_set_dbg_index(880);
        sc_inst_24 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_24->xsim_set_dbg_index(881);
        xsim_sc_channel<0, bool > *p_24_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_24->HBM_REF_CLK_0.bind(*p_24_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_24_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_24_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_ACLK.bind(*p_24_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_24_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_ARESET_N.bind(*p_24_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_00_ARADDR.bind(*p_24_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_00_ARBURST.bind(*p_24_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_00_ARID.bind(*p_24_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_00_ARLEN.bind(*p_24_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_00_ARSIZE.bind(*p_24_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_ARVALID.bind(*p_24_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_00_AWADDR.bind(*p_24_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_00_AWBURST.bind(*p_24_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_00_AWID.bind(*p_24_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_00_AWLEN.bind(*p_24_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_00_AWSIZE.bind(*p_24_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_AWVALID.bind(*p_24_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_RREADY.bind(*p_24_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_24_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_BREADY.bind(*p_24_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_00_WDATA.bind(*p_24_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_24_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_WLAST.bind(*p_24_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_00_WSTRB.bind(*p_24_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_00_WDATA_PARITY.bind(*p_24_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_24_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_WVALID.bind(*p_24_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_ACLK.bind(*p_24_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_24_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_ARESET_N.bind(*p_24_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_01_ARADDR.bind(*p_24_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_01_ARBURST.bind(*p_24_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_01_ARID.bind(*p_24_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_01_ARLEN.bind(*p_24_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_01_ARSIZE.bind(*p_24_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_ARVALID.bind(*p_24_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_01_AWADDR.bind(*p_24_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_01_AWBURST.bind(*p_24_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_01_AWID.bind(*p_24_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_01_AWLEN.bind(*p_24_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_01_AWSIZE.bind(*p_24_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_AWVALID.bind(*p_24_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_RREADY.bind(*p_24_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_24_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_BREADY.bind(*p_24_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_01_WDATA.bind(*p_24_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_24_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_WLAST.bind(*p_24_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_01_WSTRB.bind(*p_24_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_01_WDATA_PARITY.bind(*p_24_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_24_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_WVALID.bind(*p_24_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_ACLK.bind(*p_24_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_24_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_ARESET_N.bind(*p_24_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_02_ARADDR.bind(*p_24_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_02_ARBURST.bind(*p_24_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_02_ARID.bind(*p_24_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_02_ARLEN.bind(*p_24_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_02_ARSIZE.bind(*p_24_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_ARVALID.bind(*p_24_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_02_AWADDR.bind(*p_24_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_02_AWBURST.bind(*p_24_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_02_AWID.bind(*p_24_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_02_AWLEN.bind(*p_24_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_02_AWSIZE.bind(*p_24_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_AWVALID.bind(*p_24_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_RREADY.bind(*p_24_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_24_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_BREADY.bind(*p_24_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_02_WDATA.bind(*p_24_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_24_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_WLAST.bind(*p_24_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_02_WSTRB.bind(*p_24_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_02_WDATA_PARITY.bind(*p_24_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_24_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_WVALID.bind(*p_24_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_02_WVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_03_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_ACLK.bind(*p_24_AXI_03_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ACLK);
        xsim_sc_channel<0, bool > *p_24_AXI_03_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_ARESET_N.bind(*p_24_AXI_03_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_03_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_03_ARADDR.bind(*p_24_AXI_03_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_03_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_03_ARBURST.bind(*p_24_AXI_03_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_03_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_03_ARID.bind(*p_24_AXI_03_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_03_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_03_ARLEN.bind(*p_24_AXI_03_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_03_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_03_ARSIZE.bind(*p_24_AXI_03_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_03_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_ARVALID.bind(*p_24_AXI_03_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_AXI_03_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->AXI_03_AWADDR.bind(*p_24_AXI_03_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_03_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_03_AWBURST.bind(*p_24_AXI_03_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_03_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_03_AWID.bind(*p_24_AXI_03_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_AXI_03_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->AXI_03_AWLEN.bind(*p_24_AXI_03_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_AXI_03_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->AXI_03_AWSIZE.bind(*p_24_AXI_03_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWSIZE);
        xsim_sc_channel<0, bool > *p_24_AXI_03_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_AWVALID.bind(*p_24_AXI_03_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_AWVALID);
        xsim_sc_channel<0, bool > *p_24_AXI_03_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_RREADY.bind(*p_24_AXI_03_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_RREADY);
        xsim_sc_channel<0, bool > *p_24_AXI_03_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_BREADY.bind(*p_24_AXI_03_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_03_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_03_WDATA.bind(*p_24_AXI_03_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_WDATA);
        xsim_sc_channel<0, bool > *p_24_AXI_03_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_WLAST.bind(*p_24_AXI_03_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_03_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_03_WSTRB.bind(*p_24_AXI_03_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_03_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_03_WDATA_PARITY.bind(*p_24_AXI_03_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_24_AXI_03_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_WVALID.bind(*p_24_AXI_03_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_AXI_03_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->APB_0_PWDATA.bind(*p_24_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_24_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_24->APB_0_PADDR.bind(*p_24_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_24_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PCLK.bind(*p_24_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_24_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PENABLE.bind(*p_24_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_24_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PRESET_N.bind(*p_24_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_24_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PSEL.bind(*p_24_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_24_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PWRITE.bind(*p_24_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_24_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_24_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_ARREADY.bind(*p_24_AXI_00_ARREADY);
        p_24_AXI_00_ARREADY->set_sv_netview_offsetfromdp(6783088);
        xsim_sc_channel<0, bool > *p_24_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_AWREADY.bind(*p_24_AXI_00_AWREADY);
        p_24_AXI_00_AWREADY->set_sv_netview_offsetfromdp(6783144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_00_RDATA_PARITY.bind(*p_24_AXI_00_RDATA_PARITY);
        p_24_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(6783200);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_00_RDATA.bind(*p_24_AXI_00_RDATA);
        p_24_AXI_00_RDATA->set_sv_netview_offsetfromdp(6783256);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_00_RID.bind(*p_24_AXI_00_RID);
        p_24_AXI_00_RID->set_sv_netview_offsetfromdp(6783312);
        xsim_sc_channel<0, bool > *p_24_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_RLAST.bind(*p_24_AXI_00_RLAST);
        p_24_AXI_00_RLAST->set_sv_netview_offsetfromdp(6783368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_00_RRESP.bind(*p_24_AXI_00_RRESP);
        p_24_AXI_00_RRESP->set_sv_netview_offsetfromdp(6783424);
        xsim_sc_channel<0, bool > *p_24_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_RVALID.bind(*p_24_AXI_00_RVALID);
        p_24_AXI_00_RVALID->set_sv_netview_offsetfromdp(6783480);
        xsim_sc_channel<0, bool > *p_24_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_WREADY.bind(*p_24_AXI_00_WREADY);
        p_24_AXI_00_WREADY->set_sv_netview_offsetfromdp(6783536);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_00_BID.bind(*p_24_AXI_00_BID);
        p_24_AXI_00_BID->set_sv_netview_offsetfromdp(6783592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_00_BRESP.bind(*p_24_AXI_00_BRESP);
        p_24_AXI_00_BRESP->set_sv_netview_offsetfromdp(6783648);
        xsim_sc_channel<0, bool > *p_24_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_00_BVALID.bind(*p_24_AXI_00_BVALID);
        p_24_AXI_00_BVALID->set_sv_netview_offsetfromdp(6783704);
        xsim_sc_channel<0, bool > *p_24_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_ARREADY.bind(*p_24_AXI_01_ARREADY);
        p_24_AXI_01_ARREADY->set_sv_netview_offsetfromdp(6783760);
        xsim_sc_channel<0, bool > *p_24_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_AWREADY.bind(*p_24_AXI_01_AWREADY);
        p_24_AXI_01_AWREADY->set_sv_netview_offsetfromdp(6783816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_01_RDATA_PARITY.bind(*p_24_AXI_01_RDATA_PARITY);
        p_24_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(6783872);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_01_RDATA.bind(*p_24_AXI_01_RDATA);
        p_24_AXI_01_RDATA->set_sv_netview_offsetfromdp(6783928);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_01_RID.bind(*p_24_AXI_01_RID);
        p_24_AXI_01_RID->set_sv_netview_offsetfromdp(6783984);
        xsim_sc_channel<0, bool > *p_24_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_RLAST.bind(*p_24_AXI_01_RLAST);
        p_24_AXI_01_RLAST->set_sv_netview_offsetfromdp(6784040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_01_RRESP.bind(*p_24_AXI_01_RRESP);
        p_24_AXI_01_RRESP->set_sv_netview_offsetfromdp(6784096);
        xsim_sc_channel<0, bool > *p_24_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_RVALID.bind(*p_24_AXI_01_RVALID);
        p_24_AXI_01_RVALID->set_sv_netview_offsetfromdp(6784152);
        xsim_sc_channel<0, bool > *p_24_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_WREADY.bind(*p_24_AXI_01_WREADY);
        p_24_AXI_01_WREADY->set_sv_netview_offsetfromdp(6784208);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_01_BID.bind(*p_24_AXI_01_BID);
        p_24_AXI_01_BID->set_sv_netview_offsetfromdp(6784264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_01_BRESP.bind(*p_24_AXI_01_BRESP);
        p_24_AXI_01_BRESP->set_sv_netview_offsetfromdp(6784320);
        xsim_sc_channel<0, bool > *p_24_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_01_BVALID.bind(*p_24_AXI_01_BVALID);
        p_24_AXI_01_BVALID->set_sv_netview_offsetfromdp(6784376);
        xsim_sc_channel<0, bool > *p_24_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_ARREADY.bind(*p_24_AXI_02_ARREADY);
        p_24_AXI_02_ARREADY->set_sv_netview_offsetfromdp(6784432);
        xsim_sc_channel<0, bool > *p_24_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_AWREADY.bind(*p_24_AXI_02_AWREADY);
        p_24_AXI_02_AWREADY->set_sv_netview_offsetfromdp(6784488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_02_RDATA_PARITY.bind(*p_24_AXI_02_RDATA_PARITY);
        p_24_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(6784544);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_02_RDATA.bind(*p_24_AXI_02_RDATA);
        p_24_AXI_02_RDATA->set_sv_netview_offsetfromdp(6784600);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_02_RID.bind(*p_24_AXI_02_RID);
        p_24_AXI_02_RID->set_sv_netview_offsetfromdp(6784656);
        xsim_sc_channel<0, bool > *p_24_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_RLAST.bind(*p_24_AXI_02_RLAST);
        p_24_AXI_02_RLAST->set_sv_netview_offsetfromdp(6784712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_02_RRESP.bind(*p_24_AXI_02_RRESP);
        p_24_AXI_02_RRESP->set_sv_netview_offsetfromdp(6784768);
        xsim_sc_channel<0, bool > *p_24_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_RVALID.bind(*p_24_AXI_02_RVALID);
        p_24_AXI_02_RVALID->set_sv_netview_offsetfromdp(6784824);
        xsim_sc_channel<0, bool > *p_24_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_WREADY.bind(*p_24_AXI_02_WREADY);
        p_24_AXI_02_WREADY->set_sv_netview_offsetfromdp(6784880);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_02_BID.bind(*p_24_AXI_02_BID);
        p_24_AXI_02_BID->set_sv_netview_offsetfromdp(6784936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_02_BRESP.bind(*p_24_AXI_02_BRESP);
        p_24_AXI_02_BRESP->set_sv_netview_offsetfromdp(6784992);
        xsim_sc_channel<0, bool > *p_24_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_02_BVALID.bind(*p_24_AXI_02_BVALID);
        p_24_AXI_02_BVALID->set_sv_netview_offsetfromdp(6785048);
        xsim_sc_channel<0, bool > *p_24_AXI_03_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_ARREADY.bind(*p_24_AXI_03_ARREADY);
        p_24_AXI_03_ARREADY->set_sv_netview_offsetfromdp(6785104);
        xsim_sc_channel<0, bool > *p_24_AXI_03_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_AWREADY.bind(*p_24_AXI_03_AWREADY);
        p_24_AXI_03_AWREADY->set_sv_netview_offsetfromdp(6785160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_AXI_03_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->AXI_03_RDATA_PARITY.bind(*p_24_AXI_03_RDATA_PARITY);
        p_24_AXI_03_RDATA_PARITY->set_sv_netview_offsetfromdp(6785216);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_AXI_03_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->AXI_03_RDATA.bind(*p_24_AXI_03_RDATA);
        p_24_AXI_03_RDATA->set_sv_netview_offsetfromdp(6785272);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_03_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_03_RID.bind(*p_24_AXI_03_RID);
        p_24_AXI_03_RID->set_sv_netview_offsetfromdp(6785328);
        xsim_sc_channel<0, bool > *p_24_AXI_03_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_RLAST.bind(*p_24_AXI_03_RLAST);
        p_24_AXI_03_RLAST->set_sv_netview_offsetfromdp(6785384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_03_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_03_RRESP.bind(*p_24_AXI_03_RRESP);
        p_24_AXI_03_RRESP->set_sv_netview_offsetfromdp(6785440);
        xsim_sc_channel<0, bool > *p_24_AXI_03_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_RVALID.bind(*p_24_AXI_03_RVALID);
        p_24_AXI_03_RVALID->set_sv_netview_offsetfromdp(6785496);
        xsim_sc_channel<0, bool > *p_24_AXI_03_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_WREADY.bind(*p_24_AXI_03_WREADY);
        p_24_AXI_03_WREADY->set_sv_netview_offsetfromdp(6785552);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_AXI_03_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->AXI_03_BID.bind(*p_24_AXI_03_BID);
        p_24_AXI_03_BID->set_sv_netview_offsetfromdp(6785608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_AXI_03_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->AXI_03_BRESP.bind(*p_24_AXI_03_BRESP);
        p_24_AXI_03_BRESP->set_sv_netview_offsetfromdp(6785664);
        xsim_sc_channel<0, bool > *p_24_AXI_03_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->AXI_03_BVALID.bind(*p_24_AXI_03_BVALID);
        p_24_AXI_03_BVALID->set_sv_netview_offsetfromdp(6785720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->APB_0_PRDATA.bind(*p_24_APB_0_PRDATA);
        p_24_APB_0_PRDATA->set_sv_netview_offsetfromdp(6785776);
        xsim_sc_channel<0, bool > *p_24_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PREADY.bind(*p_24_APB_0_PREADY);
        p_24_APB_0_PREADY->set_sv_netview_offsetfromdp(6785832);
        xsim_sc_channel<0, bool > *p_24_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_24->APB_0_PSLVERR.bind(*p_24_APB_0_PSLVERR);
        p_24_APB_0_PSLVERR->set_sv_netview_offsetfromdp(6785888);
        xsim_sc_channel<0, bool > *p_24_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_24->apb_complete_0.bind(*p_24_apb_complete_0);
        p_24_apb_complete_0->set_sv_netview_offsetfromdp(6785944);
        xsim_sc_channel<0, bool > *p_24_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_24->DRAM_0_STAT_CATTRIP.bind(*p_24_DRAM_0_STAT_CATTRIP);
        p_24_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(6786000);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_24_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_24->DRAM_0_STAT_TEMP.bind(*p_24_DRAM_0_STAT_TEMP);
        p_24_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(6786056);
        sc_inst_25 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_25->xsim_set_dbg_index(2171);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk1.bind(*p_25_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk1);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->S00_AXI_araddr.bind(*p_25_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->S00_AXI_arlen.bind(*p_25_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_arsize.bind(*p_25_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_arburst.bind(*p_25_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->S00_AXI_arlock.bind(*p_25_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_arcache.bind(*p_25_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->S00_AXI_arprot.bind(*p_25_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->S00_AXI_arqos.bind(*p_25_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_arvalid.bind(*p_25_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_arready.bind(*p_25_S00_AXI_arready);
        p_25_S00_AXI_arready->set_sv_netview_offsetfromdp(6960400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->S00_AXI_rdata.bind(*p_25_S00_AXI_rdata);
        p_25_S00_AXI_rdata->set_sv_netview_offsetfromdp(6960456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->S00_AXI_rresp.bind(*p_25_S00_AXI_rresp);
        p_25_S00_AXI_rresp->set_sv_netview_offsetfromdp(6960512);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rlast.bind(*p_25_S00_AXI_rlast);
        p_25_S00_AXI_rlast->set_sv_netview_offsetfromdp(6960568);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rvalid.bind(*p_25_S00_AXI_rvalid);
        p_25_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6960624);
        xsim_sc_channel<0, bool > *p_25_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->S00_AXI_rready.bind(*p_25_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->M00_AXI_araddr.bind(*p_25_M00_AXI_araddr);
        p_25_M00_AXI_araddr->set_sv_netview_offsetfromdp(6960736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arlen.bind(*p_25_M00_AXI_arlen);
        p_25_M00_AXI_arlen->set_sv_netview_offsetfromdp(6960792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_arsize.bind(*p_25_M00_AXI_arsize);
        p_25_M00_AXI_arsize->set_sv_netview_offsetfromdp(6960848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_arburst.bind(*p_25_M00_AXI_arburst);
        p_25_M00_AXI_arburst->set_sv_netview_offsetfromdp(6960904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_arlock.bind(*p_25_M00_AXI_arlock);
        p_25_M00_AXI_arlock->set_sv_netview_offsetfromdp(6960960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arcache.bind(*p_25_M00_AXI_arcache);
        p_25_M00_AXI_arcache->set_sv_netview_offsetfromdp(6961016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->M00_AXI_arprot.bind(*p_25_M00_AXI_arprot);
        p_25_M00_AXI_arprot->set_sv_netview_offsetfromdp(6961072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->M00_AXI_arqos.bind(*p_25_M00_AXI_arqos);
        p_25_M00_AXI_arqos->set_sv_netview_offsetfromdp(6961128);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_arvalid.bind(*p_25_M00_AXI_arvalid);
        p_25_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6961184);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_arready.bind(*p_25_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->M00_AXI_rdata.bind(*p_25_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->M00_AXI_rresp.bind(*p_25_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rlast.bind(*p_25_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rvalid.bind(*p_25_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_25_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->M00_AXI_rready.bind(*p_25_M00_AXI_rready);
        p_25_M00_AXI_rready->set_sv_netview_offsetfromdp(6961520);
        sc_inst_26 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_26->xsim_set_dbg_index(2172);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awsize.bind(*p_26_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(6962240);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(6962520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(6962576);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(6962632);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arsize.bind(*p_26_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(6963248);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(6963304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(6963360);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(6963416);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(6963472);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(6963584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(6963640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awsize.bind(*p_26_m_axi_awsize);
        p_26_m_axi_awsize->set_sv_netview_offsetfromdp(6963696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(6963752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(6963808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(6963864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(6963920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(6963976);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(6964032);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(6964144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(6964200);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(6964256);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(6964312);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(6964536);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(6964592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(6964648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arsize.bind(*p_26_m_axi_arsize);
        p_26_m_axi_arsize->set_sv_netview_offsetfromdp(6964704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(6964760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(6964816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(6964872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(6964928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(6964984);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(6965040);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(6965376);
        sc_inst_27 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_27->xsim_set_dbg_index(2223);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk1.bind(*p_27_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk1);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->S00_AXI_awaddr.bind(*p_27_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->S00_AXI_awlen.bind(*p_27_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_awsize.bind(*p_27_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_awburst.bind(*p_27_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_awlock.bind(*p_27_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_awcache.bind(*p_27_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_awprot.bind(*p_27_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_awqos.bind(*p_27_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_awvalid.bind(*p_27_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_awready.bind(*p_27_S00_AXI_awready);
        p_27_S00_AXI_awready->set_sv_netview_offsetfromdp(7010704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->S00_AXI_wdata.bind(*p_27_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_wstrb.bind(*p_27_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wlast.bind(*p_27_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wvalid.bind(*p_27_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wready.bind(*p_27_S00_AXI_wready);
        p_27_S00_AXI_wready->set_sv_netview_offsetfromdp(7010984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_bresp.bind(*p_27_S00_AXI_bresp);
        p_27_S00_AXI_bresp->set_sv_netview_offsetfromdp(7011040);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_bvalid.bind(*p_27_S00_AXI_bvalid);
        p_27_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7011096);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_bready.bind(*p_27_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->M00_AXI_awaddr.bind(*p_27_M00_AXI_awaddr);
        p_27_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7011208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_awlen.bind(*p_27_M00_AXI_awlen);
        p_27_M00_AXI_awlen->set_sv_netview_offsetfromdp(7011264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_awsize.bind(*p_27_M00_AXI_awsize);
        p_27_M00_AXI_awsize->set_sv_netview_offsetfromdp(7011320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_awburst.bind(*p_27_M00_AXI_awburst);
        p_27_M00_AXI_awburst->set_sv_netview_offsetfromdp(7011376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_awlock.bind(*p_27_M00_AXI_awlock);
        p_27_M00_AXI_awlock->set_sv_netview_offsetfromdp(7011432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_awcache.bind(*p_27_M00_AXI_awcache);
        p_27_M00_AXI_awcache->set_sv_netview_offsetfromdp(7011488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_awprot.bind(*p_27_M00_AXI_awprot);
        p_27_M00_AXI_awprot->set_sv_netview_offsetfromdp(7011544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_awqos.bind(*p_27_M00_AXI_awqos);
        p_27_M00_AXI_awqos->set_sv_netview_offsetfromdp(7011600);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_awvalid.bind(*p_27_M00_AXI_awvalid);
        p_27_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7011656);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_awready.bind(*p_27_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->M00_AXI_wdata.bind(*p_27_M00_AXI_wdata);
        p_27_M00_AXI_wdata->set_sv_netview_offsetfromdp(7011768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->M00_AXI_wstrb.bind(*p_27_M00_AXI_wstrb);
        p_27_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7011824);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wlast.bind(*p_27_M00_AXI_wlast);
        p_27_M00_AXI_wlast->set_sv_netview_offsetfromdp(7011880);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wvalid.bind(*p_27_M00_AXI_wvalid);
        p_27_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7011936);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wready.bind(*p_27_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_bresp.bind(*p_27_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_bvalid.bind(*p_27_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_bready.bind(*p_27_M00_AXI_bready);
        p_27_M00_AXI_bready->set_sv_netview_offsetfromdp(7012160);
        sc_inst_28 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_28->xsim_set_dbg_index(2224);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awlen.bind(*p_28_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awsize.bind(*p_28_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awburst.bind(*p_28_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awlock.bind(*p_28_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awcache.bind(*p_28_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot.bind(*p_28_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awqos.bind(*p_28_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(7012880);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wlast.bind(*p_28_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(7013160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(7013216);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(7013272);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arlen.bind(*p_28_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arsize.bind(*p_28_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arburst.bind(*p_28_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arlock.bind(*p_28_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arcache.bind(*p_28_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot.bind(*p_28_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arqos.bind(*p_28_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(7013888);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(7013944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(7014000);
        xsim_sc_channel<0, bool > *p_28_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rlast.bind(*p_28_s_axi_rlast);
        p_28_s_axi_rlast->set_sv_netview_offsetfromdp(7014056);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(7014112);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->m_axi_awaddr.bind(*p_28_m_axi_awaddr);
        p_28_m_axi_awaddr->set_sv_netview_offsetfromdp(7014224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awlen.bind(*p_28_m_axi_awlen);
        p_28_m_axi_awlen->set_sv_netview_offsetfromdp(7014280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awsize.bind(*p_28_m_axi_awsize);
        p_28_m_axi_awsize->set_sv_netview_offsetfromdp(7014336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awburst.bind(*p_28_m_axi_awburst);
        p_28_m_axi_awburst->set_sv_netview_offsetfromdp(7014392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awlock.bind(*p_28_m_axi_awlock);
        p_28_m_axi_awlock->set_sv_netview_offsetfromdp(7014448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awcache.bind(*p_28_m_axi_awcache);
        p_28_m_axi_awcache->set_sv_netview_offsetfromdp(7014504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awprot.bind(*p_28_m_axi_awprot);
        p_28_m_axi_awprot->set_sv_netview_offsetfromdp(7014560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awqos.bind(*p_28_m_axi_awqos);
        p_28_m_axi_awqos->set_sv_netview_offsetfromdp(7014616);
        xsim_sc_channel<0, bool > *p_28_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awvalid.bind(*p_28_m_axi_awvalid);
        p_28_m_axi_awvalid->set_sv_netview_offsetfromdp(7014672);
        xsim_sc_channel<0, bool > *p_28_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awready.bind(*p_28_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->m_axi_wdata.bind(*p_28_m_axi_wdata);
        p_28_m_axi_wdata->set_sv_netview_offsetfromdp(7014784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->m_axi_wstrb.bind(*p_28_m_axi_wstrb);
        p_28_m_axi_wstrb->set_sv_netview_offsetfromdp(7014840);
        xsim_sc_channel<0, bool > *p_28_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wlast.bind(*p_28_m_axi_wlast);
        p_28_m_axi_wlast->set_sv_netview_offsetfromdp(7014896);
        xsim_sc_channel<0, bool > *p_28_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wvalid.bind(*p_28_m_axi_wvalid);
        p_28_m_axi_wvalid->set_sv_netview_offsetfromdp(7014952);
        xsim_sc_channel<0, bool > *p_28_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wready.bind(*p_28_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_bresp.bind(*p_28_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bvalid.bind(*p_28_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bready.bind(*p_28_m_axi_bready);
        p_28_m_axi_bready->set_sv_netview_offsetfromdp(7015176);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->m_axi_araddr.bind(*p_28_m_axi_araddr);
        p_28_m_axi_araddr->set_sv_netview_offsetfromdp(7015232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arlen.bind(*p_28_m_axi_arlen);
        p_28_m_axi_arlen->set_sv_netview_offsetfromdp(7015288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arsize.bind(*p_28_m_axi_arsize);
        p_28_m_axi_arsize->set_sv_netview_offsetfromdp(7015344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arburst.bind(*p_28_m_axi_arburst);
        p_28_m_axi_arburst->set_sv_netview_offsetfromdp(7015400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arlock.bind(*p_28_m_axi_arlock);
        p_28_m_axi_arlock->set_sv_netview_offsetfromdp(7015456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arcache.bind(*p_28_m_axi_arcache);
        p_28_m_axi_arcache->set_sv_netview_offsetfromdp(7015512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arprot.bind(*p_28_m_axi_arprot);
        p_28_m_axi_arprot->set_sv_netview_offsetfromdp(7015568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arqos.bind(*p_28_m_axi_arqos);
        p_28_m_axi_arqos->set_sv_netview_offsetfromdp(7015624);
        xsim_sc_channel<0, bool > *p_28_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arvalid.bind(*p_28_m_axi_arvalid);
        p_28_m_axi_arvalid->set_sv_netview_offsetfromdp(7015680);
        xsim_sc_channel<0, bool > *p_28_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arready.bind(*p_28_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->m_axi_rdata.bind(*p_28_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_rresp.bind(*p_28_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rlast.bind(*p_28_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_28_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rvalid.bind(*p_28_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rready.bind(*p_28_m_axi_rready);
        p_28_m_axi_rready->set_sv_netview_offsetfromdp(7016016);
        sc_inst_29 = new bd_5dca_interconnect3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect3_2");
        sc_inst_29->xsim_set_dbg_index(2278);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk1.bind(*p_29_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->S00_AXI_awaddr.bind(*p_29_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->S00_AXI_awlen.bind(*p_29_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_awsize.bind(*p_29_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_awburst.bind(*p_29_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_awlock.bind(*p_29_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_awcache.bind(*p_29_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_awprot.bind(*p_29_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_awqos.bind(*p_29_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_awvalid.bind(*p_29_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_awready.bind(*p_29_S00_AXI_awready);
        p_29_S00_AXI_awready->set_sv_netview_offsetfromdp(7077552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_29_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_29->S00_AXI_wdata.bind(*p_29_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->S00_AXI_wstrb.bind(*p_29_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wlast.bind(*p_29_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wvalid.bind(*p_29_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wready.bind(*p_29_S00_AXI_wready);
        p_29_S00_AXI_wready->set_sv_netview_offsetfromdp(7077832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_bresp.bind(*p_29_S00_AXI_bresp);
        p_29_S00_AXI_bresp->set_sv_netview_offsetfromdp(7077888);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_bvalid.bind(*p_29_S00_AXI_bvalid);
        p_29_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7077944);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_bready.bind(*p_29_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->S00_AXI_araddr.bind(*p_29_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->S00_AXI_arlen.bind(*p_29_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_arsize.bind(*p_29_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_arburst.bind(*p_29_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_arlock.bind(*p_29_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_arcache.bind(*p_29_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_arprot.bind(*p_29_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_arqos.bind(*p_29_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_arvalid.bind(*p_29_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_arready.bind(*p_29_S00_AXI_arready);
        p_29_S00_AXI_arready->set_sv_netview_offsetfromdp(7078560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_29_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_29->S00_AXI_rdata.bind(*p_29_S00_AXI_rdata);
        p_29_S00_AXI_rdata->set_sv_netview_offsetfromdp(7078616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_rresp.bind(*p_29_S00_AXI_rresp);
        p_29_S00_AXI_rresp->set_sv_netview_offsetfromdp(7078672);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rlast.bind(*p_29_S00_AXI_rlast);
        p_29_S00_AXI_rlast->set_sv_netview_offsetfromdp(7078728);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rvalid.bind(*p_29_S00_AXI_rvalid);
        p_29_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7078784);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rready.bind(*p_29_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->M00_AXI_awaddr.bind(*p_29_M00_AXI_awaddr);
        p_29_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7078896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_awlen.bind(*p_29_M00_AXI_awlen);
        p_29_M00_AXI_awlen->set_sv_netview_offsetfromdp(7078952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_awsize.bind(*p_29_M00_AXI_awsize);
        p_29_M00_AXI_awsize->set_sv_netview_offsetfromdp(7079008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_awburst.bind(*p_29_M00_AXI_awburst);
        p_29_M00_AXI_awburst->set_sv_netview_offsetfromdp(7079064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_awlock.bind(*p_29_M00_AXI_awlock);
        p_29_M00_AXI_awlock->set_sv_netview_offsetfromdp(7079120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_awcache.bind(*p_29_M00_AXI_awcache);
        p_29_M00_AXI_awcache->set_sv_netview_offsetfromdp(7079176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_awprot.bind(*p_29_M00_AXI_awprot);
        p_29_M00_AXI_awprot->set_sv_netview_offsetfromdp(7079232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_awqos.bind(*p_29_M00_AXI_awqos);
        p_29_M00_AXI_awqos->set_sv_netview_offsetfromdp(7079288);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_awvalid.bind(*p_29_M00_AXI_awvalid);
        p_29_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7079344);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_awready.bind(*p_29_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->M00_AXI_wdata.bind(*p_29_M00_AXI_wdata);
        p_29_M00_AXI_wdata->set_sv_netview_offsetfromdp(7079456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->M00_AXI_wstrb.bind(*p_29_M00_AXI_wstrb);
        p_29_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7079512);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wlast.bind(*p_29_M00_AXI_wlast);
        p_29_M00_AXI_wlast->set_sv_netview_offsetfromdp(7079568);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wvalid.bind(*p_29_M00_AXI_wvalid);
        p_29_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7079624);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wready.bind(*p_29_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_bresp.bind(*p_29_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_bvalid.bind(*p_29_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_bready.bind(*p_29_M00_AXI_bready);
        p_29_M00_AXI_bready->set_sv_netview_offsetfromdp(7079848);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->M00_AXI_araddr.bind(*p_29_M00_AXI_araddr);
        p_29_M00_AXI_araddr->set_sv_netview_offsetfromdp(7079904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_arlen.bind(*p_29_M00_AXI_arlen);
        p_29_M00_AXI_arlen->set_sv_netview_offsetfromdp(7079960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_arsize.bind(*p_29_M00_AXI_arsize);
        p_29_M00_AXI_arsize->set_sv_netview_offsetfromdp(7080016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_arburst.bind(*p_29_M00_AXI_arburst);
        p_29_M00_AXI_arburst->set_sv_netview_offsetfromdp(7080072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_arlock.bind(*p_29_M00_AXI_arlock);
        p_29_M00_AXI_arlock->set_sv_netview_offsetfromdp(7080128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_arcache.bind(*p_29_M00_AXI_arcache);
        p_29_M00_AXI_arcache->set_sv_netview_offsetfromdp(7080184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_arprot.bind(*p_29_M00_AXI_arprot);
        p_29_M00_AXI_arprot->set_sv_netview_offsetfromdp(7080240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_arqos.bind(*p_29_M00_AXI_arqos);
        p_29_M00_AXI_arqos->set_sv_netview_offsetfromdp(7080296);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_arvalid.bind(*p_29_M00_AXI_arvalid);
        p_29_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7080352);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_arready.bind(*p_29_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->M00_AXI_rdata.bind(*p_29_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_rresp.bind(*p_29_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rlast.bind(*p_29_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rvalid.bind(*p_29_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rready.bind(*p_29_M00_AXI_rready);
        p_29_M00_AXI_rready->set_sv_netview_offsetfromdp(7080688);
        sc_inst_30 = new bd_5dca_slice3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice3_2");
        sc_inst_30->xsim_set_dbg_index(2279);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awsize.bind(*p_30_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(7081408);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(7081688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(7081744);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(7081800);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arsize.bind(*p_30_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(7082416);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(7082472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(7082528);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(7082584);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(7082640);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(7082752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(7082808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awsize.bind(*p_30_m_axi_awsize);
        p_30_m_axi_awsize->set_sv_netview_offsetfromdp(7082864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(7082920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(7082976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(7083032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(7083088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(7083144);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(7083200);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(7083312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(7083368);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(7083424);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(7083480);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(7083704);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(7083760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(7083816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arsize.bind(*p_30_m_axi_arsize);
        p_30_m_axi_arsize->set_sv_netview_offsetfromdp(7083872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(7083928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(7083984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(7084040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(7084096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(7084152);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(7084208);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(7084544);
        sc_inst_31 = new bd_5dca_interconnect0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.interconnect0_3");
        sc_inst_31->xsim_set_dbg_index(2347);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk1.bind(*p_31_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk1);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(7146712);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(7146992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(7147048);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7147104);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(7147720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(7147776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(7147832);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(7147888);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7147944);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7148056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(7148112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(7148168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(7148224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(7148280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(7148336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(7148392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(7148448);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7148504);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(7148616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7148672);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(7148728);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7148784);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(7149008);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(7149064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(7149120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(7149176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(7149232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(7149288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(7149344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(7149400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(7149456);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7149512);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(7149848);
        sc_inst_32 = new bd_5dca_slice0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.slice0_3");
        sc_inst_32->xsim_set_dbg_index(2348);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awsize.bind(*p_32_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(7150568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(7150848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(7150904);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(7150960);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arsize.bind(*p_32_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(7151576);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(7151632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(7151688);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(7151744);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(7151800);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(7151912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(7151968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awsize.bind(*p_32_m_axi_awsize);
        p_32_m_axi_awsize->set_sv_netview_offsetfromdp(7152024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(7152080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(7152136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(7152192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(7152248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(7152304);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(7152360);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(7152472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(7152528);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(7152584);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(7152640);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(7152864);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(7152920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(7152976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arsize.bind(*p_32_m_axi_arsize);
        p_32_m_axi_arsize->set_sv_netview_offsetfromdp(7153032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(7153088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(7153144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(7153200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(7153256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(7153312);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(7153368);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(7153704);
        sc_inst_33 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_33->xsim_set_dbg_index(889);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awlen.bind(*p_33_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awburst.bind(*p_33_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awlock.bind(*p_33_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awcache.bind(*p_33_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awqos.bind(*p_33_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(7154368);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wlast.bind(*p_33_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(7154648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(7154704);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(7154760);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arlen.bind(*p_33_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arburst.bind(*p_33_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arlock.bind(*p_33_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arcache.bind(*p_33_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arqos.bind(*p_33_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(7155320);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(7155376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(7155432);
        xsim_sc_channel<0, bool > *p_33_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rlast.bind(*p_33_s_axi_rlast);
        p_33_s_axi_rlast->set_sv_netview_offsetfromdp(7155488);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(7155544);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(7155656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awlen.bind(*p_33_m_axi_awlen);
        p_33_m_axi_awlen->set_sv_netview_offsetfromdp(7155712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awburst.bind(*p_33_m_axi_awburst);
        p_33_m_axi_awburst->set_sv_netview_offsetfromdp(7155768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awlock.bind(*p_33_m_axi_awlock);
        p_33_m_axi_awlock->set_sv_netview_offsetfromdp(7155824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awcache.bind(*p_33_m_axi_awcache);
        p_33_m_axi_awcache->set_sv_netview_offsetfromdp(7155880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(7155936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awqos.bind(*p_33_m_axi_awqos);
        p_33_m_axi_awqos->set_sv_netview_offsetfromdp(7155992);
        xsim_sc_channel<0, bool > *p_33_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(7156048);
        xsim_sc_channel<0, bool > *p_33_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(7156160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(7156216);
        xsim_sc_channel<0, bool > *p_33_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wlast.bind(*p_33_m_axi_wlast);
        p_33_m_axi_wlast->set_sv_netview_offsetfromdp(7156272);
        xsim_sc_channel<0, bool > *p_33_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(7156328);
        xsim_sc_channel<0, bool > *p_33_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(7156552);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(7156608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arlen.bind(*p_33_m_axi_arlen);
        p_33_m_axi_arlen->set_sv_netview_offsetfromdp(7156664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arburst.bind(*p_33_m_axi_arburst);
        p_33_m_axi_arburst->set_sv_netview_offsetfromdp(7156720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arlock.bind(*p_33_m_axi_arlock);
        p_33_m_axi_arlock->set_sv_netview_offsetfromdp(7156776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arcache.bind(*p_33_m_axi_arcache);
        p_33_m_axi_arcache->set_sv_netview_offsetfromdp(7156832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(7156888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arqos.bind(*p_33_m_axi_arqos);
        p_33_m_axi_arqos->set_sv_netview_offsetfromdp(7156944);
        xsim_sc_channel<0, bool > *p_33_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(7157000);
        xsim_sc_channel<0, bool > *p_33_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rlast.bind(*p_33_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_33_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(7157336);
        sc_inst_34 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_34->xsim_set_dbg_index(890);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_34_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_34->s_axi_awaddr.bind(*p_34_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awlen.bind(*p_34_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_awburst.bind(*p_34_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_awlock.bind(*p_34_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awcache.bind(*p_34_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awprot.bind(*p_34_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_awqos.bind(*p_34_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awvalid.bind(*p_34_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awready.bind(*p_34_s_axi_awready);
        p_34_s_axi_awready->set_sv_netview_offsetfromdp(7158000);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->s_axi_wdata.bind(*p_34_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_wstrb.bind(*p_34_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wlast.bind(*p_34_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_34_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wvalid.bind(*p_34_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wready.bind(*p_34_s_axi_wready);
        p_34_s_axi_wready->set_sv_netview_offsetfromdp(7158280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_bresp.bind(*p_34_s_axi_bresp);
        p_34_s_axi_bresp->set_sv_netview_offsetfromdp(7158336);
        xsim_sc_channel<0, bool > *p_34_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bvalid.bind(*p_34_s_axi_bvalid);
        p_34_s_axi_bvalid->set_sv_netview_offsetfromdp(7158392);
        xsim_sc_channel<0, bool > *p_34_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bready.bind(*p_34_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_34_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_34->s_axi_araddr.bind(*p_34_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arlen.bind(*p_34_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_arburst.bind(*p_34_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_arlock.bind(*p_34_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arcache.bind(*p_34_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arprot.bind(*p_34_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_arqos.bind(*p_34_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_34_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arvalid.bind(*p_34_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arready.bind(*p_34_s_axi_arready);
        p_34_s_axi_arready->set_sv_netview_offsetfromdp(7158952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->s_axi_rdata.bind(*p_34_s_axi_rdata);
        p_34_s_axi_rdata->set_sv_netview_offsetfromdp(7159008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_rresp.bind(*p_34_s_axi_rresp);
        p_34_s_axi_rresp->set_sv_netview_offsetfromdp(7159064);
        xsim_sc_channel<0, bool > *p_34_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rlast.bind(*p_34_s_axi_rlast);
        p_34_s_axi_rlast->set_sv_netview_offsetfromdp(7159120);
        xsim_sc_channel<0, bool > *p_34_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rvalid.bind(*p_34_s_axi_rvalid);
        p_34_s_axi_rvalid->set_sv_netview_offsetfromdp(7159176);
        xsim_sc_channel<0, bool > *p_34_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rready.bind(*p_34_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_34_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_34->m_axi_awaddr.bind(*p_34_m_axi_awaddr);
        p_34_m_axi_awaddr->set_sv_netview_offsetfromdp(7159288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_awlen.bind(*p_34_m_axi_awlen);
        p_34_m_axi_awlen->set_sv_netview_offsetfromdp(7159344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_awburst.bind(*p_34_m_axi_awburst);
        p_34_m_axi_awburst->set_sv_netview_offsetfromdp(7159400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_awlock.bind(*p_34_m_axi_awlock);
        p_34_m_axi_awlock->set_sv_netview_offsetfromdp(7159456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_awcache.bind(*p_34_m_axi_awcache);
        p_34_m_axi_awcache->set_sv_netview_offsetfromdp(7159512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_awprot.bind(*p_34_m_axi_awprot);
        p_34_m_axi_awprot->set_sv_netview_offsetfromdp(7159568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_awqos.bind(*p_34_m_axi_awqos);
        p_34_m_axi_awqos->set_sv_netview_offsetfromdp(7159624);
        xsim_sc_channel<0, bool > *p_34_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_awvalid.bind(*p_34_m_axi_awvalid);
        p_34_m_axi_awvalid->set_sv_netview_offsetfromdp(7159680);
        xsim_sc_channel<0, bool > *p_34_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_awready.bind(*p_34_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->m_axi_wdata.bind(*p_34_m_axi_wdata);
        p_34_m_axi_wdata->set_sv_netview_offsetfromdp(7159792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axi_wstrb.bind(*p_34_m_axi_wstrb);
        p_34_m_axi_wstrb->set_sv_netview_offsetfromdp(7159848);
        xsim_sc_channel<0, bool > *p_34_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_wlast.bind(*p_34_m_axi_wlast);
        p_34_m_axi_wlast->set_sv_netview_offsetfromdp(7159904);
        xsim_sc_channel<0, bool > *p_34_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_wvalid.bind(*p_34_m_axi_wvalid);
        p_34_m_axi_wvalid->set_sv_netview_offsetfromdp(7159960);
        xsim_sc_channel<0, bool > *p_34_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_wready.bind(*p_34_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_bresp.bind(*p_34_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_34_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_bvalid.bind(*p_34_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_34_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_bready.bind(*p_34_m_axi_bready);
        p_34_m_axi_bready->set_sv_netview_offsetfromdp(7160184);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_34_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_34->m_axi_araddr.bind(*p_34_m_axi_araddr);
        p_34_m_axi_araddr->set_sv_netview_offsetfromdp(7160240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_arlen.bind(*p_34_m_axi_arlen);
        p_34_m_axi_arlen->set_sv_netview_offsetfromdp(7160296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_arburst.bind(*p_34_m_axi_arburst);
        p_34_m_axi_arburst->set_sv_netview_offsetfromdp(7160352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_arlock.bind(*p_34_m_axi_arlock);
        p_34_m_axi_arlock->set_sv_netview_offsetfromdp(7160408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_arcache.bind(*p_34_m_axi_arcache);
        p_34_m_axi_arcache->set_sv_netview_offsetfromdp(7160464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_arprot.bind(*p_34_m_axi_arprot);
        p_34_m_axi_arprot->set_sv_netview_offsetfromdp(7160520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_arqos.bind(*p_34_m_axi_arqos);
        p_34_m_axi_arqos->set_sv_netview_offsetfromdp(7160576);
        xsim_sc_channel<0, bool > *p_34_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_arvalid.bind(*p_34_m_axi_arvalid);
        p_34_m_axi_arvalid->set_sv_netview_offsetfromdp(7160632);
        xsim_sc_channel<0, bool > *p_34_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_arready.bind(*p_34_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->m_axi_rdata.bind(*p_34_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_rresp.bind(*p_34_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_34_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_rlast.bind(*p_34_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_34_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_rvalid.bind(*p_34_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_34_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_rready.bind(*p_34_m_axi_rready);
        p_34_m_axi_rready->set_sv_netview_offsetfromdp(7160968);
        sc_inst_35 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_35->xsim_set_dbg_index(891);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_35_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_35->s_axi_awaddr.bind(*p_35_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awlen.bind(*p_35_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_awburst.bind(*p_35_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_awlock.bind(*p_35_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awcache.bind(*p_35_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_awprot.bind(*p_35_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awqos.bind(*p_35_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_35_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_awvalid.bind(*p_35_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_awready.bind(*p_35_s_axi_awready);
        p_35_s_axi_awready->set_sv_netview_offsetfromdp(7161632);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_35_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_35->s_axi_wdata.bind(*p_35_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_wstrb.bind(*p_35_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_35_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wlast.bind(*p_35_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_35_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wvalid.bind(*p_35_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wready.bind(*p_35_s_axi_wready);
        p_35_s_axi_wready->set_sv_netview_offsetfromdp(7161912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_bresp.bind(*p_35_s_axi_bresp);
        p_35_s_axi_bresp->set_sv_netview_offsetfromdp(7161968);
        xsim_sc_channel<0, bool > *p_35_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_bvalid.bind(*p_35_s_axi_bvalid);
        p_35_s_axi_bvalid->set_sv_netview_offsetfromdp(7162024);
        xsim_sc_channel<0, bool > *p_35_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_bready.bind(*p_35_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_35_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_35->s_axi_araddr.bind(*p_35_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arlen.bind(*p_35_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_arburst.bind(*p_35_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_arlock.bind(*p_35_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arcache.bind(*p_35_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_arprot.bind(*p_35_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arqos.bind(*p_35_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_35_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_arvalid.bind(*p_35_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_arready.bind(*p_35_s_axi_arready);
        p_35_s_axi_arready->set_sv_netview_offsetfromdp(7162584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_35_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_35->s_axi_rdata.bind(*p_35_s_axi_rdata);
        p_35_s_axi_rdata->set_sv_netview_offsetfromdp(7162640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_rresp.bind(*p_35_s_axi_rresp);
        p_35_s_axi_rresp->set_sv_netview_offsetfromdp(7162696);
        xsim_sc_channel<0, bool > *p_35_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rlast.bind(*p_35_s_axi_rlast);
        p_35_s_axi_rlast->set_sv_netview_offsetfromdp(7162752);
        xsim_sc_channel<0, bool > *p_35_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rvalid.bind(*p_35_s_axi_rvalid);
        p_35_s_axi_rvalid->set_sv_netview_offsetfromdp(7162808);
        xsim_sc_channel<0, bool > *p_35_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rready.bind(*p_35_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_35_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_35->m_axi_awaddr.bind(*p_35_m_axi_awaddr);
        p_35_m_axi_awaddr->set_sv_netview_offsetfromdp(7162920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_awlen.bind(*p_35_m_axi_awlen);
        p_35_m_axi_awlen->set_sv_netview_offsetfromdp(7162976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_awburst.bind(*p_35_m_axi_awburst);
        p_35_m_axi_awburst->set_sv_netview_offsetfromdp(7163032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_awlock.bind(*p_35_m_axi_awlock);
        p_35_m_axi_awlock->set_sv_netview_offsetfromdp(7163088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_awcache.bind(*p_35_m_axi_awcache);
        p_35_m_axi_awcache->set_sv_netview_offsetfromdp(7163144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_axi_awprot.bind(*p_35_m_axi_awprot);
        p_35_m_axi_awprot->set_sv_netview_offsetfromdp(7163200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_awqos.bind(*p_35_m_axi_awqos);
        p_35_m_axi_awqos->set_sv_netview_offsetfromdp(7163256);
        xsim_sc_channel<0, bool > *p_35_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_awvalid.bind(*p_35_m_axi_awvalid);
        p_35_m_axi_awvalid->set_sv_netview_offsetfromdp(7163312);
        xsim_sc_channel<0, bool > *p_35_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_awready.bind(*p_35_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_35_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_35->m_axi_wdata.bind(*p_35_m_axi_wdata);
        p_35_m_axi_wdata->set_sv_netview_offsetfromdp(7163424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->m_axi_wstrb.bind(*p_35_m_axi_wstrb);
        p_35_m_axi_wstrb->set_sv_netview_offsetfromdp(7163480);
        xsim_sc_channel<0, bool > *p_35_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_wlast.bind(*p_35_m_axi_wlast);
        p_35_m_axi_wlast->set_sv_netview_offsetfromdp(7163536);
        xsim_sc_channel<0, bool > *p_35_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_wvalid.bind(*p_35_m_axi_wvalid);
        p_35_m_axi_wvalid->set_sv_netview_offsetfromdp(7163592);
        xsim_sc_channel<0, bool > *p_35_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_wready.bind(*p_35_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_bresp.bind(*p_35_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_35_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_bvalid.bind(*p_35_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_35_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_bready.bind(*p_35_m_axi_bready);
        p_35_m_axi_bready->set_sv_netview_offsetfromdp(7163816);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_35_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_35->m_axi_araddr.bind(*p_35_m_axi_araddr);
        p_35_m_axi_araddr->set_sv_netview_offsetfromdp(7163872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_arlen.bind(*p_35_m_axi_arlen);
        p_35_m_axi_arlen->set_sv_netview_offsetfromdp(7163928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_arburst.bind(*p_35_m_axi_arburst);
        p_35_m_axi_arburst->set_sv_netview_offsetfromdp(7163984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_arlock.bind(*p_35_m_axi_arlock);
        p_35_m_axi_arlock->set_sv_netview_offsetfromdp(7164040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_arcache.bind(*p_35_m_axi_arcache);
        p_35_m_axi_arcache->set_sv_netview_offsetfromdp(7164096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_axi_arprot.bind(*p_35_m_axi_arprot);
        p_35_m_axi_arprot->set_sv_netview_offsetfromdp(7164152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_axi_arqos.bind(*p_35_m_axi_arqos);
        p_35_m_axi_arqos->set_sv_netview_offsetfromdp(7164208);
        xsim_sc_channel<0, bool > *p_35_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_arvalid.bind(*p_35_m_axi_arvalid);
        p_35_m_axi_arvalid->set_sv_netview_offsetfromdp(7164264);
        xsim_sc_channel<0, bool > *p_35_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_arready.bind(*p_35_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_35_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_35->m_axi_rdata.bind(*p_35_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_axi_rresp.bind(*p_35_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_35_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_rlast.bind(*p_35_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_35_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_rvalid.bind(*p_35_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_35_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_axi_rready.bind(*p_35_m_axi_rready);
        p_35_m_axi_rready->set_sv_netview_offsetfromdp(7164600);
        sc_inst_36 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_36->xsim_set_dbg_index(892);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->s_axi_awaddr.bind(*p_36_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awlen.bind(*p_36_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_awburst.bind(*p_36_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_awlock.bind(*p_36_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awcache.bind(*p_36_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_awprot.bind(*p_36_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awqos.bind(*p_36_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_36_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_awvalid.bind(*p_36_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_awready.bind(*p_36_s_axi_awready);
        p_36_s_axi_awready->set_sv_netview_offsetfromdp(7165264);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->s_axi_wdata.bind(*p_36_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->s_axi_wstrb.bind(*p_36_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_36_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wlast.bind(*p_36_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_36_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wvalid.bind(*p_36_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wready.bind(*p_36_s_axi_wready);
        p_36_s_axi_wready->set_sv_netview_offsetfromdp(7165544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_bresp.bind(*p_36_s_axi_bresp);
        p_36_s_axi_bresp->set_sv_netview_offsetfromdp(7165600);
        xsim_sc_channel<0, bool > *p_36_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_bvalid.bind(*p_36_s_axi_bvalid);
        p_36_s_axi_bvalid->set_sv_netview_offsetfromdp(7165656);
        xsim_sc_channel<0, bool > *p_36_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_bready.bind(*p_36_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->s_axi_araddr.bind(*p_36_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arlen.bind(*p_36_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_arburst.bind(*p_36_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_arlock.bind(*p_36_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arcache.bind(*p_36_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_arprot.bind(*p_36_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arqos.bind(*p_36_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_36_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_arvalid.bind(*p_36_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_arready.bind(*p_36_s_axi_arready);
        p_36_s_axi_arready->set_sv_netview_offsetfromdp(7166216);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->s_axi_rdata.bind(*p_36_s_axi_rdata);
        p_36_s_axi_rdata->set_sv_netview_offsetfromdp(7166272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_rresp.bind(*p_36_s_axi_rresp);
        p_36_s_axi_rresp->set_sv_netview_offsetfromdp(7166328);
        xsim_sc_channel<0, bool > *p_36_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rlast.bind(*p_36_s_axi_rlast);
        p_36_s_axi_rlast->set_sv_netview_offsetfromdp(7166384);
        xsim_sc_channel<0, bool > *p_36_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rvalid.bind(*p_36_s_axi_rvalid);
        p_36_s_axi_rvalid->set_sv_netview_offsetfromdp(7166440);
        xsim_sc_channel<0, bool > *p_36_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rready.bind(*p_36_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->m_axi_awaddr.bind(*p_36_m_axi_awaddr);
        p_36_m_axi_awaddr->set_sv_netview_offsetfromdp(7166552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awlen.bind(*p_36_m_axi_awlen);
        p_36_m_axi_awlen->set_sv_netview_offsetfromdp(7166608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_awburst.bind(*p_36_m_axi_awburst);
        p_36_m_axi_awburst->set_sv_netview_offsetfromdp(7166664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_awlock.bind(*p_36_m_axi_awlock);
        p_36_m_axi_awlock->set_sv_netview_offsetfromdp(7166720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awcache.bind(*p_36_m_axi_awcache);
        p_36_m_axi_awcache->set_sv_netview_offsetfromdp(7166776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_awprot.bind(*p_36_m_axi_awprot);
        p_36_m_axi_awprot->set_sv_netview_offsetfromdp(7166832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awqos.bind(*p_36_m_axi_awqos);
        p_36_m_axi_awqos->set_sv_netview_offsetfromdp(7166888);
        xsim_sc_channel<0, bool > *p_36_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_awvalid.bind(*p_36_m_axi_awvalid);
        p_36_m_axi_awvalid->set_sv_netview_offsetfromdp(7166944);
        xsim_sc_channel<0, bool > *p_36_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_awready.bind(*p_36_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->m_axi_wdata.bind(*p_36_m_axi_wdata);
        p_36_m_axi_wdata->set_sv_netview_offsetfromdp(7167056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->m_axi_wstrb.bind(*p_36_m_axi_wstrb);
        p_36_m_axi_wstrb->set_sv_netview_offsetfromdp(7167112);
        xsim_sc_channel<0, bool > *p_36_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wlast.bind(*p_36_m_axi_wlast);
        p_36_m_axi_wlast->set_sv_netview_offsetfromdp(7167168);
        xsim_sc_channel<0, bool > *p_36_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wvalid.bind(*p_36_m_axi_wvalid);
        p_36_m_axi_wvalid->set_sv_netview_offsetfromdp(7167224);
        xsim_sc_channel<0, bool > *p_36_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wready.bind(*p_36_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_bresp.bind(*p_36_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_36_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_bvalid.bind(*p_36_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_36_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_bready.bind(*p_36_m_axi_bready);
        p_36_m_axi_bready->set_sv_netview_offsetfromdp(7167448);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->m_axi_araddr.bind(*p_36_m_axi_araddr);
        p_36_m_axi_araddr->set_sv_netview_offsetfromdp(7167504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arlen.bind(*p_36_m_axi_arlen);
        p_36_m_axi_arlen->set_sv_netview_offsetfromdp(7167560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_arburst.bind(*p_36_m_axi_arburst);
        p_36_m_axi_arburst->set_sv_netview_offsetfromdp(7167616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_arlock.bind(*p_36_m_axi_arlock);
        p_36_m_axi_arlock->set_sv_netview_offsetfromdp(7167672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arcache.bind(*p_36_m_axi_arcache);
        p_36_m_axi_arcache->set_sv_netview_offsetfromdp(7167728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_arprot.bind(*p_36_m_axi_arprot);
        p_36_m_axi_arprot->set_sv_netview_offsetfromdp(7167784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arqos.bind(*p_36_m_axi_arqos);
        p_36_m_axi_arqos->set_sv_netview_offsetfromdp(7167840);
        xsim_sc_channel<0, bool > *p_36_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_arvalid.bind(*p_36_m_axi_arvalid);
        p_36_m_axi_arvalid->set_sv_netview_offsetfromdp(7167896);
        xsim_sc_channel<0, bool > *p_36_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_arready.bind(*p_36_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->m_axi_rdata.bind(*p_36_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_rresp.bind(*p_36_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_36_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rlast.bind(*p_36_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_36_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rvalid.bind(*p_36_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_36_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rready.bind(*p_36_m_axi_rready);
        p_36_m_axi_rready->set_sv_netview_offsetfromdp(7168232);
        sc_inst_37 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_37->xsim_set_dbg_index(45);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->dout.bind(*p_37_dout);
        p_37_dout->set_sv_netview_offsetfromdp(7337672);
        sc_inst_38 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_38->xsim_set_dbg_index(1349);
        sc_inst_39 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_39->xsim_set_dbg_index(2485);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_awuser.bind(*p_39_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(7989320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_wuser.bind(*p_39_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(7989656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(7989712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(7989768);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_buser.bind(*p_39_S00_AXI_buser);
        p_39_S00_AXI_buser->set_sv_netview_offsetfromdp(7989824);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7989880);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arid.bind(*p_39_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_aruser.bind(*p_39_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(7990608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_rid.bind(*p_39_S00_AXI_rid);
        p_39_S00_AXI_rid->set_sv_netview_offsetfromdp(7990664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(7990720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(7990776);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(7990832);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_ruser.bind(*p_39_S00_AXI_ruser);
        p_39_S00_AXI_ruser->set_sv_netview_offsetfromdp(7990888);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7990944);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7991056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(7991112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(7991168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(7991224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(7991280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(7991336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(7991392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(7991448);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7991504);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(7991616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7991672);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(7991728);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7991784);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(7992008);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(7992064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(7992120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(7992176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(7992232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(7992288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(7992344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(7992400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(7992456);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7992512);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(7992848);
        sc_inst_40 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_40->xsim_set_dbg_index(2486);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awid.bind(*p_40_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_awaddr.bind(*p_40_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_awlen.bind(*p_40_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awsize.bind(*p_40_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_awburst.bind(*p_40_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awlock.bind(*p_40_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awcache.bind(*p_40_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awprot.bind(*p_40_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awqos.bind(*p_40_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_awuser.bind(*p_40_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awvalid.bind(*p_40_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awready.bind(*p_40_S00_AXI_awready);
        p_40_S00_AXI_awready->set_sv_netview_offsetfromdp(7993680);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_wdata.bind(*p_40_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->S00_AXI_wstrb.bind(*p_40_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wlast.bind(*p_40_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_wuser.bind(*p_40_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wvalid.bind(*p_40_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wready.bind(*p_40_S00_AXI_wready);
        p_40_S00_AXI_wready->set_sv_netview_offsetfromdp(7994016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_bid.bind(*p_40_S00_AXI_bid);
        p_40_S00_AXI_bid->set_sv_netview_offsetfromdp(7994072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_bresp.bind(*p_40_S00_AXI_bresp);
        p_40_S00_AXI_bresp->set_sv_netview_offsetfromdp(7994128);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_buser.bind(*p_40_S00_AXI_buser);
        p_40_S00_AXI_buser->set_sv_netview_offsetfromdp(7994184);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bvalid.bind(*p_40_S00_AXI_bvalid);
        p_40_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7994240);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bready.bind(*p_40_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arid.bind(*p_40_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_araddr.bind(*p_40_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_arlen.bind(*p_40_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arsize.bind(*p_40_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_arburst.bind(*p_40_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arlock.bind(*p_40_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arcache.bind(*p_40_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arprot.bind(*p_40_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arqos.bind(*p_40_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_aruser.bind(*p_40_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arvalid.bind(*p_40_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arready.bind(*p_40_S00_AXI_arready);
        p_40_S00_AXI_arready->set_sv_netview_offsetfromdp(7994968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_rid.bind(*p_40_S00_AXI_rid);
        p_40_S00_AXI_rid->set_sv_netview_offsetfromdp(7995024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_rdata.bind(*p_40_S00_AXI_rdata);
        p_40_S00_AXI_rdata->set_sv_netview_offsetfromdp(7995080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_rresp.bind(*p_40_S00_AXI_rresp);
        p_40_S00_AXI_rresp->set_sv_netview_offsetfromdp(7995136);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rlast.bind(*p_40_S00_AXI_rlast);
        p_40_S00_AXI_rlast->set_sv_netview_offsetfromdp(7995192);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_ruser.bind(*p_40_S00_AXI_ruser);
        p_40_S00_AXI_ruser->set_sv_netview_offsetfromdp(7995248);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rvalid.bind(*p_40_S00_AXI_rvalid);
        p_40_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7995304);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rready.bind(*p_40_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_awaddr.bind(*p_40_M00_AXI_awaddr);
        p_40_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7995416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_awlen.bind(*p_40_M00_AXI_awlen);
        p_40_M00_AXI_awlen->set_sv_netview_offsetfromdp(7995472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awsize.bind(*p_40_M00_AXI_awsize);
        p_40_M00_AXI_awsize->set_sv_netview_offsetfromdp(7995528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_awburst.bind(*p_40_M00_AXI_awburst);
        p_40_M00_AXI_awburst->set_sv_netview_offsetfromdp(7995584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_awlock.bind(*p_40_M00_AXI_awlock);
        p_40_M00_AXI_awlock->set_sv_netview_offsetfromdp(7995640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awcache.bind(*p_40_M00_AXI_awcache);
        p_40_M00_AXI_awcache->set_sv_netview_offsetfromdp(7995696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awprot.bind(*p_40_M00_AXI_awprot);
        p_40_M00_AXI_awprot->set_sv_netview_offsetfromdp(7995752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awqos.bind(*p_40_M00_AXI_awqos);
        p_40_M00_AXI_awqos->set_sv_netview_offsetfromdp(7995808);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awvalid.bind(*p_40_M00_AXI_awvalid);
        p_40_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7995864);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awready.bind(*p_40_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_wdata.bind(*p_40_M00_AXI_wdata);
        p_40_M00_AXI_wdata->set_sv_netview_offsetfromdp(7995976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->M00_AXI_wstrb.bind(*p_40_M00_AXI_wstrb);
        p_40_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7996032);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wlast.bind(*p_40_M00_AXI_wlast);
        p_40_M00_AXI_wlast->set_sv_netview_offsetfromdp(7996088);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wvalid.bind(*p_40_M00_AXI_wvalid);
        p_40_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7996144);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wready.bind(*p_40_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_bresp.bind(*p_40_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bvalid.bind(*p_40_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bready.bind(*p_40_M00_AXI_bready);
        p_40_M00_AXI_bready->set_sv_netview_offsetfromdp(7996368);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_araddr.bind(*p_40_M00_AXI_araddr);
        p_40_M00_AXI_araddr->set_sv_netview_offsetfromdp(7996424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_arlen.bind(*p_40_M00_AXI_arlen);
        p_40_M00_AXI_arlen->set_sv_netview_offsetfromdp(7996480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arsize.bind(*p_40_M00_AXI_arsize);
        p_40_M00_AXI_arsize->set_sv_netview_offsetfromdp(7996536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_arburst.bind(*p_40_M00_AXI_arburst);
        p_40_M00_AXI_arburst->set_sv_netview_offsetfromdp(7996592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_arlock.bind(*p_40_M00_AXI_arlock);
        p_40_M00_AXI_arlock->set_sv_netview_offsetfromdp(7996648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arcache.bind(*p_40_M00_AXI_arcache);
        p_40_M00_AXI_arcache->set_sv_netview_offsetfromdp(7996704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arprot.bind(*p_40_M00_AXI_arprot);
        p_40_M00_AXI_arprot->set_sv_netview_offsetfromdp(7996760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arqos.bind(*p_40_M00_AXI_arqos);
        p_40_M00_AXI_arqos->set_sv_netview_offsetfromdp(7996816);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arvalid.bind(*p_40_M00_AXI_arvalid);
        p_40_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7996872);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arready.bind(*p_40_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_rdata.bind(*p_40_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_rresp.bind(*p_40_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rlast.bind(*p_40_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rvalid.bind(*p_40_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rready.bind(*p_40_M00_AXI_rready);
        p_40_M00_AXI_rready->set_sv_netview_offsetfromdp(7997208);
        sc_inst_41 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_41->xsim_set_dbg_index(2487);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awid.bind(*p_41_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_awaddr.bind(*p_41_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_awlen.bind(*p_41_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awsize.bind(*p_41_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_awburst.bind(*p_41_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awlock.bind(*p_41_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awcache.bind(*p_41_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awprot.bind(*p_41_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awqos.bind(*p_41_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_awuser.bind(*p_41_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awvalid.bind(*p_41_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awready.bind(*p_41_S00_AXI_awready);
        p_41_S00_AXI_awready->set_sv_netview_offsetfromdp(7998040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_wdata.bind(*p_41_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->S00_AXI_wstrb.bind(*p_41_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wlast.bind(*p_41_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_wuser.bind(*p_41_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wvalid.bind(*p_41_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wready.bind(*p_41_S00_AXI_wready);
        p_41_S00_AXI_wready->set_sv_netview_offsetfromdp(7998376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_bid.bind(*p_41_S00_AXI_bid);
        p_41_S00_AXI_bid->set_sv_netview_offsetfromdp(7998432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_bresp.bind(*p_41_S00_AXI_bresp);
        p_41_S00_AXI_bresp->set_sv_netview_offsetfromdp(7998488);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_buser.bind(*p_41_S00_AXI_buser);
        p_41_S00_AXI_buser->set_sv_netview_offsetfromdp(7998544);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bvalid.bind(*p_41_S00_AXI_bvalid);
        p_41_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7998600);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bready.bind(*p_41_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arid.bind(*p_41_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_aruser.bind(*p_41_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(7999328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_rid.bind(*p_41_S00_AXI_rid);
        p_41_S00_AXI_rid->set_sv_netview_offsetfromdp(7999384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(7999440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(7999496);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(7999552);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_ruser.bind(*p_41_S00_AXI_ruser);
        p_41_S00_AXI_ruser->set_sv_netview_offsetfromdp(7999608);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7999664);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_awaddr.bind(*p_41_M00_AXI_awaddr);
        p_41_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7999776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_awlen.bind(*p_41_M00_AXI_awlen);
        p_41_M00_AXI_awlen->set_sv_netview_offsetfromdp(7999832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awsize.bind(*p_41_M00_AXI_awsize);
        p_41_M00_AXI_awsize->set_sv_netview_offsetfromdp(7999888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_awburst.bind(*p_41_M00_AXI_awburst);
        p_41_M00_AXI_awburst->set_sv_netview_offsetfromdp(7999944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awlock.bind(*p_41_M00_AXI_awlock);
        p_41_M00_AXI_awlock->set_sv_netview_offsetfromdp(8000000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awcache.bind(*p_41_M00_AXI_awcache);
        p_41_M00_AXI_awcache->set_sv_netview_offsetfromdp(8000056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awprot.bind(*p_41_M00_AXI_awprot);
        p_41_M00_AXI_awprot->set_sv_netview_offsetfromdp(8000112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awqos.bind(*p_41_M00_AXI_awqos);
        p_41_M00_AXI_awqos->set_sv_netview_offsetfromdp(8000168);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awvalid.bind(*p_41_M00_AXI_awvalid);
        p_41_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8000224);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awready.bind(*p_41_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_wdata.bind(*p_41_M00_AXI_wdata);
        p_41_M00_AXI_wdata->set_sv_netview_offsetfromdp(8000336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M00_AXI_wstrb.bind(*p_41_M00_AXI_wstrb);
        p_41_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8000392);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wlast.bind(*p_41_M00_AXI_wlast);
        p_41_M00_AXI_wlast->set_sv_netview_offsetfromdp(8000448);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wvalid.bind(*p_41_M00_AXI_wvalid);
        p_41_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8000504);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wready.bind(*p_41_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_bresp.bind(*p_41_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bvalid.bind(*p_41_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bready.bind(*p_41_M00_AXI_bready);
        p_41_M00_AXI_bready->set_sv_netview_offsetfromdp(8000728);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(8000784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(8000840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(8000896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(8000952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(8001008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(8001064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(8001120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(8001176);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8001232);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(8001568);
        sc_inst_42 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_42->xsim_set_dbg_index(2488);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awid.bind(*p_42_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_awaddr.bind(*p_42_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_awlen.bind(*p_42_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awsize.bind(*p_42_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_awburst.bind(*p_42_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awlock.bind(*p_42_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awcache.bind(*p_42_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awprot.bind(*p_42_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awqos.bind(*p_42_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_awuser.bind(*p_42_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awvalid.bind(*p_42_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awready.bind(*p_42_S00_AXI_awready);
        p_42_S00_AXI_awready->set_sv_netview_offsetfromdp(8002400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_wdata.bind(*p_42_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->S00_AXI_wstrb.bind(*p_42_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wlast.bind(*p_42_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_wuser.bind(*p_42_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wvalid.bind(*p_42_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wready.bind(*p_42_S00_AXI_wready);
        p_42_S00_AXI_wready->set_sv_netview_offsetfromdp(8002736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_bid.bind(*p_42_S00_AXI_bid);
        p_42_S00_AXI_bid->set_sv_netview_offsetfromdp(8002792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_bresp.bind(*p_42_S00_AXI_bresp);
        p_42_S00_AXI_bresp->set_sv_netview_offsetfromdp(8002848);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_buser.bind(*p_42_S00_AXI_buser);
        p_42_S00_AXI_buser->set_sv_netview_offsetfromdp(8002904);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bvalid.bind(*p_42_S00_AXI_bvalid);
        p_42_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8002960);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bready.bind(*p_42_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arid.bind(*p_42_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_araddr.bind(*p_42_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_arlen.bind(*p_42_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arsize.bind(*p_42_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_arburst.bind(*p_42_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arlock.bind(*p_42_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arcache.bind(*p_42_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arprot.bind(*p_42_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arqos.bind(*p_42_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_aruser.bind(*p_42_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arvalid.bind(*p_42_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arready.bind(*p_42_S00_AXI_arready);
        p_42_S00_AXI_arready->set_sv_netview_offsetfromdp(8003688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_rid.bind(*p_42_S00_AXI_rid);
        p_42_S00_AXI_rid->set_sv_netview_offsetfromdp(8003744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_rdata.bind(*p_42_S00_AXI_rdata);
        p_42_S00_AXI_rdata->set_sv_netview_offsetfromdp(8003800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_rresp.bind(*p_42_S00_AXI_rresp);
        p_42_S00_AXI_rresp->set_sv_netview_offsetfromdp(8003856);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rlast.bind(*p_42_S00_AXI_rlast);
        p_42_S00_AXI_rlast->set_sv_netview_offsetfromdp(8003912);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_ruser.bind(*p_42_S00_AXI_ruser);
        p_42_S00_AXI_ruser->set_sv_netview_offsetfromdp(8003968);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rvalid.bind(*p_42_S00_AXI_rvalid);
        p_42_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8004024);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rready.bind(*p_42_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_awaddr.bind(*p_42_M00_AXI_awaddr);
        p_42_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8004136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_awlen.bind(*p_42_M00_AXI_awlen);
        p_42_M00_AXI_awlen->set_sv_netview_offsetfromdp(8004192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awsize.bind(*p_42_M00_AXI_awsize);
        p_42_M00_AXI_awsize->set_sv_netview_offsetfromdp(8004248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_awburst.bind(*p_42_M00_AXI_awburst);
        p_42_M00_AXI_awburst->set_sv_netview_offsetfromdp(8004304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_awlock.bind(*p_42_M00_AXI_awlock);
        p_42_M00_AXI_awlock->set_sv_netview_offsetfromdp(8004360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awcache.bind(*p_42_M00_AXI_awcache);
        p_42_M00_AXI_awcache->set_sv_netview_offsetfromdp(8004416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awprot.bind(*p_42_M00_AXI_awprot);
        p_42_M00_AXI_awprot->set_sv_netview_offsetfromdp(8004472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awqos.bind(*p_42_M00_AXI_awqos);
        p_42_M00_AXI_awqos->set_sv_netview_offsetfromdp(8004528);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awvalid.bind(*p_42_M00_AXI_awvalid);
        p_42_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8004584);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awready.bind(*p_42_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_wdata.bind(*p_42_M00_AXI_wdata);
        p_42_M00_AXI_wdata->set_sv_netview_offsetfromdp(8004696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->M00_AXI_wstrb.bind(*p_42_M00_AXI_wstrb);
        p_42_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8004752);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wlast.bind(*p_42_M00_AXI_wlast);
        p_42_M00_AXI_wlast->set_sv_netview_offsetfromdp(8004808);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wvalid.bind(*p_42_M00_AXI_wvalid);
        p_42_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8004864);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wready.bind(*p_42_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_bresp.bind(*p_42_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bvalid.bind(*p_42_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bready.bind(*p_42_M00_AXI_bready);
        p_42_M00_AXI_bready->set_sv_netview_offsetfromdp(8005088);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_araddr.bind(*p_42_M00_AXI_araddr);
        p_42_M00_AXI_araddr->set_sv_netview_offsetfromdp(8005144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_arlen.bind(*p_42_M00_AXI_arlen);
        p_42_M00_AXI_arlen->set_sv_netview_offsetfromdp(8005200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arsize.bind(*p_42_M00_AXI_arsize);
        p_42_M00_AXI_arsize->set_sv_netview_offsetfromdp(8005256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_arburst.bind(*p_42_M00_AXI_arburst);
        p_42_M00_AXI_arburst->set_sv_netview_offsetfromdp(8005312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_arlock.bind(*p_42_M00_AXI_arlock);
        p_42_M00_AXI_arlock->set_sv_netview_offsetfromdp(8005368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arcache.bind(*p_42_M00_AXI_arcache);
        p_42_M00_AXI_arcache->set_sv_netview_offsetfromdp(8005424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arprot.bind(*p_42_M00_AXI_arprot);
        p_42_M00_AXI_arprot->set_sv_netview_offsetfromdp(8005480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arqos.bind(*p_42_M00_AXI_arqos);
        p_42_M00_AXI_arqos->set_sv_netview_offsetfromdp(8005536);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arvalid.bind(*p_42_M00_AXI_arvalid);
        p_42_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8005592);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arready.bind(*p_42_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_rdata.bind(*p_42_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_rresp.bind(*p_42_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rlast.bind(*p_42_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rvalid.bind(*p_42_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rready.bind(*p_42_M00_AXI_rready);
        p_42_M00_AXI_rready->set_sv_netview_offsetfromdp(8005928);
        sc_inst_43 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_43->xsim_set_dbg_index(2489);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awid.bind(*p_43_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_awaddr.bind(*p_43_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_awlen.bind(*p_43_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awsize.bind(*p_43_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_awburst.bind(*p_43_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awlock.bind(*p_43_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awcache.bind(*p_43_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awprot.bind(*p_43_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awqos.bind(*p_43_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_awuser.bind(*p_43_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awvalid.bind(*p_43_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awready.bind(*p_43_S00_AXI_awready);
        p_43_S00_AXI_awready->set_sv_netview_offsetfromdp(8006760);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_wdata.bind(*p_43_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->S00_AXI_wstrb.bind(*p_43_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wlast.bind(*p_43_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_wuser.bind(*p_43_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wvalid.bind(*p_43_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wready.bind(*p_43_S00_AXI_wready);
        p_43_S00_AXI_wready->set_sv_netview_offsetfromdp(8007096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_bid.bind(*p_43_S00_AXI_bid);
        p_43_S00_AXI_bid->set_sv_netview_offsetfromdp(8007152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_bresp.bind(*p_43_S00_AXI_bresp);
        p_43_S00_AXI_bresp->set_sv_netview_offsetfromdp(8007208);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_buser.bind(*p_43_S00_AXI_buser);
        p_43_S00_AXI_buser->set_sv_netview_offsetfromdp(8007264);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bvalid.bind(*p_43_S00_AXI_bvalid);
        p_43_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8007320);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bready.bind(*p_43_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arid.bind(*p_43_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_araddr.bind(*p_43_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_arlen.bind(*p_43_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arsize.bind(*p_43_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_arburst.bind(*p_43_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arlock.bind(*p_43_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arcache.bind(*p_43_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arprot.bind(*p_43_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arqos.bind(*p_43_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_aruser.bind(*p_43_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arvalid.bind(*p_43_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arready.bind(*p_43_S00_AXI_arready);
        p_43_S00_AXI_arready->set_sv_netview_offsetfromdp(8008048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_rid.bind(*p_43_S00_AXI_rid);
        p_43_S00_AXI_rid->set_sv_netview_offsetfromdp(8008104);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_rdata.bind(*p_43_S00_AXI_rdata);
        p_43_S00_AXI_rdata->set_sv_netview_offsetfromdp(8008160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_rresp.bind(*p_43_S00_AXI_rresp);
        p_43_S00_AXI_rresp->set_sv_netview_offsetfromdp(8008216);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rlast.bind(*p_43_S00_AXI_rlast);
        p_43_S00_AXI_rlast->set_sv_netview_offsetfromdp(8008272);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_ruser.bind(*p_43_S00_AXI_ruser);
        p_43_S00_AXI_ruser->set_sv_netview_offsetfromdp(8008328);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rvalid.bind(*p_43_S00_AXI_rvalid);
        p_43_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8008384);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rready.bind(*p_43_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_awaddr.bind(*p_43_M00_AXI_awaddr);
        p_43_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8008496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_awlen.bind(*p_43_M00_AXI_awlen);
        p_43_M00_AXI_awlen->set_sv_netview_offsetfromdp(8008552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awsize.bind(*p_43_M00_AXI_awsize);
        p_43_M00_AXI_awsize->set_sv_netview_offsetfromdp(8008608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awburst.bind(*p_43_M00_AXI_awburst);
        p_43_M00_AXI_awburst->set_sv_netview_offsetfromdp(8008664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_awlock.bind(*p_43_M00_AXI_awlock);
        p_43_M00_AXI_awlock->set_sv_netview_offsetfromdp(8008720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awcache.bind(*p_43_M00_AXI_awcache);
        p_43_M00_AXI_awcache->set_sv_netview_offsetfromdp(8008776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awprot.bind(*p_43_M00_AXI_awprot);
        p_43_M00_AXI_awprot->set_sv_netview_offsetfromdp(8008832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awqos.bind(*p_43_M00_AXI_awqos);
        p_43_M00_AXI_awqos->set_sv_netview_offsetfromdp(8008888);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awvalid.bind(*p_43_M00_AXI_awvalid);
        p_43_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8008944);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awready.bind(*p_43_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_wdata.bind(*p_43_M00_AXI_wdata);
        p_43_M00_AXI_wdata->set_sv_netview_offsetfromdp(8009056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->M00_AXI_wstrb.bind(*p_43_M00_AXI_wstrb);
        p_43_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8009112);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wlast.bind(*p_43_M00_AXI_wlast);
        p_43_M00_AXI_wlast->set_sv_netview_offsetfromdp(8009168);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wvalid.bind(*p_43_M00_AXI_wvalid);
        p_43_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8009224);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wready.bind(*p_43_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_bresp.bind(*p_43_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bvalid.bind(*p_43_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bready.bind(*p_43_M00_AXI_bready);
        p_43_M00_AXI_bready->set_sv_netview_offsetfromdp(8009448);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_araddr.bind(*p_43_M00_AXI_araddr);
        p_43_M00_AXI_araddr->set_sv_netview_offsetfromdp(8009504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_arlen.bind(*p_43_M00_AXI_arlen);
        p_43_M00_AXI_arlen->set_sv_netview_offsetfromdp(8009560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arsize.bind(*p_43_M00_AXI_arsize);
        p_43_M00_AXI_arsize->set_sv_netview_offsetfromdp(8009616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_arburst.bind(*p_43_M00_AXI_arburst);
        p_43_M00_AXI_arburst->set_sv_netview_offsetfromdp(8009672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_arlock.bind(*p_43_M00_AXI_arlock);
        p_43_M00_AXI_arlock->set_sv_netview_offsetfromdp(8009728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arcache.bind(*p_43_M00_AXI_arcache);
        p_43_M00_AXI_arcache->set_sv_netview_offsetfromdp(8009784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arprot.bind(*p_43_M00_AXI_arprot);
        p_43_M00_AXI_arprot->set_sv_netview_offsetfromdp(8009840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arqos.bind(*p_43_M00_AXI_arqos);
        p_43_M00_AXI_arqos->set_sv_netview_offsetfromdp(8009896);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arvalid.bind(*p_43_M00_AXI_arvalid);
        p_43_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8009952);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arready.bind(*p_43_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_rdata.bind(*p_43_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_rresp.bind(*p_43_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rlast.bind(*p_43_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rvalid.bind(*p_43_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rready.bind(*p_43_M00_AXI_rready);
        p_43_M00_AXI_rready->set_sv_netview_offsetfromdp(8010288);
        sc_inst_44 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_44->xsim_set_dbg_index(2490);
        xsim_sc_channel<0, bool > *p_44_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->aclk.bind(*p_44_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aclk);
        xsim_sc_channel<0, bool > *p_44_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->aresetn.bind(*p_44_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_awaddr.bind(*p_44_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_awlen.bind(*p_44_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awsize.bind(*p_44_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_awburst.bind(*p_44_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awlock.bind(*p_44_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awcache.bind(*p_44_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awprot.bind(*p_44_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awqos.bind(*p_44_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awvalid.bind(*p_44_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awready.bind(*p_44_S00_AXI_awready);
        p_44_S00_AXI_awready->set_sv_netview_offsetfromdp(8011008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->S00_AXI_wdata.bind(*p_44_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_wstrb.bind(*p_44_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wlast.bind(*p_44_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wvalid.bind(*p_44_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wready.bind(*p_44_S00_AXI_wready);
        p_44_S00_AXI_wready->set_sv_netview_offsetfromdp(8011288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_bresp.bind(*p_44_S00_AXI_bresp);
        p_44_S00_AXI_bresp->set_sv_netview_offsetfromdp(8011344);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bvalid.bind(*p_44_S00_AXI_bvalid);
        p_44_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8011400);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bready.bind(*p_44_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_araddr.bind(*p_44_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_arlen.bind(*p_44_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arsize.bind(*p_44_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_arburst.bind(*p_44_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arlock.bind(*p_44_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arcache.bind(*p_44_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arprot.bind(*p_44_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arqos.bind(*p_44_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arvalid.bind(*p_44_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arready.bind(*p_44_S00_AXI_arready);
        p_44_S00_AXI_arready->set_sv_netview_offsetfromdp(8012016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->S00_AXI_rdata.bind(*p_44_S00_AXI_rdata);
        p_44_S00_AXI_rdata->set_sv_netview_offsetfromdp(8012072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_rresp.bind(*p_44_S00_AXI_rresp);
        p_44_S00_AXI_rresp->set_sv_netview_offsetfromdp(8012128);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rlast.bind(*p_44_S00_AXI_rlast);
        p_44_S00_AXI_rlast->set_sv_netview_offsetfromdp(8012184);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rvalid.bind(*p_44_S00_AXI_rvalid);
        p_44_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8012240);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rready.bind(*p_44_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_awid.bind(*p_44_M00_AXI_awid);
        p_44_M00_AXI_awid->set_sv_netview_offsetfromdp(8012352);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M00_AXI_awaddr.bind(*p_44_M00_AXI_awaddr);
        p_44_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8012408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_awlen.bind(*p_44_M00_AXI_awlen);
        p_44_M00_AXI_awlen->set_sv_netview_offsetfromdp(8012464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awsize.bind(*p_44_M00_AXI_awsize);
        p_44_M00_AXI_awsize->set_sv_netview_offsetfromdp(8012520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_awburst.bind(*p_44_M00_AXI_awburst);
        p_44_M00_AXI_awburst->set_sv_netview_offsetfromdp(8012576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_awlock.bind(*p_44_M00_AXI_awlock);
        p_44_M00_AXI_awlock->set_sv_netview_offsetfromdp(8012632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awcache.bind(*p_44_M00_AXI_awcache);
        p_44_M00_AXI_awcache->set_sv_netview_offsetfromdp(8012688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awprot.bind(*p_44_M00_AXI_awprot);
        p_44_M00_AXI_awprot->set_sv_netview_offsetfromdp(8012744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awqos.bind(*p_44_M00_AXI_awqos);
        p_44_M00_AXI_awqos->set_sv_netview_offsetfromdp(8012800);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M00_AXI_awuser.bind(*p_44_M00_AXI_awuser);
        p_44_M00_AXI_awuser->set_sv_netview_offsetfromdp(8012856);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awvalid.bind(*p_44_M00_AXI_awvalid);
        p_44_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8012912);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awready.bind(*p_44_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_wdata.bind(*p_44_M00_AXI_wdata);
        p_44_M00_AXI_wdata->set_sv_netview_offsetfromdp(8013024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M00_AXI_wstrb.bind(*p_44_M00_AXI_wstrb);
        p_44_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8013080);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wlast.bind(*p_44_M00_AXI_wlast);
        p_44_M00_AXI_wlast->set_sv_netview_offsetfromdp(8013136);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M00_AXI_wuser.bind(*p_44_M00_AXI_wuser);
        p_44_M00_AXI_wuser->set_sv_netview_offsetfromdp(8013192);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wvalid.bind(*p_44_M00_AXI_wvalid);
        p_44_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8013248);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wready.bind(*p_44_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_bid.bind(*p_44_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_bresp.bind(*p_44_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M00_AXI_buser.bind(*p_44_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bvalid.bind(*p_44_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bready.bind(*p_44_M00_AXI_bready);
        p_44_M00_AXI_bready->set_sv_netview_offsetfromdp(8013584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_arid.bind(*p_44_M00_AXI_arid);
        p_44_M00_AXI_arid->set_sv_netview_offsetfromdp(8013640);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M00_AXI_araddr.bind(*p_44_M00_AXI_araddr);
        p_44_M00_AXI_araddr->set_sv_netview_offsetfromdp(8013696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_arlen.bind(*p_44_M00_AXI_arlen);
        p_44_M00_AXI_arlen->set_sv_netview_offsetfromdp(8013752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arsize.bind(*p_44_M00_AXI_arsize);
        p_44_M00_AXI_arsize->set_sv_netview_offsetfromdp(8013808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_arburst.bind(*p_44_M00_AXI_arburst);
        p_44_M00_AXI_arburst->set_sv_netview_offsetfromdp(8013864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_arlock.bind(*p_44_M00_AXI_arlock);
        p_44_M00_AXI_arlock->set_sv_netview_offsetfromdp(8013920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arcache.bind(*p_44_M00_AXI_arcache);
        p_44_M00_AXI_arcache->set_sv_netview_offsetfromdp(8013976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arprot.bind(*p_44_M00_AXI_arprot);
        p_44_M00_AXI_arprot->set_sv_netview_offsetfromdp(8014032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arqos.bind(*p_44_M00_AXI_arqos);
        p_44_M00_AXI_arqos->set_sv_netview_offsetfromdp(8014088);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M00_AXI_aruser.bind(*p_44_M00_AXI_aruser);
        p_44_M00_AXI_aruser->set_sv_netview_offsetfromdp(8014144);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arvalid.bind(*p_44_M00_AXI_arvalid);
        p_44_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8014200);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arready.bind(*p_44_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_rid.bind(*p_44_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_rdata.bind(*p_44_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_rresp.bind(*p_44_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rlast.bind(*p_44_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M00_AXI_ruser.bind(*p_44_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rvalid.bind(*p_44_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rready.bind(*p_44_M00_AXI_rready);
        p_44_M00_AXI_rready->set_sv_netview_offsetfromdp(8014648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_awid.bind(*p_44_M01_AXI_awid);
        p_44_M01_AXI_awid->set_sv_netview_offsetfromdp(8014704);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M01_AXI_awaddr.bind(*p_44_M01_AXI_awaddr);
        p_44_M01_AXI_awaddr->set_sv_netview_offsetfromdp(8014760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M01_AXI_awlen.bind(*p_44_M01_AXI_awlen);
        p_44_M01_AXI_awlen->set_sv_netview_offsetfromdp(8014816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M01_AXI_awsize.bind(*p_44_M01_AXI_awsize);
        p_44_M01_AXI_awsize->set_sv_netview_offsetfromdp(8014872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M01_AXI_awburst.bind(*p_44_M01_AXI_awburst);
        p_44_M01_AXI_awburst->set_sv_netview_offsetfromdp(8014928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_awlock.bind(*p_44_M01_AXI_awlock);
        p_44_M01_AXI_awlock->set_sv_netview_offsetfromdp(8014984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M01_AXI_awcache.bind(*p_44_M01_AXI_awcache);
        p_44_M01_AXI_awcache->set_sv_netview_offsetfromdp(8015040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M01_AXI_awprot.bind(*p_44_M01_AXI_awprot);
        p_44_M01_AXI_awprot->set_sv_netview_offsetfromdp(8015096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M01_AXI_awqos.bind(*p_44_M01_AXI_awqos);
        p_44_M01_AXI_awqos->set_sv_netview_offsetfromdp(8015152);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M01_AXI_awuser.bind(*p_44_M01_AXI_awuser);
        p_44_M01_AXI_awuser->set_sv_netview_offsetfromdp(8015208);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_awvalid.bind(*p_44_M01_AXI_awvalid);
        p_44_M01_AXI_awvalid->set_sv_netview_offsetfromdp(8015264);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_awready.bind(*p_44_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M01_AXI_wdata.bind(*p_44_M01_AXI_wdata);
        p_44_M01_AXI_wdata->set_sv_netview_offsetfromdp(8015376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M01_AXI_wstrb.bind(*p_44_M01_AXI_wstrb);
        p_44_M01_AXI_wstrb->set_sv_netview_offsetfromdp(8015432);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_wlast.bind(*p_44_M01_AXI_wlast);
        p_44_M01_AXI_wlast->set_sv_netview_offsetfromdp(8015488);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M01_AXI_wuser.bind(*p_44_M01_AXI_wuser);
        p_44_M01_AXI_wuser->set_sv_netview_offsetfromdp(8015544);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_wvalid.bind(*p_44_M01_AXI_wvalid);
        p_44_M01_AXI_wvalid->set_sv_netview_offsetfromdp(8015600);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_wready.bind(*p_44_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_bid.bind(*p_44_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M01_AXI_bresp.bind(*p_44_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M01_AXI_buser.bind(*p_44_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_bvalid.bind(*p_44_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_bready.bind(*p_44_M01_AXI_bready);
        p_44_M01_AXI_bready->set_sv_netview_offsetfromdp(8015936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_arid.bind(*p_44_M01_AXI_arid);
        p_44_M01_AXI_arid->set_sv_netview_offsetfromdp(8015992);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M01_AXI_araddr.bind(*p_44_M01_AXI_araddr);
        p_44_M01_AXI_araddr->set_sv_netview_offsetfromdp(8016048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M01_AXI_arlen.bind(*p_44_M01_AXI_arlen);
        p_44_M01_AXI_arlen->set_sv_netview_offsetfromdp(8016104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M01_AXI_arsize.bind(*p_44_M01_AXI_arsize);
        p_44_M01_AXI_arsize->set_sv_netview_offsetfromdp(8016160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M01_AXI_arburst.bind(*p_44_M01_AXI_arburst);
        p_44_M01_AXI_arburst->set_sv_netview_offsetfromdp(8016216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_arlock.bind(*p_44_M01_AXI_arlock);
        p_44_M01_AXI_arlock->set_sv_netview_offsetfromdp(8016272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M01_AXI_arcache.bind(*p_44_M01_AXI_arcache);
        p_44_M01_AXI_arcache->set_sv_netview_offsetfromdp(8016328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M01_AXI_arprot.bind(*p_44_M01_AXI_arprot);
        p_44_M01_AXI_arprot->set_sv_netview_offsetfromdp(8016384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M01_AXI_arqos.bind(*p_44_M01_AXI_arqos);
        p_44_M01_AXI_arqos->set_sv_netview_offsetfromdp(8016440);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M01_AXI_aruser.bind(*p_44_M01_AXI_aruser);
        p_44_M01_AXI_aruser->set_sv_netview_offsetfromdp(8016496);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_arvalid.bind(*p_44_M01_AXI_arvalid);
        p_44_M01_AXI_arvalid->set_sv_netview_offsetfromdp(8016552);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_arready.bind(*p_44_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M01_AXI_rid.bind(*p_44_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M01_AXI_rdata.bind(*p_44_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M01_AXI_rresp.bind(*p_44_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_rlast.bind(*p_44_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M01_AXI_ruser.bind(*p_44_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_rvalid.bind(*p_44_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M01_AXI_rready.bind(*p_44_M01_AXI_rready);
        p_44_M01_AXI_rready->set_sv_netview_offsetfromdp(8017000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_awid.bind(*p_44_M02_AXI_awid);
        p_44_M02_AXI_awid->set_sv_netview_offsetfromdp(8017056);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M02_AXI_awaddr.bind(*p_44_M02_AXI_awaddr);
        p_44_M02_AXI_awaddr->set_sv_netview_offsetfromdp(8017112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M02_AXI_awlen.bind(*p_44_M02_AXI_awlen);
        p_44_M02_AXI_awlen->set_sv_netview_offsetfromdp(8017168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M02_AXI_awsize.bind(*p_44_M02_AXI_awsize);
        p_44_M02_AXI_awsize->set_sv_netview_offsetfromdp(8017224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M02_AXI_awburst.bind(*p_44_M02_AXI_awburst);
        p_44_M02_AXI_awburst->set_sv_netview_offsetfromdp(8017280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_awlock.bind(*p_44_M02_AXI_awlock);
        p_44_M02_AXI_awlock->set_sv_netview_offsetfromdp(8017336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M02_AXI_awcache.bind(*p_44_M02_AXI_awcache);
        p_44_M02_AXI_awcache->set_sv_netview_offsetfromdp(8017392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M02_AXI_awprot.bind(*p_44_M02_AXI_awprot);
        p_44_M02_AXI_awprot->set_sv_netview_offsetfromdp(8017448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M02_AXI_awqos.bind(*p_44_M02_AXI_awqos);
        p_44_M02_AXI_awqos->set_sv_netview_offsetfromdp(8017504);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M02_AXI_awuser.bind(*p_44_M02_AXI_awuser);
        p_44_M02_AXI_awuser->set_sv_netview_offsetfromdp(8017560);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_awvalid.bind(*p_44_M02_AXI_awvalid);
        p_44_M02_AXI_awvalid->set_sv_netview_offsetfromdp(8017616);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_awready.bind(*p_44_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M02_AXI_wdata.bind(*p_44_M02_AXI_wdata);
        p_44_M02_AXI_wdata->set_sv_netview_offsetfromdp(8017728);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M02_AXI_wstrb.bind(*p_44_M02_AXI_wstrb);
        p_44_M02_AXI_wstrb->set_sv_netview_offsetfromdp(8017784);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_wlast.bind(*p_44_M02_AXI_wlast);
        p_44_M02_AXI_wlast->set_sv_netview_offsetfromdp(8017840);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M02_AXI_wuser.bind(*p_44_M02_AXI_wuser);
        p_44_M02_AXI_wuser->set_sv_netview_offsetfromdp(8017896);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_wvalid.bind(*p_44_M02_AXI_wvalid);
        p_44_M02_AXI_wvalid->set_sv_netview_offsetfromdp(8017952);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_wready.bind(*p_44_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_bid.bind(*p_44_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M02_AXI_bresp.bind(*p_44_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M02_AXI_buser.bind(*p_44_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_bvalid.bind(*p_44_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_bready.bind(*p_44_M02_AXI_bready);
        p_44_M02_AXI_bready->set_sv_netview_offsetfromdp(8018288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_arid.bind(*p_44_M02_AXI_arid);
        p_44_M02_AXI_arid->set_sv_netview_offsetfromdp(8018344);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M02_AXI_araddr.bind(*p_44_M02_AXI_araddr);
        p_44_M02_AXI_araddr->set_sv_netview_offsetfromdp(8018400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M02_AXI_arlen.bind(*p_44_M02_AXI_arlen);
        p_44_M02_AXI_arlen->set_sv_netview_offsetfromdp(8018456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M02_AXI_arsize.bind(*p_44_M02_AXI_arsize);
        p_44_M02_AXI_arsize->set_sv_netview_offsetfromdp(8018512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M02_AXI_arburst.bind(*p_44_M02_AXI_arburst);
        p_44_M02_AXI_arburst->set_sv_netview_offsetfromdp(8018568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_arlock.bind(*p_44_M02_AXI_arlock);
        p_44_M02_AXI_arlock->set_sv_netview_offsetfromdp(8018624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M02_AXI_arcache.bind(*p_44_M02_AXI_arcache);
        p_44_M02_AXI_arcache->set_sv_netview_offsetfromdp(8018680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M02_AXI_arprot.bind(*p_44_M02_AXI_arprot);
        p_44_M02_AXI_arprot->set_sv_netview_offsetfromdp(8018736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M02_AXI_arqos.bind(*p_44_M02_AXI_arqos);
        p_44_M02_AXI_arqos->set_sv_netview_offsetfromdp(8018792);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M02_AXI_aruser.bind(*p_44_M02_AXI_aruser);
        p_44_M02_AXI_aruser->set_sv_netview_offsetfromdp(8018848);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_arvalid.bind(*p_44_M02_AXI_arvalid);
        p_44_M02_AXI_arvalid->set_sv_netview_offsetfromdp(8018904);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_arready.bind(*p_44_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M02_AXI_rid.bind(*p_44_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M02_AXI_rdata.bind(*p_44_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M02_AXI_rresp.bind(*p_44_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_rlast.bind(*p_44_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M02_AXI_ruser.bind(*p_44_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_rvalid.bind(*p_44_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M02_AXI_rready.bind(*p_44_M02_AXI_rready);
        p_44_M02_AXI_rready->set_sv_netview_offsetfromdp(8019352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_awid.bind(*p_44_M03_AXI_awid);
        p_44_M03_AXI_awid->set_sv_netview_offsetfromdp(8019408);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M03_AXI_awaddr.bind(*p_44_M03_AXI_awaddr);
        p_44_M03_AXI_awaddr->set_sv_netview_offsetfromdp(8019464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M03_AXI_awlen.bind(*p_44_M03_AXI_awlen);
        p_44_M03_AXI_awlen->set_sv_netview_offsetfromdp(8019520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M03_AXI_awsize.bind(*p_44_M03_AXI_awsize);
        p_44_M03_AXI_awsize->set_sv_netview_offsetfromdp(8019576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M03_AXI_awburst.bind(*p_44_M03_AXI_awburst);
        p_44_M03_AXI_awburst->set_sv_netview_offsetfromdp(8019632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_awlock.bind(*p_44_M03_AXI_awlock);
        p_44_M03_AXI_awlock->set_sv_netview_offsetfromdp(8019688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M03_AXI_awcache.bind(*p_44_M03_AXI_awcache);
        p_44_M03_AXI_awcache->set_sv_netview_offsetfromdp(8019744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M03_AXI_awprot.bind(*p_44_M03_AXI_awprot);
        p_44_M03_AXI_awprot->set_sv_netview_offsetfromdp(8019800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M03_AXI_awqos.bind(*p_44_M03_AXI_awqos);
        p_44_M03_AXI_awqos->set_sv_netview_offsetfromdp(8019856);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M03_AXI_awuser.bind(*p_44_M03_AXI_awuser);
        p_44_M03_AXI_awuser->set_sv_netview_offsetfromdp(8019912);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_awvalid.bind(*p_44_M03_AXI_awvalid);
        p_44_M03_AXI_awvalid->set_sv_netview_offsetfromdp(8019968);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_awready.bind(*p_44_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M03_AXI_wdata.bind(*p_44_M03_AXI_wdata);
        p_44_M03_AXI_wdata->set_sv_netview_offsetfromdp(8020080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M03_AXI_wstrb.bind(*p_44_M03_AXI_wstrb);
        p_44_M03_AXI_wstrb->set_sv_netview_offsetfromdp(8020136);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_wlast.bind(*p_44_M03_AXI_wlast);
        p_44_M03_AXI_wlast->set_sv_netview_offsetfromdp(8020192);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M03_AXI_wuser.bind(*p_44_M03_AXI_wuser);
        p_44_M03_AXI_wuser->set_sv_netview_offsetfromdp(8020248);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_wvalid.bind(*p_44_M03_AXI_wvalid);
        p_44_M03_AXI_wvalid->set_sv_netview_offsetfromdp(8020304);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_wready.bind(*p_44_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_bid.bind(*p_44_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M03_AXI_bresp.bind(*p_44_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M03_AXI_buser.bind(*p_44_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_bvalid.bind(*p_44_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_bready.bind(*p_44_M03_AXI_bready);
        p_44_M03_AXI_bready->set_sv_netview_offsetfromdp(8020640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_arid.bind(*p_44_M03_AXI_arid);
        p_44_M03_AXI_arid->set_sv_netview_offsetfromdp(8020696);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M03_AXI_araddr.bind(*p_44_M03_AXI_araddr);
        p_44_M03_AXI_araddr->set_sv_netview_offsetfromdp(8020752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M03_AXI_arlen.bind(*p_44_M03_AXI_arlen);
        p_44_M03_AXI_arlen->set_sv_netview_offsetfromdp(8020808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M03_AXI_arsize.bind(*p_44_M03_AXI_arsize);
        p_44_M03_AXI_arsize->set_sv_netview_offsetfromdp(8020864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M03_AXI_arburst.bind(*p_44_M03_AXI_arburst);
        p_44_M03_AXI_arburst->set_sv_netview_offsetfromdp(8020920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_arlock.bind(*p_44_M03_AXI_arlock);
        p_44_M03_AXI_arlock->set_sv_netview_offsetfromdp(8020976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M03_AXI_arcache.bind(*p_44_M03_AXI_arcache);
        p_44_M03_AXI_arcache->set_sv_netview_offsetfromdp(8021032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M03_AXI_arprot.bind(*p_44_M03_AXI_arprot);
        p_44_M03_AXI_arprot->set_sv_netview_offsetfromdp(8021088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M03_AXI_arqos.bind(*p_44_M03_AXI_arqos);
        p_44_M03_AXI_arqos->set_sv_netview_offsetfromdp(8021144);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M03_AXI_aruser.bind(*p_44_M03_AXI_aruser);
        p_44_M03_AXI_aruser->set_sv_netview_offsetfromdp(8021200);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_arvalid.bind(*p_44_M03_AXI_arvalid);
        p_44_M03_AXI_arvalid->set_sv_netview_offsetfromdp(8021256);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_arready.bind(*p_44_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M03_AXI_rid.bind(*p_44_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M03_AXI_rdata.bind(*p_44_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M03_AXI_rresp.bind(*p_44_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_rlast.bind(*p_44_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M03_AXI_ruser.bind(*p_44_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_rvalid.bind(*p_44_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M03_AXI_rready.bind(*p_44_M03_AXI_rready);
        p_44_M03_AXI_rready->set_sv_netview_offsetfromdp(8021704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_awid.bind(*p_44_M04_AXI_awid);
        p_44_M04_AXI_awid->set_sv_netview_offsetfromdp(8021760);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M04_AXI_awaddr.bind(*p_44_M04_AXI_awaddr);
        p_44_M04_AXI_awaddr->set_sv_netview_offsetfromdp(8021816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M04_AXI_awlen.bind(*p_44_M04_AXI_awlen);
        p_44_M04_AXI_awlen->set_sv_netview_offsetfromdp(8021872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M04_AXI_awsize.bind(*p_44_M04_AXI_awsize);
        p_44_M04_AXI_awsize->set_sv_netview_offsetfromdp(8021928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M04_AXI_awburst.bind(*p_44_M04_AXI_awburst);
        p_44_M04_AXI_awburst->set_sv_netview_offsetfromdp(8021984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_awlock.bind(*p_44_M04_AXI_awlock);
        p_44_M04_AXI_awlock->set_sv_netview_offsetfromdp(8022040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M04_AXI_awcache.bind(*p_44_M04_AXI_awcache);
        p_44_M04_AXI_awcache->set_sv_netview_offsetfromdp(8022096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M04_AXI_awprot.bind(*p_44_M04_AXI_awprot);
        p_44_M04_AXI_awprot->set_sv_netview_offsetfromdp(8022152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M04_AXI_awqos.bind(*p_44_M04_AXI_awqos);
        p_44_M04_AXI_awqos->set_sv_netview_offsetfromdp(8022208);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M04_AXI_awuser.bind(*p_44_M04_AXI_awuser);
        p_44_M04_AXI_awuser->set_sv_netview_offsetfromdp(8022264);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_awvalid.bind(*p_44_M04_AXI_awvalid);
        p_44_M04_AXI_awvalid->set_sv_netview_offsetfromdp(8022320);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_awready.bind(*p_44_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M04_AXI_wdata.bind(*p_44_M04_AXI_wdata);
        p_44_M04_AXI_wdata->set_sv_netview_offsetfromdp(8022432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M04_AXI_wstrb.bind(*p_44_M04_AXI_wstrb);
        p_44_M04_AXI_wstrb->set_sv_netview_offsetfromdp(8022488);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_wlast.bind(*p_44_M04_AXI_wlast);
        p_44_M04_AXI_wlast->set_sv_netview_offsetfromdp(8022544);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M04_AXI_wuser.bind(*p_44_M04_AXI_wuser);
        p_44_M04_AXI_wuser->set_sv_netview_offsetfromdp(8022600);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_wvalid.bind(*p_44_M04_AXI_wvalid);
        p_44_M04_AXI_wvalid->set_sv_netview_offsetfromdp(8022656);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_wready.bind(*p_44_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_bid.bind(*p_44_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M04_AXI_bresp.bind(*p_44_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M04_AXI_buser.bind(*p_44_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_bvalid.bind(*p_44_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_bready.bind(*p_44_M04_AXI_bready);
        p_44_M04_AXI_bready->set_sv_netview_offsetfromdp(8022992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_arid.bind(*p_44_M04_AXI_arid);
        p_44_M04_AXI_arid->set_sv_netview_offsetfromdp(8023048);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->M04_AXI_araddr.bind(*p_44_M04_AXI_araddr);
        p_44_M04_AXI_araddr->set_sv_netview_offsetfromdp(8023104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M04_AXI_arlen.bind(*p_44_M04_AXI_arlen);
        p_44_M04_AXI_arlen->set_sv_netview_offsetfromdp(8023160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M04_AXI_arsize.bind(*p_44_M04_AXI_arsize);
        p_44_M04_AXI_arsize->set_sv_netview_offsetfromdp(8023216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M04_AXI_arburst.bind(*p_44_M04_AXI_arburst);
        p_44_M04_AXI_arburst->set_sv_netview_offsetfromdp(8023272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_arlock.bind(*p_44_M04_AXI_arlock);
        p_44_M04_AXI_arlock->set_sv_netview_offsetfromdp(8023328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M04_AXI_arcache.bind(*p_44_M04_AXI_arcache);
        p_44_M04_AXI_arcache->set_sv_netview_offsetfromdp(8023384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M04_AXI_arprot.bind(*p_44_M04_AXI_arprot);
        p_44_M04_AXI_arprot->set_sv_netview_offsetfromdp(8023440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M04_AXI_arqos.bind(*p_44_M04_AXI_arqos);
        p_44_M04_AXI_arqos->set_sv_netview_offsetfromdp(8023496);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->M04_AXI_aruser.bind(*p_44_M04_AXI_aruser);
        p_44_M04_AXI_aruser->set_sv_netview_offsetfromdp(8023552);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_arvalid.bind(*p_44_M04_AXI_arvalid);
        p_44_M04_AXI_arvalid->set_sv_netview_offsetfromdp(8023608);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_arready.bind(*p_44_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M04_AXI_rid.bind(*p_44_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M04_AXI_rdata.bind(*p_44_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M04_AXI_rresp.bind(*p_44_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_rlast.bind(*p_44_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->M04_AXI_ruser.bind(*p_44_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_rvalid.bind(*p_44_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M04_AXI_rready.bind(*p_44_M04_AXI_rready);
        p_44_M04_AXI_rready->set_sv_netview_offsetfromdp(8024056);
        sc_inst_45 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_45->xsim_set_dbg_index(2491);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_awlen.bind(*p_45_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awsize.bind(*p_45_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_awburst.bind(*p_45_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awlock.bind(*p_45_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awcache.bind(*p_45_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awregion.bind(*p_45_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awqos.bind(*p_45_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_45_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(8024832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_45_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wlast.bind(*p_45_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_45_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(8025112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(8025168);
        xsim_sc_channel<0, bool > *p_45_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(8025224);
        xsim_sc_channel<0, bool > *p_45_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_arlen.bind(*p_45_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arsize.bind(*p_45_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_arburst.bind(*p_45_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arlock.bind(*p_45_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arcache.bind(*p_45_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arregion.bind(*p_45_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arqos.bind(*p_45_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_45_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(8025896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(8025952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(8026008);
        xsim_sc_channel<0, bool > *p_45_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rlast.bind(*p_45_s_axi_rlast);
        p_45_s_axi_rlast->set_sv_netview_offsetfromdp(8026064);
        xsim_sc_channel<0, bool > *p_45_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(8026120);
        xsim_sc_channel<0, bool > *p_45_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->m_axi_awaddr.bind(*p_45_m_axi_awaddr);
        p_45_m_axi_awaddr->set_sv_netview_offsetfromdp(8026232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_awlen.bind(*p_45_m_axi_awlen);
        p_45_m_axi_awlen->set_sv_netview_offsetfromdp(8026288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_awsize.bind(*p_45_m_axi_awsize);
        p_45_m_axi_awsize->set_sv_netview_offsetfromdp(8026344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awburst.bind(*p_45_m_axi_awburst);
        p_45_m_axi_awburst->set_sv_netview_offsetfromdp(8026400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->m_axi_awlock.bind(*p_45_m_axi_awlock);
        p_45_m_axi_awlock->set_sv_netview_offsetfromdp(8026456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_awcache.bind(*p_45_m_axi_awcache);
        p_45_m_axi_awcache->set_sv_netview_offsetfromdp(8026512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_awprot.bind(*p_45_m_axi_awprot);
        p_45_m_axi_awprot->set_sv_netview_offsetfromdp(8026568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_awregion.bind(*p_45_m_axi_awregion);
        p_45_m_axi_awregion->set_sv_netview_offsetfromdp(8026624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_awqos.bind(*p_45_m_axi_awqos);
        p_45_m_axi_awqos->set_sv_netview_offsetfromdp(8026680);
        xsim_sc_channel<0, bool > *p_45_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awvalid.bind(*p_45_m_axi_awvalid);
        p_45_m_axi_awvalid->set_sv_netview_offsetfromdp(8026736);
        xsim_sc_channel<0, bool > *p_45_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awready.bind(*p_45_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_wdata.bind(*p_45_m_axi_wdata);
        p_45_m_axi_wdata->set_sv_netview_offsetfromdp(8026848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_wstrb.bind(*p_45_m_axi_wstrb);
        p_45_m_axi_wstrb->set_sv_netview_offsetfromdp(8026904);
        xsim_sc_channel<0, bool > *p_45_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wlast.bind(*p_45_m_axi_wlast);
        p_45_m_axi_wlast->set_sv_netview_offsetfromdp(8026960);
        xsim_sc_channel<0, bool > *p_45_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wvalid.bind(*p_45_m_axi_wvalid);
        p_45_m_axi_wvalid->set_sv_netview_offsetfromdp(8027016);
        xsim_sc_channel<0, bool > *p_45_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wready.bind(*p_45_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bresp.bind(*p_45_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bvalid.bind(*p_45_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bready.bind(*p_45_m_axi_bready);
        p_45_m_axi_bready->set_sv_netview_offsetfromdp(8027240);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->m_axi_araddr.bind(*p_45_m_axi_araddr);
        p_45_m_axi_araddr->set_sv_netview_offsetfromdp(8027296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_arlen.bind(*p_45_m_axi_arlen);
        p_45_m_axi_arlen->set_sv_netview_offsetfromdp(8027352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_arsize.bind(*p_45_m_axi_arsize);
        p_45_m_axi_arsize->set_sv_netview_offsetfromdp(8027408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arburst.bind(*p_45_m_axi_arburst);
        p_45_m_axi_arburst->set_sv_netview_offsetfromdp(8027464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->m_axi_arlock.bind(*p_45_m_axi_arlock);
        p_45_m_axi_arlock->set_sv_netview_offsetfromdp(8027520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_arcache.bind(*p_45_m_axi_arcache);
        p_45_m_axi_arcache->set_sv_netview_offsetfromdp(8027576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_arprot.bind(*p_45_m_axi_arprot);
        p_45_m_axi_arprot->set_sv_netview_offsetfromdp(8027632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_arregion.bind(*p_45_m_axi_arregion);
        p_45_m_axi_arregion->set_sv_netview_offsetfromdp(8027688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_arqos.bind(*p_45_m_axi_arqos);
        p_45_m_axi_arqos->set_sv_netview_offsetfromdp(8027744);
        xsim_sc_channel<0, bool > *p_45_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arvalid.bind(*p_45_m_axi_arvalid);
        p_45_m_axi_arvalid->set_sv_netview_offsetfromdp(8027800);
        xsim_sc_channel<0, bool > *p_45_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arready.bind(*p_45_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_rdata.bind(*p_45_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rresp.bind(*p_45_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rlast.bind(*p_45_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_45_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rvalid.bind(*p_45_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rready.bind(*p_45_m_axi_rready);
        p_45_m_axi_rready->set_sv_netview_offsetfromdp(8028136);
        sc_inst_46 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_46->xsim_set_dbg_index(2687);
        xsim_sc_channel<0, bool > *p_46_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aclk.bind(*p_46_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_46_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aresetn.bind(*p_46_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(8128520);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(8128800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(8128856);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(8128912);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(8129472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(8129528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(8129584);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(8129640);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(8129696);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<0, bool > *p_46_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_a.bind(*p_46_bram_rst_a);
        p_46_bram_rst_a->set_sv_netview_offsetfromdp(8129808);
        xsim_sc_channel<0, bool > *p_46_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_a.bind(*p_46_bram_clk_a);
        p_46_bram_clk_a->set_sv_netview_offsetfromdp(8129864);
        xsim_sc_channel<0, bool > *p_46_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_a.bind(*p_46_bram_en_a);
        p_46_bram_en_a->set_sv_netview_offsetfromdp(8129920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_a.bind(*p_46_bram_we_a);
        p_46_bram_we_a->set_sv_netview_offsetfromdp(8129976);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_a.bind(*p_46_bram_addr_a);
        p_46_bram_addr_a->set_sv_netview_offsetfromdp(8130032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_a.bind(*p_46_bram_wrdata_a);
        p_46_bram_wrdata_a->set_sv_netview_offsetfromdp(8130088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_a.bind(*p_46_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_46_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_b.bind(*p_46_bram_rst_b);
        p_46_bram_rst_b->set_sv_netview_offsetfromdp(8130200);
        xsim_sc_channel<0, bool > *p_46_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_b.bind(*p_46_bram_clk_b);
        p_46_bram_clk_b->set_sv_netview_offsetfromdp(8130256);
        xsim_sc_channel<0, bool > *p_46_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_b.bind(*p_46_bram_en_b);
        p_46_bram_en_b->set_sv_netview_offsetfromdp(8130312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_b.bind(*p_46_bram_we_b);
        p_46_bram_we_b->set_sv_netview_offsetfromdp(8130368);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_b.bind(*p_46_bram_addr_b);
        p_46_bram_addr_b->set_sv_netview_offsetfromdp(8130424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_b.bind(*p_46_bram_wrdata_b);
        p_46_bram_wrdata_b->set_sv_netview_offsetfromdp(8130480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_b.bind(*p_46_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_b);
        sc_inst_47 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_47->xsim_set_dbg_index(2689);
        xsim_sc_channel<0, bool > *p_47_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aclk.bind(*p_47_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aresetn.bind(*p_47_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_awlen.bind(*p_47_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awsize.bind(*p_47_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_awburst.bind(*p_47_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awlock.bind(*p_47_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_awcache.bind(*p_47_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(8192320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wlast.bind(*p_47_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(8192600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(8192656);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(8192712);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_arlen.bind(*p_47_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arsize.bind(*p_47_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_arburst.bind(*p_47_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arlock.bind(*p_47_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_arcache.bind(*p_47_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(8193272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(8193328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(8193384);
        xsim_sc_channel<0, bool > *p_47_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rlast.bind(*p_47_s_axi_rlast);
        p_47_s_axi_rlast->set_sv_netview_offsetfromdp(8193440);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(8193496);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_a.bind(*p_47_bram_rst_a);
        p_47_bram_rst_a->set_sv_netview_offsetfromdp(8193608);
        xsim_sc_channel<0, bool > *p_47_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_a.bind(*p_47_bram_clk_a);
        p_47_bram_clk_a->set_sv_netview_offsetfromdp(8193664);
        xsim_sc_channel<0, bool > *p_47_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_a.bind(*p_47_bram_en_a);
        p_47_bram_en_a->set_sv_netview_offsetfromdp(8193720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_a.bind(*p_47_bram_we_a);
        p_47_bram_we_a->set_sv_netview_offsetfromdp(8193776);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_a.bind(*p_47_bram_addr_a);
        p_47_bram_addr_a->set_sv_netview_offsetfromdp(8193832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_a.bind(*p_47_bram_wrdata_a);
        p_47_bram_wrdata_a->set_sv_netview_offsetfromdp(8193888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_a.bind(*p_47_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_47_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_b.bind(*p_47_bram_rst_b);
        p_47_bram_rst_b->set_sv_netview_offsetfromdp(8194000);
        xsim_sc_channel<0, bool > *p_47_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_b.bind(*p_47_bram_clk_b);
        p_47_bram_clk_b->set_sv_netview_offsetfromdp(8194056);
        xsim_sc_channel<0, bool > *p_47_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_b.bind(*p_47_bram_en_b);
        p_47_bram_en_b->set_sv_netview_offsetfromdp(8194112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_b.bind(*p_47_bram_we_b);
        p_47_bram_we_b->set_sv_netview_offsetfromdp(8194168);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_b.bind(*p_47_bram_addr_b);
        p_47_bram_addr_b->set_sv_netview_offsetfromdp(8194224);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_b.bind(*p_47_bram_wrdata_b);
        p_47_bram_wrdata_b->set_sv_netview_offsetfromdp(8194280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_b.bind(*p_47_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_b);
        sc_inst_48 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_48->xsim_set_dbg_index(2691);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awsize.bind(*p_48_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(8256120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(8256400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(8256456);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(8256512);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arsize.bind(*p_48_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(8257072);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(8257128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(8257184);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(8257240);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(8257296);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_a.bind(*p_48_bram_rst_a);
        p_48_bram_rst_a->set_sv_netview_offsetfromdp(8257408);
        xsim_sc_channel<0, bool > *p_48_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_a.bind(*p_48_bram_clk_a);
        p_48_bram_clk_a->set_sv_netview_offsetfromdp(8257464);
        xsim_sc_channel<0, bool > *p_48_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_a.bind(*p_48_bram_en_a);
        p_48_bram_en_a->set_sv_netview_offsetfromdp(8257520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_a.bind(*p_48_bram_we_a);
        p_48_bram_we_a->set_sv_netview_offsetfromdp(8257576);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_a.bind(*p_48_bram_addr_a);
        p_48_bram_addr_a->set_sv_netview_offsetfromdp(8257632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_a.bind(*p_48_bram_wrdata_a);
        p_48_bram_wrdata_a->set_sv_netview_offsetfromdp(8257688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_a.bind(*p_48_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_48_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_b.bind(*p_48_bram_rst_b);
        p_48_bram_rst_b->set_sv_netview_offsetfromdp(8257800);
        xsim_sc_channel<0, bool > *p_48_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_b.bind(*p_48_bram_clk_b);
        p_48_bram_clk_b->set_sv_netview_offsetfromdp(8257856);
        xsim_sc_channel<0, bool > *p_48_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_b.bind(*p_48_bram_en_b);
        p_48_bram_en_b->set_sv_netview_offsetfromdp(8257912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_b.bind(*p_48_bram_we_b);
        p_48_bram_we_b->set_sv_netview_offsetfromdp(8257968);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_b.bind(*p_48_bram_addr_b);
        p_48_bram_addr_b->set_sv_netview_offsetfromdp(8258024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_b.bind(*p_48_bram_wrdata_b);
        p_48_bram_wrdata_b->set_sv_netview_offsetfromdp(8258080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_b.bind(*p_48_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_b);
        sc_inst_49 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_49->xsim_set_dbg_index(2693);
        xsim_sc_channel<0, bool > *p_49_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aclk.bind(*p_49_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_49_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aresetn.bind(*p_49_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_awlen.bind(*p_49_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awsize.bind(*p_49_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_awburst.bind(*p_49_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awlock.bind(*p_49_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_awcache.bind(*p_49_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(8319920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wlast.bind(*p_49_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(8320200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(8320256);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(8320312);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_arlen.bind(*p_49_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arsize.bind(*p_49_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_arburst.bind(*p_49_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arlock.bind(*p_49_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_arcache.bind(*p_49_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(8320872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(8320928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(8320984);
        xsim_sc_channel<0, bool > *p_49_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rlast.bind(*p_49_s_axi_rlast);
        p_49_s_axi_rlast->set_sv_netview_offsetfromdp(8321040);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(8321096);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_a.bind(*p_49_bram_rst_a);
        p_49_bram_rst_a->set_sv_netview_offsetfromdp(8321208);
        xsim_sc_channel<0, bool > *p_49_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_a.bind(*p_49_bram_clk_a);
        p_49_bram_clk_a->set_sv_netview_offsetfromdp(8321264);
        xsim_sc_channel<0, bool > *p_49_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_a.bind(*p_49_bram_en_a);
        p_49_bram_en_a->set_sv_netview_offsetfromdp(8321320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_a.bind(*p_49_bram_we_a);
        p_49_bram_we_a->set_sv_netview_offsetfromdp(8321376);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_a.bind(*p_49_bram_addr_a);
        p_49_bram_addr_a->set_sv_netview_offsetfromdp(8321432);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_a.bind(*p_49_bram_wrdata_a);
        p_49_bram_wrdata_a->set_sv_netview_offsetfromdp(8321488);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_a.bind(*p_49_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_49_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_b.bind(*p_49_bram_rst_b);
        p_49_bram_rst_b->set_sv_netview_offsetfromdp(8321600);
        xsim_sc_channel<0, bool > *p_49_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_b.bind(*p_49_bram_clk_b);
        p_49_bram_clk_b->set_sv_netview_offsetfromdp(8321656);
        xsim_sc_channel<0, bool > *p_49_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_b.bind(*p_49_bram_en_b);
        p_49_bram_en_b->set_sv_netview_offsetfromdp(8321712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_b.bind(*p_49_bram_we_b);
        p_49_bram_we_b->set_sv_netview_offsetfromdp(8321768);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_b.bind(*p_49_bram_addr_b);
        p_49_bram_addr_b->set_sv_netview_offsetfromdp(8321824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_b.bind(*p_49_bram_wrdata_b);
        p_49_bram_wrdata_b->set_sv_netview_offsetfromdp(8321880);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_b.bind(*p_49_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_b);
        sc_inst_50 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_50->xsim_set_dbg_index(52);
        sc_inst_51 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_51->xsim_set_dbg_index(53);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_awlen.bind(*p_51_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_awburst.bind(*p_51_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awlock.bind(*p_51_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awcache.bind(*p_51_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awqos.bind(*p_51_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(8482160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wlast.bind(*p_51_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(8482440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(8482496);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(8482552);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_arlen.bind(*p_51_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_arburst.bind(*p_51_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arlock.bind(*p_51_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arcache.bind(*p_51_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arqos.bind(*p_51_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(8483112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(8483168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(8483224);
        xsim_sc_channel<0, bool > *p_51_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rlast.bind(*p_51_s_axi_rlast);
        p_51_s_axi_rlast->set_sv_netview_offsetfromdp(8483280);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(8483336);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(8483448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_awlen.bind(*p_51_m_axi_awlen);
        p_51_m_axi_awlen->set_sv_netview_offsetfromdp(8483504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awburst.bind(*p_51_m_axi_awburst);
        p_51_m_axi_awburst->set_sv_netview_offsetfromdp(8483560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->m_axi_awlock.bind(*p_51_m_axi_awlock);
        p_51_m_axi_awlock->set_sv_netview_offsetfromdp(8483616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awcache.bind(*p_51_m_axi_awcache);
        p_51_m_axi_awcache->set_sv_netview_offsetfromdp(8483672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(8483728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awqos.bind(*p_51_m_axi_awqos);
        p_51_m_axi_awqos->set_sv_netview_offsetfromdp(8483784);
        xsim_sc_channel<0, bool > *p_51_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(8483840);
        xsim_sc_channel<0, bool > *p_51_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(8483952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(8484008);
        xsim_sc_channel<0, bool > *p_51_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wlast.bind(*p_51_m_axi_wlast);
        p_51_m_axi_wlast->set_sv_netview_offsetfromdp(8484064);
        xsim_sc_channel<0, bool > *p_51_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(8484120);
        xsim_sc_channel<0, bool > *p_51_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(8484344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(8484400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_arlen.bind(*p_51_m_axi_arlen);
        p_51_m_axi_arlen->set_sv_netview_offsetfromdp(8484456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arburst.bind(*p_51_m_axi_arburst);
        p_51_m_axi_arburst->set_sv_netview_offsetfromdp(8484512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->m_axi_arlock.bind(*p_51_m_axi_arlock);
        p_51_m_axi_arlock->set_sv_netview_offsetfromdp(8484568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arcache.bind(*p_51_m_axi_arcache);
        p_51_m_axi_arcache->set_sv_netview_offsetfromdp(8484624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(8484680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arqos.bind(*p_51_m_axi_arqos);
        p_51_m_axi_arqos->set_sv_netview_offsetfromdp(8484736);
        xsim_sc_channel<0, bool > *p_51_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(8484792);
        xsim_sc_channel<0, bool > *p_51_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rlast.bind(*p_51_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_51_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(8485128);
        sc_inst_52 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_52->xsim_set_dbg_index(3029);
        xsim_sc_channel<0, bool > *p_52_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->aclk.bind(*p_52_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aclk);
        xsim_sc_channel<0, bool > *p_52_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->aresetn.bind(*p_52_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(9018192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(9018416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(9018472);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(9018528);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(9018808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(9018864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(9018920);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(9018976);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->m_axi_awaddr.bind(*p_52_m_axi_awaddr);
        p_52_m_axi_awaddr->set_sv_netview_offsetfromdp(9019088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_awprot.bind(*p_52_m_axi_awprot);
        p_52_m_axi_awprot->set_sv_netview_offsetfromdp(9019144);
        xsim_sc_channel<0, bool > *p_52_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awvalid.bind(*p_52_m_axi_awvalid);
        p_52_m_axi_awvalid->set_sv_netview_offsetfromdp(9019200);
        xsim_sc_channel<0, bool > *p_52_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awready.bind(*p_52_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_wdata.bind(*p_52_m_axi_wdata);
        p_52_m_axi_wdata->set_sv_netview_offsetfromdp(9019312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_wstrb.bind(*p_52_m_axi_wstrb);
        p_52_m_axi_wstrb->set_sv_netview_offsetfromdp(9019368);
        xsim_sc_channel<0, bool > *p_52_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wvalid.bind(*p_52_m_axi_wvalid);
        p_52_m_axi_wvalid->set_sv_netview_offsetfromdp(9019424);
        xsim_sc_channel<0, bool > *p_52_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wready.bind(*p_52_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_bresp.bind(*p_52_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bvalid.bind(*p_52_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bready.bind(*p_52_m_axi_bready);
        p_52_m_axi_bready->set_sv_netview_offsetfromdp(9019648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->m_axi_araddr.bind(*p_52_m_axi_araddr);
        p_52_m_axi_araddr->set_sv_netview_offsetfromdp(9019704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_arprot.bind(*p_52_m_axi_arprot);
        p_52_m_axi_arprot->set_sv_netview_offsetfromdp(9019760);
        xsim_sc_channel<0, bool > *p_52_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arvalid.bind(*p_52_m_axi_arvalid);
        p_52_m_axi_arvalid->set_sv_netview_offsetfromdp(9019816);
        xsim_sc_channel<0, bool > *p_52_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arready.bind(*p_52_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_rdata.bind(*p_52_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_rresp.bind(*p_52_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rvalid.bind(*p_52_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rready.bind(*p_52_m_axi_rready);
        p_52_m_axi_rready->set_sv_netview_offsetfromdp(9020096);
        sc_inst_53 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_53->xsim_set_dbg_index(3070);
        xsim_sc_channel<0, bool > *p_53_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aclk.bind(*p_53_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_53_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aresetn.bind(*p_53_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(9057120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(9057344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(9057400);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(9057456);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(9057736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(9057792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(9057848);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(9057904);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<0, bool > *p_53_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_aclk.bind(*p_53_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_53_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_aresetn.bind(*p_53_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(9058128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(9058184);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(9058240);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(9058352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(9058408);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(9058464);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(9058688);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(9058744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(9058800);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(9058856);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(9059136);
        sc_inst_54 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_54->xsim_set_dbg_index(3071);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(9059520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(9059744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(9059800);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(9059856);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(9060136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(9060192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(9060248);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(9060304);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(9060416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(9060472);
        xsim_sc_channel<0, bool > *p_54_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(9060528);
        xsim_sc_channel<0, bool > *p_54_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(9060640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(9060696);
        xsim_sc_channel<0, bool > *p_54_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(9060752);
        xsim_sc_channel<0, bool > *p_54_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(9060976);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(9061032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(9061088);
        xsim_sc_channel<0, bool > *p_54_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(9061144);
        xsim_sc_channel<0, bool > *p_54_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(9061424);
        sc_inst_55 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.auto_cc");
        sc_inst_55->xsim_set_dbg_index(3114);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_55_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(9098448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(9098672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(9098728);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(9098784);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_55_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(9099064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(9099120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(9099176);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(9099232);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aclk.bind(*p_55_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aresetn.bind(*p_55_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_55_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_55->m_axi_awaddr.bind(*p_55_m_axi_awaddr);
        p_55_m_axi_awaddr->set_sv_netview_offsetfromdp(9099456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awprot.bind(*p_55_m_axi_awprot);
        p_55_m_axi_awprot->set_sv_netview_offsetfromdp(9099512);
        xsim_sc_channel<0, bool > *p_55_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awvalid.bind(*p_55_m_axi_awvalid);
        p_55_m_axi_awvalid->set_sv_netview_offsetfromdp(9099568);
        xsim_sc_channel<0, bool > *p_55_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awready.bind(*p_55_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_wdata.bind(*p_55_m_axi_wdata);
        p_55_m_axi_wdata->set_sv_netview_offsetfromdp(9099680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_wstrb.bind(*p_55_m_axi_wstrb);
        p_55_m_axi_wstrb->set_sv_netview_offsetfromdp(9099736);
        xsim_sc_channel<0, bool > *p_55_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wvalid.bind(*p_55_m_axi_wvalid);
        p_55_m_axi_wvalid->set_sv_netview_offsetfromdp(9099792);
        xsim_sc_channel<0, bool > *p_55_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wready.bind(*p_55_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_bresp.bind(*p_55_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bvalid.bind(*p_55_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bready.bind(*p_55_m_axi_bready);
        p_55_m_axi_bready->set_sv_netview_offsetfromdp(9100016);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_55_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_55->m_axi_araddr.bind(*p_55_m_axi_araddr);
        p_55_m_axi_araddr->set_sv_netview_offsetfromdp(9100072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arprot.bind(*p_55_m_axi_arprot);
        p_55_m_axi_arprot->set_sv_netview_offsetfromdp(9100128);
        xsim_sc_channel<0, bool > *p_55_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arvalid.bind(*p_55_m_axi_arvalid);
        p_55_m_axi_arvalid->set_sv_netview_offsetfromdp(9100184);
        xsim_sc_channel<0, bool > *p_55_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arready.bind(*p_55_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_rdata.bind(*p_55_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_rresp.bind(*p_55_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rvalid.bind(*p_55_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rready.bind(*p_55_m_axi_rready);
        p_55_m_axi_rready->set_sv_netview_offsetfromdp(9100464);
        sc_inst_56 = new pfm_dynamic_m03_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.m03_regslice");
        sc_inst_56->xsim_set_dbg_index(3115);
        xsim_sc_channel<0, bool > *p_56_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->aclk.bind(*p_56_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aclk);
        xsim_sc_channel<0, bool > *p_56_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->aresetn.bind(*p_56_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aresetn);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_56_s_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(9100848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(9101072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(9101128);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(9101184);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_56_s_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(9101464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(9101520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(9101576);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(9101632);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_56_m_axi_awaddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_56->m_axi_awaddr.bind(*p_56_m_axi_awaddr);
        p_56_m_axi_awaddr->set_sv_netview_offsetfromdp(9101744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_awprot.bind(*p_56_m_axi_awprot);
        p_56_m_axi_awprot->set_sv_netview_offsetfromdp(9101800);
        xsim_sc_channel<0, bool > *p_56_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awvalid.bind(*p_56_m_axi_awvalid);
        p_56_m_axi_awvalid->set_sv_netview_offsetfromdp(9101856);
        xsim_sc_channel<0, bool > *p_56_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awready.bind(*p_56_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_wdata.bind(*p_56_m_axi_wdata);
        p_56_m_axi_wdata->set_sv_netview_offsetfromdp(9101968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_wstrb.bind(*p_56_m_axi_wstrb);
        p_56_m_axi_wstrb->set_sv_netview_offsetfromdp(9102024);
        xsim_sc_channel<0, bool > *p_56_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wvalid.bind(*p_56_m_axi_wvalid);
        p_56_m_axi_wvalid->set_sv_netview_offsetfromdp(9102080);
        xsim_sc_channel<0, bool > *p_56_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wready.bind(*p_56_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_bresp.bind(*p_56_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bvalid.bind(*p_56_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bready.bind(*p_56_m_axi_bready);
        p_56_m_axi_bready->set_sv_netview_offsetfromdp(9102304);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_56_m_axi_araddr = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_56->m_axi_araddr.bind(*p_56_m_axi_araddr);
        p_56_m_axi_araddr->set_sv_netview_offsetfromdp(9102360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_arprot.bind(*p_56_m_axi_arprot);
        p_56_m_axi_arprot->set_sv_netview_offsetfromdp(9102416);
        xsim_sc_channel<0, bool > *p_56_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arvalid.bind(*p_56_m_axi_arvalid);
        p_56_m_axi_arvalid->set_sv_netview_offsetfromdp(9102472);
        xsim_sc_channel<0, bool > *p_56_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arready.bind(*p_56_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_rdata.bind(*p_56_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_rresp.bind(*p_56_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rvalid.bind(*p_56_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rready.bind(*p_56_m_axi_rready);
        p_56_m_axi_rready->set_sv_netview_offsetfromdp(9102752);
        sc_inst_57 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_57->xsim_set_dbg_index(1486);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(9113312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(9113536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(9113592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(9113648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(9113928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(9113984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(9114040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(9114096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(9114208);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_57_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(9114264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(9114320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_57_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(9114432);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_57_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(9114488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(9114544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(9114768);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(9114824);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_57_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(9114880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(9114936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_57_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(9115216);
        sc_inst_58 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_58->xsim_set_dbg_index(61);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awid.bind(*p_58_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_awaddr.bind(*p_58_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_awlen.bind(*p_58_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awsize.bind(*p_58_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_awburst.bind(*p_58_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awlock.bind(*p_58_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awcache.bind(*p_58_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awprot.bind(*p_58_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awqos.bind(*p_58_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awvalid.bind(*p_58_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awready.bind(*p_58_S00_AXI_awready);
        p_58_S00_AXI_awready->set_sv_netview_offsetfromdp(9944312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_wdata.bind(*p_58_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_wstrb.bind(*p_58_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wlast.bind(*p_58_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wvalid.bind(*p_58_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wready.bind(*p_58_S00_AXI_wready);
        p_58_S00_AXI_wready->set_sv_netview_offsetfromdp(9944592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_bid.bind(*p_58_S00_AXI_bid);
        p_58_S00_AXI_bid->set_sv_netview_offsetfromdp(9944648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_bresp.bind(*p_58_S00_AXI_bresp);
        p_58_S00_AXI_bresp->set_sv_netview_offsetfromdp(9944704);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bvalid.bind(*p_58_S00_AXI_bvalid);
        p_58_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9944760);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bready.bind(*p_58_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arid.bind(*p_58_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_araddr.bind(*p_58_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_arlen.bind(*p_58_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arsize.bind(*p_58_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_arburst.bind(*p_58_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arlock.bind(*p_58_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arcache.bind(*p_58_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arprot.bind(*p_58_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arqos.bind(*p_58_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arvalid.bind(*p_58_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arready.bind(*p_58_S00_AXI_arready);
        p_58_S00_AXI_arready->set_sv_netview_offsetfromdp(9945432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_rid.bind(*p_58_S00_AXI_rid);
        p_58_S00_AXI_rid->set_sv_netview_offsetfromdp(9945488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_rdata.bind(*p_58_S00_AXI_rdata);
        p_58_S00_AXI_rdata->set_sv_netview_offsetfromdp(9945544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_rresp.bind(*p_58_S00_AXI_rresp);
        p_58_S00_AXI_rresp->set_sv_netview_offsetfromdp(9945600);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rlast.bind(*p_58_S00_AXI_rlast);
        p_58_S00_AXI_rlast->set_sv_netview_offsetfromdp(9945656);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rvalid.bind(*p_58_S00_AXI_rvalid);
        p_58_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9945712);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rready.bind(*p_58_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_awaddr.bind(*p_58_M00_AXI_awaddr);
        p_58_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9945824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_awlen.bind(*p_58_M00_AXI_awlen);
        p_58_M00_AXI_awlen->set_sv_netview_offsetfromdp(9945880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awsize.bind(*p_58_M00_AXI_awsize);
        p_58_M00_AXI_awsize->set_sv_netview_offsetfromdp(9945936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_awburst.bind(*p_58_M00_AXI_awburst);
        p_58_M00_AXI_awburst->set_sv_netview_offsetfromdp(9945992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_awlock.bind(*p_58_M00_AXI_awlock);
        p_58_M00_AXI_awlock->set_sv_netview_offsetfromdp(9946048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awcache.bind(*p_58_M00_AXI_awcache);
        p_58_M00_AXI_awcache->set_sv_netview_offsetfromdp(9946104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awprot.bind(*p_58_M00_AXI_awprot);
        p_58_M00_AXI_awprot->set_sv_netview_offsetfromdp(9946160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awqos.bind(*p_58_M00_AXI_awqos);
        p_58_M00_AXI_awqos->set_sv_netview_offsetfromdp(9946216);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awvalid.bind(*p_58_M00_AXI_awvalid);
        p_58_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9946272);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awready.bind(*p_58_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_wdata.bind(*p_58_M00_AXI_wdata);
        p_58_M00_AXI_wdata->set_sv_netview_offsetfromdp(9946384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_wstrb.bind(*p_58_M00_AXI_wstrb);
        p_58_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9946440);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wlast.bind(*p_58_M00_AXI_wlast);
        p_58_M00_AXI_wlast->set_sv_netview_offsetfromdp(9946496);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wvalid.bind(*p_58_M00_AXI_wvalid);
        p_58_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9946552);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wready.bind(*p_58_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_bresp.bind(*p_58_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bvalid.bind(*p_58_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bready.bind(*p_58_M00_AXI_bready);
        p_58_M00_AXI_bready->set_sv_netview_offsetfromdp(9946776);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_araddr.bind(*p_58_M00_AXI_araddr);
        p_58_M00_AXI_araddr->set_sv_netview_offsetfromdp(9946832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_arlen.bind(*p_58_M00_AXI_arlen);
        p_58_M00_AXI_arlen->set_sv_netview_offsetfromdp(9946888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arsize.bind(*p_58_M00_AXI_arsize);
        p_58_M00_AXI_arsize->set_sv_netview_offsetfromdp(9946944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_arburst.bind(*p_58_M00_AXI_arburst);
        p_58_M00_AXI_arburst->set_sv_netview_offsetfromdp(9947000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_arlock.bind(*p_58_M00_AXI_arlock);
        p_58_M00_AXI_arlock->set_sv_netview_offsetfromdp(9947056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arcache.bind(*p_58_M00_AXI_arcache);
        p_58_M00_AXI_arcache->set_sv_netview_offsetfromdp(9947112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arprot.bind(*p_58_M00_AXI_arprot);
        p_58_M00_AXI_arprot->set_sv_netview_offsetfromdp(9947168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arqos.bind(*p_58_M00_AXI_arqos);
        p_58_M00_AXI_arqos->set_sv_netview_offsetfromdp(9947224);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arvalid.bind(*p_58_M00_AXI_arvalid);
        p_58_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9947280);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arready.bind(*p_58_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_rdata.bind(*p_58_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_rresp.bind(*p_58_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rlast.bind(*p_58_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rvalid.bind(*p_58_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rready.bind(*p_58_M00_AXI_rready);
        p_58_M00_AXI_rready->set_sv_netview_offsetfromdp(9947616);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M01_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M01_AXI_awaddr.bind(*p_58_M01_AXI_awaddr);
        p_58_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9947672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_awlen.bind(*p_58_M01_AXI_awlen);
        p_58_M01_AXI_awlen->set_sv_netview_offsetfromdp(9947728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awsize.bind(*p_58_M01_AXI_awsize);
        p_58_M01_AXI_awsize->set_sv_netview_offsetfromdp(9947784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_awburst.bind(*p_58_M01_AXI_awburst);
        p_58_M01_AXI_awburst->set_sv_netview_offsetfromdp(9947840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_awlock.bind(*p_58_M01_AXI_awlock);
        p_58_M01_AXI_awlock->set_sv_netview_offsetfromdp(9947896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awcache.bind(*p_58_M01_AXI_awcache);
        p_58_M01_AXI_awcache->set_sv_netview_offsetfromdp(9947952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awprot.bind(*p_58_M01_AXI_awprot);
        p_58_M01_AXI_awprot->set_sv_netview_offsetfromdp(9948008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awqos.bind(*p_58_M01_AXI_awqos);
        p_58_M01_AXI_awqos->set_sv_netview_offsetfromdp(9948064);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awvalid.bind(*p_58_M01_AXI_awvalid);
        p_58_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9948120);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awready.bind(*p_58_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M01_AXI_wdata.bind(*p_58_M01_AXI_wdata);
        p_58_M01_AXI_wdata->set_sv_netview_offsetfromdp(9948232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M01_AXI_wstrb.bind(*p_58_M01_AXI_wstrb);
        p_58_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9948288);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wlast.bind(*p_58_M01_AXI_wlast);
        p_58_M01_AXI_wlast->set_sv_netview_offsetfromdp(9948344);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wvalid.bind(*p_58_M01_AXI_wvalid);
        p_58_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9948400);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wready.bind(*p_58_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_bresp.bind(*p_58_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bvalid.bind(*p_58_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bready.bind(*p_58_M01_AXI_bready);
        p_58_M01_AXI_bready->set_sv_netview_offsetfromdp(9948624);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M01_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M01_AXI_araddr.bind(*p_58_M01_AXI_araddr);
        p_58_M01_AXI_araddr->set_sv_netview_offsetfromdp(9948680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_arlen.bind(*p_58_M01_AXI_arlen);
        p_58_M01_AXI_arlen->set_sv_netview_offsetfromdp(9948736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arsize.bind(*p_58_M01_AXI_arsize);
        p_58_M01_AXI_arsize->set_sv_netview_offsetfromdp(9948792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_arburst.bind(*p_58_M01_AXI_arburst);
        p_58_M01_AXI_arburst->set_sv_netview_offsetfromdp(9948848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_arlock.bind(*p_58_M01_AXI_arlock);
        p_58_M01_AXI_arlock->set_sv_netview_offsetfromdp(9948904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arcache.bind(*p_58_M01_AXI_arcache);
        p_58_M01_AXI_arcache->set_sv_netview_offsetfromdp(9948960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arprot.bind(*p_58_M01_AXI_arprot);
        p_58_M01_AXI_arprot->set_sv_netview_offsetfromdp(9949016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arqos.bind(*p_58_M01_AXI_arqos);
        p_58_M01_AXI_arqos->set_sv_netview_offsetfromdp(9949072);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arvalid.bind(*p_58_M01_AXI_arvalid);
        p_58_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9949128);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arready.bind(*p_58_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M01_AXI_rdata.bind(*p_58_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_rresp.bind(*p_58_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rlast.bind(*p_58_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rvalid.bind(*p_58_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rready.bind(*p_58_M01_AXI_rready);
        p_58_M01_AXI_rready->set_sv_netview_offsetfromdp(9949464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M02_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M02_AXI_awaddr.bind(*p_58_M02_AXI_awaddr);
        p_58_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9949520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_awlen.bind(*p_58_M02_AXI_awlen);
        p_58_M02_AXI_awlen->set_sv_netview_offsetfromdp(9949576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awsize.bind(*p_58_M02_AXI_awsize);
        p_58_M02_AXI_awsize->set_sv_netview_offsetfromdp(9949632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_awburst.bind(*p_58_M02_AXI_awburst);
        p_58_M02_AXI_awburst->set_sv_netview_offsetfromdp(9949688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_awlock.bind(*p_58_M02_AXI_awlock);
        p_58_M02_AXI_awlock->set_sv_netview_offsetfromdp(9949744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awcache.bind(*p_58_M02_AXI_awcache);
        p_58_M02_AXI_awcache->set_sv_netview_offsetfromdp(9949800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awprot.bind(*p_58_M02_AXI_awprot);
        p_58_M02_AXI_awprot->set_sv_netview_offsetfromdp(9949856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awqos.bind(*p_58_M02_AXI_awqos);
        p_58_M02_AXI_awqos->set_sv_netview_offsetfromdp(9949912);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awvalid.bind(*p_58_M02_AXI_awvalid);
        p_58_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9949968);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awready.bind(*p_58_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M02_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M02_AXI_wdata.bind(*p_58_M02_AXI_wdata);
        p_58_M02_AXI_wdata->set_sv_netview_offsetfromdp(9950080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_wstrb.bind(*p_58_M02_AXI_wstrb);
        p_58_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9950136);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wlast.bind(*p_58_M02_AXI_wlast);
        p_58_M02_AXI_wlast->set_sv_netview_offsetfromdp(9950192);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wvalid.bind(*p_58_M02_AXI_wvalid);
        p_58_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9950248);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wready.bind(*p_58_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_bresp.bind(*p_58_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bvalid.bind(*p_58_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bready.bind(*p_58_M02_AXI_bready);
        p_58_M02_AXI_bready->set_sv_netview_offsetfromdp(9950472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M02_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M02_AXI_araddr.bind(*p_58_M02_AXI_araddr);
        p_58_M02_AXI_araddr->set_sv_netview_offsetfromdp(9950528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_arlen.bind(*p_58_M02_AXI_arlen);
        p_58_M02_AXI_arlen->set_sv_netview_offsetfromdp(9950584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arsize.bind(*p_58_M02_AXI_arsize);
        p_58_M02_AXI_arsize->set_sv_netview_offsetfromdp(9950640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_arburst.bind(*p_58_M02_AXI_arburst);
        p_58_M02_AXI_arburst->set_sv_netview_offsetfromdp(9950696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_arlock.bind(*p_58_M02_AXI_arlock);
        p_58_M02_AXI_arlock->set_sv_netview_offsetfromdp(9950752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arcache.bind(*p_58_M02_AXI_arcache);
        p_58_M02_AXI_arcache->set_sv_netview_offsetfromdp(9950808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arprot.bind(*p_58_M02_AXI_arprot);
        p_58_M02_AXI_arprot->set_sv_netview_offsetfromdp(9950864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arqos.bind(*p_58_M02_AXI_arqos);
        p_58_M02_AXI_arqos->set_sv_netview_offsetfromdp(9950920);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arvalid.bind(*p_58_M02_AXI_arvalid);
        p_58_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9950976);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arready.bind(*p_58_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M02_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M02_AXI_rdata.bind(*p_58_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_rresp.bind(*p_58_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rlast.bind(*p_58_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rvalid.bind(*p_58_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rready.bind(*p_58_M02_AXI_rready);
        p_58_M02_AXI_rready->set_sv_netview_offsetfromdp(9951312);
        sc_inst_59 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_59->xsim_set_dbg_index(37);
        sc_inst_60 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_60->xsim_set_dbg_index(189);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_awlen.bind(*p_60_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_awburst.bind(*p_60_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_awlock.bind(*p_60_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awcache.bind(*p_60_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awqos.bind(*p_60_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awuser.bind(*p_60_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(10126256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wlast.bind(*p_60_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(10126536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(10126592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_buser.bind(*p_60_s_axi_buser);
        p_60_s_axi_buser->set_sv_netview_offsetfromdp(10126648);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(10126704);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_arlen.bind(*p_60_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_arburst.bind(*p_60_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_arlock.bind(*p_60_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arcache.bind(*p_60_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arqos.bind(*p_60_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_aruser.bind(*p_60_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(10127320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(10127376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(10127432);
        xsim_sc_channel<0, bool > *p_60_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rlast.bind(*p_60_s_axi_rlast);
        p_60_s_axi_rlast->set_sv_netview_offsetfromdp(10127488);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(10127544);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(10127656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_awlen.bind(*p_60_m_axi_awlen);
        p_60_m_axi_awlen->set_sv_netview_offsetfromdp(10127712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_awburst.bind(*p_60_m_axi_awburst);
        p_60_m_axi_awburst->set_sv_netview_offsetfromdp(10127768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_awlock.bind(*p_60_m_axi_awlock);
        p_60_m_axi_awlock->set_sv_netview_offsetfromdp(10127824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awcache.bind(*p_60_m_axi_awcache);
        p_60_m_axi_awcache->set_sv_netview_offsetfromdp(10127880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(10127936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awqos.bind(*p_60_m_axi_awqos);
        p_60_m_axi_awqos->set_sv_netview_offsetfromdp(10127992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awuser.bind(*p_60_m_axi_awuser);
        p_60_m_axi_awuser->set_sv_netview_offsetfromdp(10128048);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(10128104);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(10128216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(10128272);
        xsim_sc_channel<0, bool > *p_60_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wlast.bind(*p_60_m_axi_wlast);
        p_60_m_axi_wlast->set_sv_netview_offsetfromdp(10128328);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(10128384);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_buser.bind(*p_60_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_buser);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(10128664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(10128720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_arlen.bind(*p_60_m_axi_arlen);
        p_60_m_axi_arlen->set_sv_netview_offsetfromdp(10128776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_arburst.bind(*p_60_m_axi_arburst);
        p_60_m_axi_arburst->set_sv_netview_offsetfromdp(10128832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_arlock.bind(*p_60_m_axi_arlock);
        p_60_m_axi_arlock->set_sv_netview_offsetfromdp(10128888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arcache.bind(*p_60_m_axi_arcache);
        p_60_m_axi_arcache->set_sv_netview_offsetfromdp(10128944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(10129000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arqos.bind(*p_60_m_axi_arqos);
        p_60_m_axi_arqos->set_sv_netview_offsetfromdp(10129056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_aruser.bind(*p_60_m_axi_aruser);
        p_60_m_axi_aruser->set_sv_netview_offsetfromdp(10129112);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(10129168);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rlast.bind(*p_60_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(10129504);
        sc_inst_61 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_61->xsim_set_dbg_index(601);
        xsim_sc_channel<0, bool > *p_61_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->aclk.bind(*p_61_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aclk);
        xsim_sc_channel<0, bool > *p_61_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->aresetn.bind(*p_61_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(10229480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(10229704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(10229760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(10229816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(10230096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(10230152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(10230208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(10230264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_61_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(10230376);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_61_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(10230432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(10230488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_61_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(10230600);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_61_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(10230656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(10230712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(10230936);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_61_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(10230992);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_61_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(10231048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(10231104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_61_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(10231384);
        sc_inst_62 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_62->xsim_set_dbg_index(193);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_62_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_62->interrupt_cu.bind(*p_62_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_62_interrupt_cu);
        xsim_sc_channel<0, bool > *p_62_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_62->interrupt_m2m.bind(*p_62_interrupt_m2m);
        p_62_interrupt_m2m->set_sv_netview_offsetfromdp(10233272);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aresetn.bind(*p_62_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aresetn.bind(*p_62_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aresetn.bind(*p_62_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aresetn.bind(*p_62_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aclk.bind(*p_62_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aclk.bind(*p_62_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aclk.bind(*p_62_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aclk.bind(*p_62_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_awaddr.bind(*p_62_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_awlen.bind(*p_62_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awsize.bind(*p_62_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_awburst.bind(*p_62_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awlock.bind(*p_62_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awcache.bind(*p_62_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awprot.bind(*p_62_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awregion.bind(*p_62_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awqos.bind(*p_62_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_awuser.bind(*p_62_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awvalid.bind(*p_62_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awready.bind(*p_62_s_axi_data_p2p_awready);
        p_62_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(10234392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_wdata.bind(*p_62_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_wstrb.bind(*p_62_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wlast.bind(*p_62_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wvalid.bind(*p_62_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wready.bind(*p_62_s_axi_data_p2p_wready);
        p_62_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(10234672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_bresp.bind(*p_62_s_axi_data_p2p_bresp);
        p_62_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(10234728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->s_axi_data_p2p_buser.bind(*p_62_s_axi_data_p2p_buser);
        p_62_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(10234784);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bvalid.bind(*p_62_s_axi_data_p2p_bvalid);
        p_62_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(10234840);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bready.bind(*p_62_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_araddr.bind(*p_62_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_arlen.bind(*p_62_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arsize.bind(*p_62_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_arburst.bind(*p_62_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arlock.bind(*p_62_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arcache.bind(*p_62_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arprot.bind(*p_62_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arregion.bind(*p_62_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arqos.bind(*p_62_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_aruser.bind(*p_62_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arvalid.bind(*p_62_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arready.bind(*p_62_s_axi_data_p2p_arready);
        p_62_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(10235568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_rdata.bind(*p_62_s_axi_data_p2p_rdata);
        p_62_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(10235624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_rresp.bind(*p_62_s_axi_data_p2p_rresp);
        p_62_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(10235680);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rlast.bind(*p_62_s_axi_data_p2p_rlast);
        p_62_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(10235736);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rvalid.bind(*p_62_s_axi_data_p2p_rvalid);
        p_62_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(10235792);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rready.bind(*p_62_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_awaddr.bind(*p_62_maxi_lite_mb_awaddr);
        p_62_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(10235904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_awprot.bind(*p_62_maxi_lite_mb_awprot);
        p_62_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(10235960);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awvalid.bind(*p_62_maxi_lite_mb_awvalid);
        p_62_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(10236016);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awready.bind(*p_62_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_wdata.bind(*p_62_maxi_lite_mb_wdata);
        p_62_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(10236128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->maxi_lite_mb_wstrb.bind(*p_62_maxi_lite_mb_wstrb);
        p_62_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(10236184);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wvalid.bind(*p_62_maxi_lite_mb_wvalid);
        p_62_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(10236240);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wready.bind(*p_62_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_bresp.bind(*p_62_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bvalid.bind(*p_62_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bready.bind(*p_62_maxi_lite_mb_bready);
        p_62_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(10236464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_araddr.bind(*p_62_maxi_lite_mb_araddr);
        p_62_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(10236520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_arprot.bind(*p_62_maxi_lite_mb_arprot);
        p_62_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(10236576);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arvalid.bind(*p_62_maxi_lite_mb_arvalid);
        p_62_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(10236632);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arready.bind(*p_62_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_rdata.bind(*p_62_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_rresp.bind(*p_62_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rvalid.bind(*p_62_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rready.bind(*p_62_maxi_lite_mb_rready);
        p_62_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(10236912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_awaddr.bind(*p_62_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_awprot.bind(*p_62_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awvalid.bind(*p_62_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awready.bind(*p_62_s_axi_ctrl_user_awready);
        p_62_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(10237136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_wdata.bind(*p_62_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_ctrl_user_wstrb.bind(*p_62_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wvalid.bind(*p_62_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wready.bind(*p_62_s_axi_ctrl_user_wready);
        p_62_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(10237360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_bresp.bind(*p_62_s_axi_ctrl_user_bresp);
        p_62_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(10237416);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bvalid.bind(*p_62_s_axi_ctrl_user_bvalid);
        p_62_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(10237472);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bready.bind(*p_62_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_araddr.bind(*p_62_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_arprot.bind(*p_62_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arvalid.bind(*p_62_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arready.bind(*p_62_s_axi_ctrl_user_arready);
        p_62_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(10237752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_rdata.bind(*p_62_s_axi_ctrl_user_rdata);
        p_62_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(10237808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_rresp.bind(*p_62_s_axi_ctrl_user_rresp);
        p_62_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(10237864);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rvalid.bind(*p_62_s_axi_ctrl_user_rvalid);
        p_62_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(10237920);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rready.bind(*p_62_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_rready);
        sc_inst_63 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_63->xsim_set_dbg_index(194);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aclk.bind(*p_63_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aresetn.bind(*p_63_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aclk.bind(*p_63_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aresetn.bind(*p_63_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWVALID.bind(*p_63_m_aximm_AWVALID);
        p_63_m_aximm_AWVALID->set_sv_netview_offsetfromdp(10238304);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWREADY.bind(*p_63_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_AWADDR.bind(*p_63_m_aximm_AWADDR);
        p_63_m_aximm_AWADDR->set_sv_netview_offsetfromdp(10238416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWID.bind(*p_63_m_aximm_AWID);
        p_63_m_aximm_AWID->set_sv_netview_offsetfromdp(10238472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_AWLEN.bind(*p_63_m_aximm_AWLEN);
        p_63_m_aximm_AWLEN->set_sv_netview_offsetfromdp(10238528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWSIZE.bind(*p_63_m_aximm_AWSIZE);
        p_63_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(10238584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_AWBURST.bind(*p_63_m_aximm_AWBURST);
        p_63_m_aximm_AWBURST->set_sv_netview_offsetfromdp(10238640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWLOCK.bind(*p_63_m_aximm_AWLOCK);
        p_63_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(10238696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWCACHE.bind(*p_63_m_aximm_AWCACHE);
        p_63_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(10238752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWPROT.bind(*p_63_m_aximm_AWPROT);
        p_63_m_aximm_AWPROT->set_sv_netview_offsetfromdp(10238808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWREGION.bind(*p_63_m_aximm_AWREGION);
        p_63_m_aximm_AWREGION->set_sv_netview_offsetfromdp(10238864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWQOS.bind(*p_63_m_aximm_AWQOS);
        p_63_m_aximm_AWQOS->set_sv_netview_offsetfromdp(10238920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWUSER.bind(*p_63_m_aximm_AWUSER);
        p_63_m_aximm_AWUSER->set_sv_netview_offsetfromdp(10238976);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WVALID.bind(*p_63_m_aximm_WVALID);
        p_63_m_aximm_WVALID->set_sv_netview_offsetfromdp(10239032);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WREADY.bind(*p_63_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_WDATA.bind(*p_63_m_aximm_WDATA);
        p_63_m_aximm_WDATA->set_sv_netview_offsetfromdp(10239144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_WSTRB.bind(*p_63_m_aximm_WSTRB);
        p_63_m_aximm_WSTRB->set_sv_netview_offsetfromdp(10239200);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WLAST.bind(*p_63_m_aximm_WLAST);
        p_63_m_aximm_WLAST->set_sv_netview_offsetfromdp(10239256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_WUSER.bind(*p_63_m_aximm_WUSER);
        p_63_m_aximm_WUSER->set_sv_netview_offsetfromdp(10239312);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARVALID.bind(*p_63_m_aximm_ARVALID);
        p_63_m_aximm_ARVALID->set_sv_netview_offsetfromdp(10239368);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARREADY.bind(*p_63_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_ARADDR.bind(*p_63_m_aximm_ARADDR);
        p_63_m_aximm_ARADDR->set_sv_netview_offsetfromdp(10239480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARID.bind(*p_63_m_aximm_ARID);
        p_63_m_aximm_ARID->set_sv_netview_offsetfromdp(10239536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_ARLEN.bind(*p_63_m_aximm_ARLEN);
        p_63_m_aximm_ARLEN->set_sv_netview_offsetfromdp(10239592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARSIZE.bind(*p_63_m_aximm_ARSIZE);
        p_63_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10239648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_ARBURST.bind(*p_63_m_aximm_ARBURST);
        p_63_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10239704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARLOCK.bind(*p_63_m_aximm_ARLOCK);
        p_63_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10239760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARCACHE.bind(*p_63_m_aximm_ARCACHE);
        p_63_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10239816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARPROT.bind(*p_63_m_aximm_ARPROT);
        p_63_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10239872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARREGION.bind(*p_63_m_aximm_ARREGION);
        p_63_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10239928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARQOS.bind(*p_63_m_aximm_ARQOS);
        p_63_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10239984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARUSER.bind(*p_63_m_aximm_ARUSER);
        p_63_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10240040);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RVALID.bind(*p_63_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RREADY.bind(*p_63_m_aximm_RREADY);
        p_63_m_aximm_RREADY->set_sv_netview_offsetfromdp(10240152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_RDATA.bind(*p_63_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RLAST.bind(*p_63_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RID.bind(*p_63_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_RRESP.bind(*p_63_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RUSER.bind(*p_63_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BVALID.bind(*p_63_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BREADY.bind(*p_63_m_aximm_BREADY);
        p_63_m_aximm_BREADY->set_sv_netview_offsetfromdp(10240544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_BRESP.bind(*p_63_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BID.bind(*p_63_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BUSER.bind(*p_63_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_awlen.bind(*p_63_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awsize.bind(*p_63_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_awburst.bind(*p_63_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awlock.bind(*p_63_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awcache.bind(*p_63_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awregion.bind(*p_63_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awqos.bind(*p_63_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awuser.bind(*p_63_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_63_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(10241384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_63_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wlast.bind(*p_63_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_63_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(10241664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(10241720);
        xsim_sc_channel<0, bool > *p_63_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(10241776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_buser.bind(*p_63_s_axi_buser);
        p_63_s_axi_buser->set_sv_netview_offsetfromdp(10241832);
        xsim_sc_channel<0, bool > *p_63_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_arlen.bind(*p_63_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arsize.bind(*p_63_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_arburst.bind(*p_63_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arlock.bind(*p_63_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arcache.bind(*p_63_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arregion.bind(*p_63_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arqos.bind(*p_63_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_aruser.bind(*p_63_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_63_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(10242560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(10242616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(10242672);
        xsim_sc_channel<0, bool > *p_63_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rlast.bind(*p_63_s_axi_rlast);
        p_63_s_axi_rlast->set_sv_netview_offsetfromdp(10242728);
        xsim_sc_channel<0, bool > *p_63_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(10242784);
        xsim_sc_channel<0, bool > *p_63_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        sc_inst_64 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_64->xsim_set_dbg_index(195);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aclk.bind(*p_64_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aresetn.bind(*p_64_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aclk.bind(*p_64_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aresetn.bind(*p_64_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aclk.bind(*p_64_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aresetn.bind(*p_64_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_awaddr.bind(*p_64_m_axictrl_awaddr);
        p_64_m_axictrl_awaddr->set_sv_netview_offsetfromdp(10243280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_awprot.bind(*p_64_m_axictrl_awprot);
        p_64_m_axictrl_awprot->set_sv_netview_offsetfromdp(10243336);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awvalid.bind(*p_64_m_axictrl_awvalid);
        p_64_m_axictrl_awvalid->set_sv_netview_offsetfromdp(10243392);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awready.bind(*p_64_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_wdata.bind(*p_64_m_axictrl_wdata);
        p_64_m_axictrl_wdata->set_sv_netview_offsetfromdp(10243504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_axictrl_wstrb.bind(*p_64_m_axictrl_wstrb);
        p_64_m_axictrl_wstrb->set_sv_netview_offsetfromdp(10243560);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wvalid.bind(*p_64_m_axictrl_wvalid);
        p_64_m_axictrl_wvalid->set_sv_netview_offsetfromdp(10243616);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wready.bind(*p_64_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bvalid.bind(*p_64_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bready.bind(*p_64_m_axictrl_bready);
        p_64_m_axictrl_bready->set_sv_netview_offsetfromdp(10243784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_bresp.bind(*p_64_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_araddr.bind(*p_64_m_axictrl_araddr);
        p_64_m_axictrl_araddr->set_sv_netview_offsetfromdp(10243896);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arvalid.bind(*p_64_m_axictrl_arvalid);
        p_64_m_axictrl_arvalid->set_sv_netview_offsetfromdp(10243952);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arready.bind(*p_64_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_arprot.bind(*p_64_m_axictrl_arprot);
        p_64_m_axictrl_arprot->set_sv_netview_offsetfromdp(10244064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_rdata.bind(*p_64_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_rresp.bind(*p_64_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rvalid.bind(*p_64_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rready.bind(*p_64_m_axictrl_rready);
        p_64_m_axictrl_rready->set_sv_netview_offsetfromdp(10244288);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWVALID.bind(*p_64_m_aximm_AWVALID);
        p_64_m_aximm_AWVALID->set_sv_netview_offsetfromdp(10244344);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWREADY.bind(*p_64_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_AWADDR.bind(*p_64_m_aximm_AWADDR);
        p_64_m_aximm_AWADDR->set_sv_netview_offsetfromdp(10244456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWID.bind(*p_64_m_aximm_AWID);
        p_64_m_aximm_AWID->set_sv_netview_offsetfromdp(10244512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_AWLEN.bind(*p_64_m_aximm_AWLEN);
        p_64_m_aximm_AWLEN->set_sv_netview_offsetfromdp(10244568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWSIZE.bind(*p_64_m_aximm_AWSIZE);
        p_64_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(10244624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_AWBURST.bind(*p_64_m_aximm_AWBURST);
        p_64_m_aximm_AWBURST->set_sv_netview_offsetfromdp(10244680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWLOCK.bind(*p_64_m_aximm_AWLOCK);
        p_64_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(10244736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWCACHE.bind(*p_64_m_aximm_AWCACHE);
        p_64_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(10244792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWPROT.bind(*p_64_m_aximm_AWPROT);
        p_64_m_aximm_AWPROT->set_sv_netview_offsetfromdp(10244848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWREGION.bind(*p_64_m_aximm_AWREGION);
        p_64_m_aximm_AWREGION->set_sv_netview_offsetfromdp(10244904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWQOS.bind(*p_64_m_aximm_AWQOS);
        p_64_m_aximm_AWQOS->set_sv_netview_offsetfromdp(10244960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_AWUSER.bind(*p_64_m_aximm_AWUSER);
        p_64_m_aximm_AWUSER->set_sv_netview_offsetfromdp(10245016);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WVALID.bind(*p_64_m_aximm_WVALID);
        p_64_m_aximm_WVALID->set_sv_netview_offsetfromdp(10245072);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WREADY.bind(*p_64_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WDATA.bind(*p_64_m_aximm_WDATA);
        p_64_m_aximm_WDATA->set_sv_netview_offsetfromdp(10245184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_WSTRB.bind(*p_64_m_aximm_WSTRB);
        p_64_m_aximm_WSTRB->set_sv_netview_offsetfromdp(10245240);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WLAST.bind(*p_64_m_aximm_WLAST);
        p_64_m_aximm_WLAST->set_sv_netview_offsetfromdp(10245296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WUSER.bind(*p_64_m_aximm_WUSER);
        p_64_m_aximm_WUSER->set_sv_netview_offsetfromdp(10245352);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARVALID.bind(*p_64_m_aximm_ARVALID);
        p_64_m_aximm_ARVALID->set_sv_netview_offsetfromdp(10245408);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARREADY.bind(*p_64_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_ARADDR.bind(*p_64_m_aximm_ARADDR);
        p_64_m_aximm_ARADDR->set_sv_netview_offsetfromdp(10245520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARID.bind(*p_64_m_aximm_ARID);
        p_64_m_aximm_ARID->set_sv_netview_offsetfromdp(10245576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_ARLEN.bind(*p_64_m_aximm_ARLEN);
        p_64_m_aximm_ARLEN->set_sv_netview_offsetfromdp(10245632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARSIZE.bind(*p_64_m_aximm_ARSIZE);
        p_64_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(10245688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_ARBURST.bind(*p_64_m_aximm_ARBURST);
        p_64_m_aximm_ARBURST->set_sv_netview_offsetfromdp(10245744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARLOCK.bind(*p_64_m_aximm_ARLOCK);
        p_64_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(10245800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARCACHE.bind(*p_64_m_aximm_ARCACHE);
        p_64_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(10245856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARPROT.bind(*p_64_m_aximm_ARPROT);
        p_64_m_aximm_ARPROT->set_sv_netview_offsetfromdp(10245912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARREGION.bind(*p_64_m_aximm_ARREGION);
        p_64_m_aximm_ARREGION->set_sv_netview_offsetfromdp(10245968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARQOS.bind(*p_64_m_aximm_ARQOS);
        p_64_m_aximm_ARQOS->set_sv_netview_offsetfromdp(10246024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_ARUSER.bind(*p_64_m_aximm_ARUSER);
        p_64_m_aximm_ARUSER->set_sv_netview_offsetfromdp(10246080);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RVALID.bind(*p_64_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RREADY.bind(*p_64_m_aximm_RREADY);
        p_64_m_aximm_RREADY->set_sv_netview_offsetfromdp(10246192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RDATA.bind(*p_64_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RLAST.bind(*p_64_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_RID.bind(*p_64_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_RRESP.bind(*p_64_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RUSER.bind(*p_64_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BVALID.bind(*p_64_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BREADY.bind(*p_64_m_aximm_BREADY);
        p_64_m_aximm_BREADY->set_sv_netview_offsetfromdp(10246584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_BRESP.bind(*p_64_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BID.bind(*p_64_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BUSER.bind(*p_64_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_awaddr.bind(*p_64_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_awlen.bind(*p_64_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awsize.bind(*p_64_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_awburst.bind(*p_64_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_awlock.bind(*p_64_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awcache.bind(*p_64_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awprot.bind(*p_64_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awregion.bind(*p_64_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awqos.bind(*p_64_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awvalid.bind(*p_64_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awready.bind(*p_64_s_axi_awready);
        p_64_s_axi_awready->set_sv_netview_offsetfromdp(10247368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_wdata.bind(*p_64_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_wstrb.bind(*p_64_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_64_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wlast.bind(*p_64_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_64_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wvalid.bind(*p_64_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wready.bind(*p_64_s_axi_wready);
        p_64_s_axi_wready->set_sv_netview_offsetfromdp(10247648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_bresp.bind(*p_64_s_axi_bresp);
        p_64_s_axi_bresp->set_sv_netview_offsetfromdp(10247704);
        xsim_sc_channel<0, bool > *p_64_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bvalid.bind(*p_64_s_axi_bvalid);
        p_64_s_axi_bvalid->set_sv_netview_offsetfromdp(10247760);
        xsim_sc_channel<0, bool > *p_64_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bready.bind(*p_64_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_araddr.bind(*p_64_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_arlen.bind(*p_64_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arsize.bind(*p_64_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_arburst.bind(*p_64_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_arlock.bind(*p_64_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arcache.bind(*p_64_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arprot.bind(*p_64_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arregion.bind(*p_64_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arqos.bind(*p_64_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arvalid.bind(*p_64_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arready.bind(*p_64_s_axi_arready);
        p_64_s_axi_arready->set_sv_netview_offsetfromdp(10248432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_rdata.bind(*p_64_s_axi_rdata);
        p_64_s_axi_rdata->set_sv_netview_offsetfromdp(10248488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_rresp.bind(*p_64_s_axi_rresp);
        p_64_s_axi_rresp->set_sv_netview_offsetfromdp(10248544);
        xsim_sc_channel<0, bool > *p_64_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rlast.bind(*p_64_s_axi_rlast);
        p_64_s_axi_rlast->set_sv_netview_offsetfromdp(10248600);
        xsim_sc_channel<0, bool > *p_64_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rvalid.bind(*p_64_s_axi_rvalid);
        p_64_s_axi_rvalid->set_sv_netview_offsetfromdp(10248656);
        xsim_sc_channel<0, bool > *p_64_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rready.bind(*p_64_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_req.bind(*p_64_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_64_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_ack.bind(*p_64_usr_irq_ack);
        p_64_usr_irq_ack->set_sv_netview_offsetfromdp(10248824);
        sc_inst_65 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_65->xsim_set_dbg_index(196);
        xsim_sc_channel<0, bool > *p_65_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_65->aclk.bind(*p_65_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aclk);
        xsim_sc_channel<0, bool > *p_65_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_65->aresetn.bind(*p_65_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awid.bind(*p_65_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_awaddr.bind(*p_65_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_awlen.bind(*p_65_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awsize.bind(*p_65_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_awburst.bind(*p_65_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awlock.bind(*p_65_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awcache.bind(*p_65_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awprot.bind(*p_65_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awqos.bind(*p_65_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_awuser.bind(*p_65_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awvalid.bind(*p_65_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awready.bind(*p_65_S00_AXI_awready);
        p_65_S00_AXI_awready->set_sv_netview_offsetfromdp(10249656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wdata.bind(*p_65_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_wstrb.bind(*p_65_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wlast.bind(*p_65_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wuser.bind(*p_65_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wvalid.bind(*p_65_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wready.bind(*p_65_S00_AXI_wready);
        p_65_S00_AXI_wready->set_sv_netview_offsetfromdp(10249992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_bid.bind(*p_65_S00_AXI_bid);
        p_65_S00_AXI_bid->set_sv_netview_offsetfromdp(10250048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_bresp.bind(*p_65_S00_AXI_bresp);
        p_65_S00_AXI_bresp->set_sv_netview_offsetfromdp(10250104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_buser.bind(*p_65_S00_AXI_buser);
        p_65_S00_AXI_buser->set_sv_netview_offsetfromdp(10250160);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bvalid.bind(*p_65_S00_AXI_bvalid);
        p_65_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10250216);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bready.bind(*p_65_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arid.bind(*p_65_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_araddr.bind(*p_65_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_arlen.bind(*p_65_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arsize.bind(*p_65_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_arburst.bind(*p_65_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arlock.bind(*p_65_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arcache.bind(*p_65_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arprot.bind(*p_65_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arqos.bind(*p_65_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_aruser.bind(*p_65_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arvalid.bind(*p_65_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arready.bind(*p_65_S00_AXI_arready);
        p_65_S00_AXI_arready->set_sv_netview_offsetfromdp(10250944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_rid.bind(*p_65_S00_AXI_rid);
        p_65_S00_AXI_rid->set_sv_netview_offsetfromdp(10251000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_rdata.bind(*p_65_S00_AXI_rdata);
        p_65_S00_AXI_rdata->set_sv_netview_offsetfromdp(10251056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_rresp.bind(*p_65_S00_AXI_rresp);
        p_65_S00_AXI_rresp->set_sv_netview_offsetfromdp(10251112);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rlast.bind(*p_65_S00_AXI_rlast);
        p_65_S00_AXI_rlast->set_sv_netview_offsetfromdp(10251168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_ruser.bind(*p_65_S00_AXI_ruser);
        p_65_S00_AXI_ruser->set_sv_netview_offsetfromdp(10251224);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rvalid.bind(*p_65_S00_AXI_rvalid);
        p_65_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10251280);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rready.bind(*p_65_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awaddr.bind(*p_65_M00_AXI_awaddr);
        p_65_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10251392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_awlen.bind(*p_65_M00_AXI_awlen);
        p_65_M00_AXI_awlen->set_sv_netview_offsetfromdp(10251448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awsize.bind(*p_65_M00_AXI_awsize);
        p_65_M00_AXI_awsize->set_sv_netview_offsetfromdp(10251504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_awburst.bind(*p_65_M00_AXI_awburst);
        p_65_M00_AXI_awburst->set_sv_netview_offsetfromdp(10251560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_awlock.bind(*p_65_M00_AXI_awlock);
        p_65_M00_AXI_awlock->set_sv_netview_offsetfromdp(10251616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awcache.bind(*p_65_M00_AXI_awcache);
        p_65_M00_AXI_awcache->set_sv_netview_offsetfromdp(10251672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awprot.bind(*p_65_M00_AXI_awprot);
        p_65_M00_AXI_awprot->set_sv_netview_offsetfromdp(10251728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awqos.bind(*p_65_M00_AXI_awqos);
        p_65_M00_AXI_awqos->set_sv_netview_offsetfromdp(10251784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awuser.bind(*p_65_M00_AXI_awuser);
        p_65_M00_AXI_awuser->set_sv_netview_offsetfromdp(10251840);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awvalid.bind(*p_65_M00_AXI_awvalid);
        p_65_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10251896);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awready.bind(*p_65_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_wdata.bind(*p_65_M00_AXI_wdata);
        p_65_M00_AXI_wdata->set_sv_netview_offsetfromdp(10252008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_wstrb.bind(*p_65_M00_AXI_wstrb);
        p_65_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10252064);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wlast.bind(*p_65_M00_AXI_wlast);
        p_65_M00_AXI_wlast->set_sv_netview_offsetfromdp(10252120);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wvalid.bind(*p_65_M00_AXI_wvalid);
        p_65_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10252176);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wready.bind(*p_65_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_bresp.bind(*p_65_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_buser.bind(*p_65_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bvalid.bind(*p_65_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bready.bind(*p_65_M00_AXI_bready);
        p_65_M00_AXI_bready->set_sv_netview_offsetfromdp(10252456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_araddr.bind(*p_65_M00_AXI_araddr);
        p_65_M00_AXI_araddr->set_sv_netview_offsetfromdp(10252512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_arlen.bind(*p_65_M00_AXI_arlen);
        p_65_M00_AXI_arlen->set_sv_netview_offsetfromdp(10252568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arsize.bind(*p_65_M00_AXI_arsize);
        p_65_M00_AXI_arsize->set_sv_netview_offsetfromdp(10252624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_arburst.bind(*p_65_M00_AXI_arburst);
        p_65_M00_AXI_arburst->set_sv_netview_offsetfromdp(10252680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_arlock.bind(*p_65_M00_AXI_arlock);
        p_65_M00_AXI_arlock->set_sv_netview_offsetfromdp(10252736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arcache.bind(*p_65_M00_AXI_arcache);
        p_65_M00_AXI_arcache->set_sv_netview_offsetfromdp(10252792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arprot.bind(*p_65_M00_AXI_arprot);
        p_65_M00_AXI_arprot->set_sv_netview_offsetfromdp(10252848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arqos.bind(*p_65_M00_AXI_arqos);
        p_65_M00_AXI_arqos->set_sv_netview_offsetfromdp(10252904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_aruser.bind(*p_65_M00_AXI_aruser);
        p_65_M00_AXI_aruser->set_sv_netview_offsetfromdp(10252960);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arvalid.bind(*p_65_M00_AXI_arvalid);
        p_65_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10253016);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arready.bind(*p_65_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_rdata.bind(*p_65_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_rresp.bind(*p_65_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rlast.bind(*p_65_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rvalid.bind(*p_65_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rready.bind(*p_65_M00_AXI_rready);
        p_65_M00_AXI_rready->set_sv_netview_offsetfromdp(10253352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_awaddr.bind(*p_65_M01_AXI_awaddr);
        p_65_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10253408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_awlen.bind(*p_65_M01_AXI_awlen);
        p_65_M01_AXI_awlen->set_sv_netview_offsetfromdp(10253464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awsize.bind(*p_65_M01_AXI_awsize);
        p_65_M01_AXI_awsize->set_sv_netview_offsetfromdp(10253520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_awburst.bind(*p_65_M01_AXI_awburst);
        p_65_M01_AXI_awburst->set_sv_netview_offsetfromdp(10253576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_awlock.bind(*p_65_M01_AXI_awlock);
        p_65_M01_AXI_awlock->set_sv_netview_offsetfromdp(10253632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awcache.bind(*p_65_M01_AXI_awcache);
        p_65_M01_AXI_awcache->set_sv_netview_offsetfromdp(10253688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awprot.bind(*p_65_M01_AXI_awprot);
        p_65_M01_AXI_awprot->set_sv_netview_offsetfromdp(10253744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awqos.bind(*p_65_M01_AXI_awqos);
        p_65_M01_AXI_awqos->set_sv_netview_offsetfromdp(10253800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_awuser.bind(*p_65_M01_AXI_awuser);
        p_65_M01_AXI_awuser->set_sv_netview_offsetfromdp(10253856);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awvalid.bind(*p_65_M01_AXI_awvalid);
        p_65_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10253912);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awready.bind(*p_65_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_wdata.bind(*p_65_M01_AXI_wdata);
        p_65_M01_AXI_wdata->set_sv_netview_offsetfromdp(10254024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_wstrb.bind(*p_65_M01_AXI_wstrb);
        p_65_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10254080);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wlast.bind(*p_65_M01_AXI_wlast);
        p_65_M01_AXI_wlast->set_sv_netview_offsetfromdp(10254136);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wvalid.bind(*p_65_M01_AXI_wvalid);
        p_65_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10254192);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wready.bind(*p_65_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_bresp.bind(*p_65_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_buser.bind(*p_65_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bvalid.bind(*p_65_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bready.bind(*p_65_M01_AXI_bready);
        p_65_M01_AXI_bready->set_sv_netview_offsetfromdp(10254472);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_araddr.bind(*p_65_M01_AXI_araddr);
        p_65_M01_AXI_araddr->set_sv_netview_offsetfromdp(10254528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_arlen.bind(*p_65_M01_AXI_arlen);
        p_65_M01_AXI_arlen->set_sv_netview_offsetfromdp(10254584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arsize.bind(*p_65_M01_AXI_arsize);
        p_65_M01_AXI_arsize->set_sv_netview_offsetfromdp(10254640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_arburst.bind(*p_65_M01_AXI_arburst);
        p_65_M01_AXI_arburst->set_sv_netview_offsetfromdp(10254696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_arlock.bind(*p_65_M01_AXI_arlock);
        p_65_M01_AXI_arlock->set_sv_netview_offsetfromdp(10254752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arcache.bind(*p_65_M01_AXI_arcache);
        p_65_M01_AXI_arcache->set_sv_netview_offsetfromdp(10254808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arprot.bind(*p_65_M01_AXI_arprot);
        p_65_M01_AXI_arprot->set_sv_netview_offsetfromdp(10254864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arqos.bind(*p_65_M01_AXI_arqos);
        p_65_M01_AXI_arqos->set_sv_netview_offsetfromdp(10254920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_aruser.bind(*p_65_M01_AXI_aruser);
        p_65_M01_AXI_aruser->set_sv_netview_offsetfromdp(10254976);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arvalid.bind(*p_65_M01_AXI_arvalid);
        p_65_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10255032);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arready.bind(*p_65_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_rdata.bind(*p_65_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_rresp.bind(*p_65_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rlast.bind(*p_65_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rvalid.bind(*p_65_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rready.bind(*p_65_M01_AXI_rready);
        p_65_M01_AXI_rready->set_sv_netview_offsetfromdp(10255368);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
    }
