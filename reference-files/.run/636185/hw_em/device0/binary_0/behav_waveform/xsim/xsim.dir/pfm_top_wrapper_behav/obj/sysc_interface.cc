#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1657);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(5711504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(5711728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(5711784);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(5711840);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(5712120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(5712176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(5712232);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(5712288);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(5712512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(5712568);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(5712624);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(5712736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(5712792);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(5712848);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(5713072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(5713128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(5713184);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(5713240);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(5713520);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1658);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(5713904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(5714128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(5714184);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(5714240);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(5714520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(5714576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(5714632);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(5714688);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(5714800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(5714856);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(5714912);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(5715024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(5715080);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(5715136);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(5715360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(5715416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(5715472);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(5715528);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(5715808);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1699);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(5751680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(5751904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(5751960);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(5752016);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(5752296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(5752352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(5752408);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(5752464);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(5752688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(5752744);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(5752800);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(5752912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(5752968);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(5753024);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(5753248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(5753304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(5753360);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(5753416);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(5753696);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1700);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(5754080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(5754304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(5754360);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(5754416);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(5754696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(5754752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(5754808);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(5754864);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(5754976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(5755032);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(5755088);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(5755200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(5755256);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(5755312);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(5755536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(5755592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(5755648);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(5755704);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(5755984);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1741);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(5793008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(5793232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(5793288);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(5793344);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(5793624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(5793680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(5793736);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(5793792);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(5794016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(5794072);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(5794128);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(5794240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(5794296);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(5794352);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(5794576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(5794632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(5794688);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(5794744);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(5795024);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1742);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(5795408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(5795632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(5795688);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(5795744);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(5796024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(5796080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(5796136);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(5796192);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(5796304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(5796360);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(5796416);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(5796528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(5796584);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(5796640);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(5796864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(5796920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(5796976);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(5797032);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(5797312);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1785);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(5833184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(5833408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(5833464);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(5833520);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(5833800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(5833856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(5833912);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(5833968);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(5834192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(5834248);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(5834304);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(5834416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(5834472);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(5834528);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(5834752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(5834808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(5834864);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(5834920);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(5835200);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(1786);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(5835584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(5835808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(5835864);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(5835920);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(5836200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(5836256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(5836312);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(5836368);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(5836480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(5836536);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(5836592);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(5836704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(5836760);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(5836816);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(5837040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(5837096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(5837152);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(5837208);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(5837488);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(1827);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(5873360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(5873584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(5873640);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(5873696);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(5873976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(5874032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(5874088);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(5874144);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(5874368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(5874424);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(5874480);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(5874592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(5874648);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(5874704);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(5874928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(5874984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(5875040);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(5875096);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(5875376);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(1828);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(5875760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(5875984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(5876040);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(5876096);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(5876376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(5876432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(5876488);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(5876544);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(5876656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(5876712);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(5876768);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(5876880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(5876936);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(5876992);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(5877216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(5877272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(5877328);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(5877384);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(5877664);
        sc_inst_11 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_11->xsim_set_dbg_index(1869);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(5901304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(5901528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(5901584);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(5901640);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(5901920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(5901976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(5902032);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(5902088);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(5902200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(5902256);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(5902312);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(5902424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(5902480);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(5902536);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(5902760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(5902816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(5902872);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(5902928);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(5903208);
        sc_inst_12 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_12->xsim_set_dbg_index(637);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(5903592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(5903816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(5903872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(5903928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(5904208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(5904264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(5904320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(5904376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(5904488);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(5904544);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(5904600);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(5904712);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_12_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(5904768);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(5904824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(5905048);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(5905104);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(5905160);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(5905216);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(5905496);
        sc_inst_13 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_13->xsim_set_dbg_index(311);
        xsim_sc_channel<0, bool > *p_13_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_clk.bind(*p_13_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_13_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_aresetn.bind(*p_13_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_aresetn.bind(*p_13_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_aresetn);
        xsim_sc_channel<0, bool > *p_13_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_clk.bind(*p_13_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_clk);
        xsim_sc_channel<0, bool > *p_13_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_aresetn.bind(*p_13_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready0.bind(*p_13_trace_tready0);
        p_13_trace_tready0->set_sv_netview_offsetfromdp(5905936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata0.bind(*p_13_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata0);
        xsim_sc_channel<0, bool > *p_13_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast0.bind(*p_13_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid0.bind(*p_13_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest0.bind(*p_13_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest0);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid0.bind(*p_13_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_13_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready1.bind(*p_13_trace_tready1);
        p_13_trace_tready1->set_sv_netview_offsetfromdp(5906272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata1.bind(*p_13_trace_tdata1);
        p_13_trace_tdata1->set_sv_netview_offsetfromdp(5906328);
        xsim_sc_channel<0, bool > *p_13_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast1.bind(*p_13_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid1.bind(*p_13_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest1.bind(*p_13_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest1);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid1.bind(*p_13_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata2.bind(*p_13_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata2);
        xsim_sc_channel<0, bool > *p_13_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready2.bind(*p_13_trace_tready2);
        p_13_trace_tready2->set_sv_netview_offsetfromdp(5906664);
        xsim_sc_channel<0, bool > *p_13_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast2.bind(*p_13_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid2.bind(*p_13_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest2.bind(*p_13_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest2);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid2.bind(*p_13_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata3.bind(*p_13_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata3);
        xsim_sc_channel<0, bool > *p_13_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready3.bind(*p_13_trace_tready3);
        p_13_trace_tready3->set_sv_netview_offsetfromdp(5907000);
        xsim_sc_channel<0, bool > *p_13_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast3.bind(*p_13_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid3.bind(*p_13_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest3.bind(*p_13_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest3);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid3.bind(*p_13_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata4.bind(*p_13_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata4);
        xsim_sc_channel<0, bool > *p_13_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready4.bind(*p_13_trace_tready4);
        p_13_trace_tready4->set_sv_netview_offsetfromdp(5907336);
        xsim_sc_channel<0, bool > *p_13_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast4.bind(*p_13_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid4.bind(*p_13_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest4.bind(*p_13_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest4);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid4.bind(*p_13_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(5907728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(5907952);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(5908008);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(5908120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(5908288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(5908344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(5908400);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(5908456);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_awaddr.bind(*p_13_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awvalid.bind(*p_13_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awready.bind(*p_13_s_axihub_awready);
        p_13_s_axihub_awready->set_sv_netview_offsetfromdp(5908680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_wdata.bind(*p_13_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axihub_wstrb.bind(*p_13_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wvalid.bind(*p_13_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wready.bind(*p_13_s_axihub_wready);
        p_13_s_axihub_wready->set_sv_netview_offsetfromdp(5908904);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bvalid.bind(*p_13_s_axihub_bvalid);
        p_13_s_axihub_bvalid->set_sv_netview_offsetfromdp(5908960);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bready.bind(*p_13_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_bresp.bind(*p_13_s_axihub_bresp);
        p_13_s_axihub_bresp->set_sv_netview_offsetfromdp(5909072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_araddr.bind(*p_13_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arvalid.bind(*p_13_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arready.bind(*p_13_s_axihub_arready);
        p_13_s_axihub_arready->set_sv_netview_offsetfromdp(5909240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_rdata.bind(*p_13_s_axihub_rdata);
        p_13_s_axihub_rdata->set_sv_netview_offsetfromdp(5909296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_rresp.bind(*p_13_s_axihub_rresp);
        p_13_s_axihub_rresp->set_sv_netview_offsetfromdp(5909352);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rvalid.bind(*p_13_s_axihub_rvalid);
        p_13_s_axihub_rvalid->set_sv_netview_offsetfromdp(5909408);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rready.bind(*p_13_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_awaddr.bind(*p_13_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awvalid.bind(*p_13_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awready.bind(*p_13_s_aximm_awready);
        p_13_s_aximm_awready->set_sv_netview_offsetfromdp(5909632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_awlen.bind(*p_13_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_awsize.bind(*p_13_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_awburst.bind(*p_13_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_awid.bind(*p_13_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_wdata.bind(*p_13_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_wstrb.bind(*p_13_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wvalid.bind(*p_13_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wready.bind(*p_13_s_aximm_wready);
        p_13_s_aximm_wready->set_sv_netview_offsetfromdp(5910080);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bvalid.bind(*p_13_s_aximm_bvalid);
        p_13_s_aximm_bvalid->set_sv_netview_offsetfromdp(5910136);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bready.bind(*p_13_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wlast.bind(*p_13_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rlast.bind(*p_13_s_aximm_rlast);
        p_13_s_aximm_rlast->set_sv_netview_offsetfromdp(5910304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_bresp.bind(*p_13_s_aximm_bresp);
        p_13_s_aximm_bresp->set_sv_netview_offsetfromdp(5910360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_bid.bind(*p_13_s_aximm_bid);
        p_13_s_aximm_bid->set_sv_netview_offsetfromdp(5910416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_araddr.bind(*p_13_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arvalid.bind(*p_13_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arready.bind(*p_13_s_aximm_arready);
        p_13_s_aximm_arready->set_sv_netview_offsetfromdp(5910584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_arlen.bind(*p_13_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_arsize.bind(*p_13_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_arburst.bind(*p_13_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_arid.bind(*p_13_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_rdata.bind(*p_13_s_aximm_rdata);
        p_13_s_aximm_rdata->set_sv_netview_offsetfromdp(5910864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_rid.bind(*p_13_s_aximm_rid);
        p_13_s_aximm_rid->set_sv_netview_offsetfromdp(5910920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_rresp.bind(*p_13_s_aximm_rresp);
        p_13_s_aximm_rresp->set_sv_netview_offsetfromdp(5910976);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rvalid.bind(*p_13_s_aximm_rvalid);
        p_13_s_aximm_rvalid->set_sv_netview_offsetfromdp(5911032);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rready.bind(*p_13_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_rready);
        sc_inst_14 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_14->xsim_set_dbg_index(312);
        xsim_sc_channel<0, bool > *p_14_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_clk.bind(*p_14_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_clk);
        xsim_sc_channel<0, bool > *p_14_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_resetn.bind(*p_14_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_resetn);
        xsim_sc_channel<0, bool > *p_14_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_clk.bind(*p_14_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_clk);
        xsim_sc_channel<0, bool > *p_14_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_rst.bind(*p_14_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(5911584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(5911808);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(5911864);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(5911976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(5912200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(5912256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(5912312);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(5912368);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<0, bool > *p_14_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWVALID.bind(*p_14_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_14_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWREADY.bind(*p_14_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_AWADDR.bind(*p_14_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_14_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WVALID.bind(*p_14_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WVALID);
        xsim_sc_channel<0, bool > *p_14_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WREADY.bind(*p_14_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_WDATA.bind(*p_14_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->mon_WSTRB.bind(*p_14_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_14_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARVALID.bind(*p_14_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_14_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARREADY.bind(*p_14_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_ARADDR.bind(*p_14_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_14_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RVALID.bind(*p_14_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RVALID);
        xsim_sc_channel<0, bool > *p_14_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RREADY.bind(*p_14_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_RDATA.bind(*p_14_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_RRESP.bind(*p_14_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RRESP);
        xsim_sc_channel<0, bool > *p_14_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BVALID.bind(*p_14_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BVALID);
        xsim_sc_channel<0, bool > *p_14_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BREADY.bind(*p_14_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_BRESP.bind(*p_14_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axis_tready.bind(*p_14_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_tdata.bind(*p_14_m_axis_tdata);
        p_14_m_axis_tdata->set_sv_netview_offsetfromdp(5913488);
        xsim_sc_channel<0, bool > *p_14_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tlast.bind(*p_14_m_axis_tlast);
        p_14_m_axis_tlast->set_sv_netview_offsetfromdp(5913544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tid.bind(*p_14_m_axis_tid);
        p_14_m_axis_tid->set_sv_netview_offsetfromdp(5913600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tdest.bind(*p_14_m_axis_tdest);
        p_14_m_axis_tdest->set_sv_netview_offsetfromdp(5913656);
        xsim_sc_channel<0, bool > *p_14_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tvalid.bind(*p_14_m_axis_tvalid);
        p_14_m_axis_tvalid->set_sv_netview_offsetfromdp(5913712);
        xsim_sc_channel<0, bool > *p_14_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_continue.bind(*p_14_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_continue);
        xsim_sc_channel<0, bool > *p_14_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_ready.bind(*p_14_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_ready);
        xsim_sc_channel<0, bool > *p_14_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_start.bind(*p_14_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_start);
        xsim_sc_channel<0, bool > *p_14_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_idle.bind(*p_14_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_idle);
        xsim_sc_channel<0, bool > *p_14_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_done.bind(*p_14_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_done);
        sc_inst_15 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_15->xsim_set_dbg_index(313);
        xsim_sc_channel<0, bool > *p_15_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_clk.bind(*p_15_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_clk);
        xsim_sc_channel<0, bool > *p_15_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_resetn.bind(*p_15_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_resetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_rst.bind(*p_15_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(5914432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(5914656);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(5914712);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(5914824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(5914992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(5915048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(5915104);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(5915160);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWVALID.bind(*p_15_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_15_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWREADY.bind(*p_15_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_AWADDR.bind(*p_15_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_AWID.bind(*p_15_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_AWLEN.bind(*p_15_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_AWSIZE.bind(*p_15_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_AWBURST.bind(*p_15_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_15_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WVALID.bind(*p_15_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WVALID);
        xsim_sc_channel<0, bool > *p_15_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WREADY.bind(*p_15_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->mon_WDATA.bind(*p_15_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->mon_WSTRB.bind(*p_15_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_15_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WLAST.bind(*p_15_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WLAST);
        xsim_sc_channel<0, bool > *p_15_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARVALID.bind(*p_15_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_15_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARREADY.bind(*p_15_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_ARADDR.bind(*p_15_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_ARID.bind(*p_15_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_ARLEN.bind(*p_15_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_ARSIZE.bind(*p_15_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_ARBURST.bind(*p_15_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_15_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RVALID.bind(*p_15_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RVALID);
        xsim_sc_channel<0, bool > *p_15_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RREADY.bind(*p_15_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->mon_RDATA.bind(*p_15_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RDATA);
        xsim_sc_channel<0, bool > *p_15_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RLAST.bind(*p_15_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_RID.bind(*p_15_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_RRESP.bind(*p_15_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RRESP);
        xsim_sc_channel<0, bool > *p_15_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BVALID.bind(*p_15_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BVALID);
        xsim_sc_channel<0, bool > *p_15_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BREADY.bind(*p_15_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_BRESP.bind(*p_15_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_BID.bind(*p_15_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BID);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tready.bind(*p_15_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_rd_tdata.bind(*p_15_m_axis_rd_tdata);
        p_15_m_axis_rd_tdata->set_sv_netview_offsetfromdp(5916952);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tlast.bind(*p_15_m_axis_rd_tlast);
        p_15_m_axis_rd_tlast->set_sv_netview_offsetfromdp(5917008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tid.bind(*p_15_m_axis_rd_tid);
        p_15_m_axis_rd_tid->set_sv_netview_offsetfromdp(5917064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tdest.bind(*p_15_m_axis_rd_tdest);
        p_15_m_axis_rd_tdest->set_sv_netview_offsetfromdp(5917120);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tready.bind(*p_15_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_wr_tdata.bind(*p_15_m_axis_wr_tdata);
        p_15_m_axis_wr_tdata->set_sv_netview_offsetfromdp(5917232);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tlast.bind(*p_15_m_axis_wr_tlast);
        p_15_m_axis_wr_tlast->set_sv_netview_offsetfromdp(5917288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tid.bind(*p_15_m_axis_wr_tid);
        p_15_m_axis_wr_tid->set_sv_netview_offsetfromdp(5917344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tdest.bind(*p_15_m_axis_wr_tdest);
        p_15_m_axis_wr_tdest->set_sv_netview_offsetfromdp(5917400);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tvalid.bind(*p_15_m_axis_wr_tvalid);
        p_15_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(5917456);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tvalid.bind(*p_15_m_axis_rd_tvalid);
        p_15_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(5917512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr_mon.bind(*p_15_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot_mon.bind(*p_15_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid_mon.bind(*p_15_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready_mon.bind(*p_15_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata_mon.bind(*p_15_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb_mon.bind(*p_15_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid_mon.bind(*p_15_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready_mon.bind(*p_15_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp_mon.bind(*p_15_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid_mon.bind(*p_15_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready_mon.bind(*p_15_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr_mon.bind(*p_15_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot_mon.bind(*p_15_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid_mon.bind(*p_15_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready_mon.bind(*p_15_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata_mon.bind(*p_15_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp_mon.bind(*p_15_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid_mon.bind(*p_15_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready_mon.bind(*p_15_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready_mon);
        sc_inst_16 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_16->xsim_set_dbg_index(314);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(5919016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(5919240);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(5919296);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(5919408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(5919576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(5919632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(5919688);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(5919744);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_AWID.bind(*p_16_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_AWLEN.bind(*p_16_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_AWSIZE.bind(*p_16_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_AWBURST.bind(*p_16_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WLAST.bind(*p_16_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WLAST);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_ARID.bind(*p_16_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_ARLEN.bind(*p_16_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_ARSIZE.bind(*p_16_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_ARBURST.bind(*p_16_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<0, bool > *p_16_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RLAST.bind(*p_16_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_RID.bind(*p_16_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_BID.bind(*p_16_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BID);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tready.bind(*p_16_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_rd_tdata.bind(*p_16_m_axis_rd_tdata);
        p_16_m_axis_rd_tdata->set_sv_netview_offsetfromdp(5921536);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tlast.bind(*p_16_m_axis_rd_tlast);
        p_16_m_axis_rd_tlast->set_sv_netview_offsetfromdp(5921592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tid.bind(*p_16_m_axis_rd_tid);
        p_16_m_axis_rd_tid->set_sv_netview_offsetfromdp(5921648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tdest.bind(*p_16_m_axis_rd_tdest);
        p_16_m_axis_rd_tdest->set_sv_netview_offsetfromdp(5921704);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tready.bind(*p_16_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_wr_tdata.bind(*p_16_m_axis_wr_tdata);
        p_16_m_axis_wr_tdata->set_sv_netview_offsetfromdp(5921816);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tlast.bind(*p_16_m_axis_wr_tlast);
        p_16_m_axis_wr_tlast->set_sv_netview_offsetfromdp(5921872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tid.bind(*p_16_m_axis_wr_tid);
        p_16_m_axis_wr_tid->set_sv_netview_offsetfromdp(5921928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tdest.bind(*p_16_m_axis_wr_tdest);
        p_16_m_axis_wr_tdest->set_sv_netview_offsetfromdp(5921984);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tvalid.bind(*p_16_m_axis_wr_tvalid);
        p_16_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(5922040);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tvalid.bind(*p_16_m_axis_rd_tvalid);
        p_16_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(5922096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr_mon.bind(*p_16_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot_mon.bind(*p_16_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid_mon.bind(*p_16_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready_mon.bind(*p_16_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata_mon.bind(*p_16_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb_mon.bind(*p_16_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid_mon.bind(*p_16_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready_mon.bind(*p_16_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp_mon.bind(*p_16_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid_mon.bind(*p_16_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready_mon.bind(*p_16_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr_mon.bind(*p_16_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot_mon.bind(*p_16_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid_mon.bind(*p_16_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready_mon.bind(*p_16_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata_mon.bind(*p_16_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp_mon.bind(*p_16_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid_mon.bind(*p_16_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready_mon.bind(*p_16_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready_mon);
        sc_inst_17 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_17->xsim_set_dbg_index(771);
        sc_inst_18 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_18->xsim_set_dbg_index(772);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_0.bind(*p_18_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ACLK.bind(*p_18_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARESET_N.bind(*p_18_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_ARADDR.bind(*p_18_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_ARBURST.bind(*p_18_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_ARID.bind(*p_18_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_ARLEN.bind(*p_18_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_ARSIZE.bind(*p_18_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARVALID.bind(*p_18_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_AWADDR.bind(*p_18_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_AWBURST.bind(*p_18_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_AWID.bind(*p_18_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_AWLEN.bind(*p_18_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_AWSIZE.bind(*p_18_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWVALID.bind(*p_18_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RREADY.bind(*p_18_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BREADY.bind(*p_18_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_WDATA.bind(*p_18_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WLAST.bind(*p_18_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WSTRB.bind(*p_18_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WDATA_PARITY.bind(*p_18_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WVALID.bind(*p_18_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ACLK.bind(*p_18_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARESET_N.bind(*p_18_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_ARADDR.bind(*p_18_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_ARBURST.bind(*p_18_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_ARID.bind(*p_18_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_ARLEN.bind(*p_18_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_ARSIZE.bind(*p_18_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARVALID.bind(*p_18_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_AWADDR.bind(*p_18_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_AWBURST.bind(*p_18_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_AWID.bind(*p_18_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_AWLEN.bind(*p_18_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_AWSIZE.bind(*p_18_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWVALID.bind(*p_18_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RREADY.bind(*p_18_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BREADY.bind(*p_18_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_WDATA.bind(*p_18_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WLAST.bind(*p_18_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WSTRB.bind(*p_18_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WDATA_PARITY.bind(*p_18_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WVALID.bind(*p_18_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ACLK.bind(*p_18_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARESET_N.bind(*p_18_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_ARADDR.bind(*p_18_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_ARBURST.bind(*p_18_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_ARID.bind(*p_18_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_ARLEN.bind(*p_18_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_ARSIZE.bind(*p_18_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARVALID.bind(*p_18_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_AWADDR.bind(*p_18_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_AWBURST.bind(*p_18_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_AWID.bind(*p_18_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_AWLEN.bind(*p_18_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_AWSIZE.bind(*p_18_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWVALID.bind(*p_18_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RREADY.bind(*p_18_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BREADY.bind(*p_18_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_WDATA.bind(*p_18_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WLAST.bind(*p_18_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WSTRB.bind(*p_18_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WDATA_PARITY.bind(*p_18_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WVALID.bind(*p_18_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PWDATA.bind(*p_18_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_0_PADDR.bind(*p_18_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PCLK.bind(*p_18_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PENABLE.bind(*p_18_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PRESET_N.bind(*p_18_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSEL.bind(*p_18_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PWRITE.bind(*p_18_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARREADY.bind(*p_18_AXI_00_ARREADY);
        p_18_AXI_00_ARREADY->set_sv_netview_offsetfromdp(6079168);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWREADY.bind(*p_18_AXI_00_AWREADY);
        p_18_AXI_00_AWREADY->set_sv_netview_offsetfromdp(6079224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_RDATA_PARITY.bind(*p_18_AXI_00_RDATA_PARITY);
        p_18_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(6079280);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_RDATA.bind(*p_18_AXI_00_RDATA);
        p_18_AXI_00_RDATA->set_sv_netview_offsetfromdp(6079336);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_RID.bind(*p_18_AXI_00_RID);
        p_18_AXI_00_RID->set_sv_netview_offsetfromdp(6079392);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RLAST.bind(*p_18_AXI_00_RLAST);
        p_18_AXI_00_RLAST->set_sv_netview_offsetfromdp(6079448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_RRESP.bind(*p_18_AXI_00_RRESP);
        p_18_AXI_00_RRESP->set_sv_netview_offsetfromdp(6079504);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RVALID.bind(*p_18_AXI_00_RVALID);
        p_18_AXI_00_RVALID->set_sv_netview_offsetfromdp(6079560);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WREADY.bind(*p_18_AXI_00_WREADY);
        p_18_AXI_00_WREADY->set_sv_netview_offsetfromdp(6079616);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_BID.bind(*p_18_AXI_00_BID);
        p_18_AXI_00_BID->set_sv_netview_offsetfromdp(6079672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_BRESP.bind(*p_18_AXI_00_BRESP);
        p_18_AXI_00_BRESP->set_sv_netview_offsetfromdp(6079728);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BVALID.bind(*p_18_AXI_00_BVALID);
        p_18_AXI_00_BVALID->set_sv_netview_offsetfromdp(6079784);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARREADY.bind(*p_18_AXI_01_ARREADY);
        p_18_AXI_01_ARREADY->set_sv_netview_offsetfromdp(6079840);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWREADY.bind(*p_18_AXI_01_AWREADY);
        p_18_AXI_01_AWREADY->set_sv_netview_offsetfromdp(6079896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_RDATA_PARITY.bind(*p_18_AXI_01_RDATA_PARITY);
        p_18_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(6079952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_RDATA.bind(*p_18_AXI_01_RDATA);
        p_18_AXI_01_RDATA->set_sv_netview_offsetfromdp(6080008);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_RID.bind(*p_18_AXI_01_RID);
        p_18_AXI_01_RID->set_sv_netview_offsetfromdp(6080064);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RLAST.bind(*p_18_AXI_01_RLAST);
        p_18_AXI_01_RLAST->set_sv_netview_offsetfromdp(6080120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_RRESP.bind(*p_18_AXI_01_RRESP);
        p_18_AXI_01_RRESP->set_sv_netview_offsetfromdp(6080176);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RVALID.bind(*p_18_AXI_01_RVALID);
        p_18_AXI_01_RVALID->set_sv_netview_offsetfromdp(6080232);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WREADY.bind(*p_18_AXI_01_WREADY);
        p_18_AXI_01_WREADY->set_sv_netview_offsetfromdp(6080288);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_BID.bind(*p_18_AXI_01_BID);
        p_18_AXI_01_BID->set_sv_netview_offsetfromdp(6080344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_BRESP.bind(*p_18_AXI_01_BRESP);
        p_18_AXI_01_BRESP->set_sv_netview_offsetfromdp(6080400);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BVALID.bind(*p_18_AXI_01_BVALID);
        p_18_AXI_01_BVALID->set_sv_netview_offsetfromdp(6080456);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARREADY.bind(*p_18_AXI_02_ARREADY);
        p_18_AXI_02_ARREADY->set_sv_netview_offsetfromdp(6080512);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWREADY.bind(*p_18_AXI_02_AWREADY);
        p_18_AXI_02_AWREADY->set_sv_netview_offsetfromdp(6080568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_RDATA_PARITY.bind(*p_18_AXI_02_RDATA_PARITY);
        p_18_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(6080624);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_RDATA.bind(*p_18_AXI_02_RDATA);
        p_18_AXI_02_RDATA->set_sv_netview_offsetfromdp(6080680);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_RID.bind(*p_18_AXI_02_RID);
        p_18_AXI_02_RID->set_sv_netview_offsetfromdp(6080736);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RLAST.bind(*p_18_AXI_02_RLAST);
        p_18_AXI_02_RLAST->set_sv_netview_offsetfromdp(6080792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_RRESP.bind(*p_18_AXI_02_RRESP);
        p_18_AXI_02_RRESP->set_sv_netview_offsetfromdp(6080848);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RVALID.bind(*p_18_AXI_02_RVALID);
        p_18_AXI_02_RVALID->set_sv_netview_offsetfromdp(6080904);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WREADY.bind(*p_18_AXI_02_WREADY);
        p_18_AXI_02_WREADY->set_sv_netview_offsetfromdp(6080960);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_BID.bind(*p_18_AXI_02_BID);
        p_18_AXI_02_BID->set_sv_netview_offsetfromdp(6081016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_BRESP.bind(*p_18_AXI_02_BRESP);
        p_18_AXI_02_BRESP->set_sv_netview_offsetfromdp(6081072);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BVALID.bind(*p_18_AXI_02_BVALID);
        p_18_AXI_02_BVALID->set_sv_netview_offsetfromdp(6081128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PRDATA.bind(*p_18_APB_0_PRDATA);
        p_18_APB_0_PRDATA->set_sv_netview_offsetfromdp(6081184);
        xsim_sc_channel<0, bool > *p_18_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PREADY.bind(*p_18_APB_0_PREADY);
        p_18_APB_0_PREADY->set_sv_netview_offsetfromdp(6081240);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSLVERR.bind(*p_18_APB_0_PSLVERR);
        p_18_APB_0_PSLVERR->set_sv_netview_offsetfromdp(6081296);
        xsim_sc_channel<0, bool > *p_18_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_0.bind(*p_18_apb_complete_0);
        p_18_apb_complete_0->set_sv_netview_offsetfromdp(6081352);
        xsim_sc_channel<0, bool > *p_18_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_0_STAT_CATTRIP.bind(*p_18_DRAM_0_STAT_CATTRIP);
        p_18_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(6081408);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_0_STAT_TEMP.bind(*p_18_DRAM_0_STAT_TEMP);
        p_18_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(6081464);
        sc_inst_19 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_19->xsim_set_dbg_index(1917);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk1.bind(*p_19_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk1);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_araddr.bind(*p_19_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_arlen.bind(*p_19_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arsize.bind(*p_19_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_arburst.bind(*p_19_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arlock.bind(*p_19_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arcache.bind(*p_19_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arprot.bind(*p_19_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arqos.bind(*p_19_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arvalid.bind(*p_19_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arready.bind(*p_19_S00_AXI_arready);
        p_19_S00_AXI_arready->set_sv_netview_offsetfromdp(6255808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->S00_AXI_rdata.bind(*p_19_S00_AXI_rdata);
        p_19_S00_AXI_rdata->set_sv_netview_offsetfromdp(6255864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_rresp.bind(*p_19_S00_AXI_rresp);
        p_19_S00_AXI_rresp->set_sv_netview_offsetfromdp(6255920);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rlast.bind(*p_19_S00_AXI_rlast);
        p_19_S00_AXI_rlast->set_sv_netview_offsetfromdp(6255976);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rvalid.bind(*p_19_S00_AXI_rvalid);
        p_19_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6256032);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rready.bind(*p_19_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_araddr.bind(*p_19_M00_AXI_araddr);
        p_19_M00_AXI_araddr->set_sv_netview_offsetfromdp(6256144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arlen.bind(*p_19_M00_AXI_arlen);
        p_19_M00_AXI_arlen->set_sv_netview_offsetfromdp(6256200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arsize.bind(*p_19_M00_AXI_arsize);
        p_19_M00_AXI_arsize->set_sv_netview_offsetfromdp(6256256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arburst.bind(*p_19_M00_AXI_arburst);
        p_19_M00_AXI_arburst->set_sv_netview_offsetfromdp(6256312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arlock.bind(*p_19_M00_AXI_arlock);
        p_19_M00_AXI_arlock->set_sv_netview_offsetfromdp(6256368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arcache.bind(*p_19_M00_AXI_arcache);
        p_19_M00_AXI_arcache->set_sv_netview_offsetfromdp(6256424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arprot.bind(*p_19_M00_AXI_arprot);
        p_19_M00_AXI_arprot->set_sv_netview_offsetfromdp(6256480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arqos.bind(*p_19_M00_AXI_arqos);
        p_19_M00_AXI_arqos->set_sv_netview_offsetfromdp(6256536);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arvalid.bind(*p_19_M00_AXI_arvalid);
        p_19_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6256592);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arready.bind(*p_19_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_rdata.bind(*p_19_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_rresp.bind(*p_19_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rlast.bind(*p_19_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rvalid.bind(*p_19_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rready.bind(*p_19_M00_AXI_rready);
        p_19_M00_AXI_rready->set_sv_netview_offsetfromdp(6256928);
        sc_inst_20 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_20->xsim_set_dbg_index(1918);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awsize.bind(*p_20_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(6257648);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(6257928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(6257984);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(6258040);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arsize.bind(*p_20_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(6258656);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(6258712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(6258768);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(6258824);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(6258880);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(6258992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(6259048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awsize.bind(*p_20_m_axi_awsize);
        p_20_m_axi_awsize->set_sv_netview_offsetfromdp(6259104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(6259160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(6259216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(6259272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(6259328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(6259384);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(6259440);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(6259552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(6259608);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(6259664);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(6259720);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(6259944);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(6260000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(6260056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arsize.bind(*p_20_m_axi_arsize);
        p_20_m_axi_arsize->set_sv_netview_offsetfromdp(6260112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(6260168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(6260224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(6260280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(6260336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(6260392);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(6260448);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(6260784);
        sc_inst_21 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_21->xsim_set_dbg_index(1969);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk1.bind(*p_21_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk1);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->S00_AXI_awaddr.bind(*p_21_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->S00_AXI_awlen.bind(*p_21_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_awsize.bind(*p_21_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_awburst.bind(*p_21_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_awlock.bind(*p_21_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_awcache.bind(*p_21_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_awprot.bind(*p_21_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_awqos.bind(*p_21_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_awvalid.bind(*p_21_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_awready.bind(*p_21_S00_AXI_awready);
        p_21_S00_AXI_awready->set_sv_netview_offsetfromdp(6306112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->S00_AXI_wdata.bind(*p_21_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_wstrb.bind(*p_21_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wlast.bind(*p_21_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wvalid.bind(*p_21_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_wready.bind(*p_21_S00_AXI_wready);
        p_21_S00_AXI_wready->set_sv_netview_offsetfromdp(6306392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_bresp.bind(*p_21_S00_AXI_bresp);
        p_21_S00_AXI_bresp->set_sv_netview_offsetfromdp(6306448);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_bvalid.bind(*p_21_S00_AXI_bvalid);
        p_21_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6306504);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_bready.bind(*p_21_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->M00_AXI_awaddr.bind(*p_21_M00_AXI_awaddr);
        p_21_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6306616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awlen.bind(*p_21_M00_AXI_awlen);
        p_21_M00_AXI_awlen->set_sv_netview_offsetfromdp(6306672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_awsize.bind(*p_21_M00_AXI_awsize);
        p_21_M00_AXI_awsize->set_sv_netview_offsetfromdp(6306728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_awburst.bind(*p_21_M00_AXI_awburst);
        p_21_M00_AXI_awburst->set_sv_netview_offsetfromdp(6306784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_awlock.bind(*p_21_M00_AXI_awlock);
        p_21_M00_AXI_awlock->set_sv_netview_offsetfromdp(6306840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awcache.bind(*p_21_M00_AXI_awcache);
        p_21_M00_AXI_awcache->set_sv_netview_offsetfromdp(6306896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_awprot.bind(*p_21_M00_AXI_awprot);
        p_21_M00_AXI_awprot->set_sv_netview_offsetfromdp(6306952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_awqos.bind(*p_21_M00_AXI_awqos);
        p_21_M00_AXI_awqos->set_sv_netview_offsetfromdp(6307008);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_awvalid.bind(*p_21_M00_AXI_awvalid);
        p_21_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6307064);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_awready.bind(*p_21_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->M00_AXI_wdata.bind(*p_21_M00_AXI_wdata);
        p_21_M00_AXI_wdata->set_sv_netview_offsetfromdp(6307176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->M00_AXI_wstrb.bind(*p_21_M00_AXI_wstrb);
        p_21_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6307232);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wlast.bind(*p_21_M00_AXI_wlast);
        p_21_M00_AXI_wlast->set_sv_netview_offsetfromdp(6307288);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wvalid.bind(*p_21_M00_AXI_wvalid);
        p_21_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6307344);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_wready.bind(*p_21_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_bresp.bind(*p_21_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_bvalid.bind(*p_21_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_bready.bind(*p_21_M00_AXI_bready);
        p_21_M00_AXI_bready->set_sv_netview_offsetfromdp(6307568);
        sc_inst_22 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_22->xsim_set_dbg_index(1970);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awsize.bind(*p_22_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(6308288);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(6308568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(6308624);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(6308680);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arsize.bind(*p_22_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(6309296);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(6309352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(6309408);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(6309464);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(6309520);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(6309632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(6309688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awsize.bind(*p_22_m_axi_awsize);
        p_22_m_axi_awsize->set_sv_netview_offsetfromdp(6309744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(6309800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(6309856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(6309912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(6309968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(6310024);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(6310080);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(6310192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(6310248);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(6310304);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(6310360);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(6310584);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(6310640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(6310696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arsize.bind(*p_22_m_axi_arsize);
        p_22_m_axi_arsize->set_sv_netview_offsetfromdp(6310752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(6310808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(6310864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(6310920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(6310976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(6311032);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(6311088);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(6311424);
        sc_inst_23 = new bd_5dca_interconnect0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect0_2");
        sc_inst_23->xsim_set_dbg_index(2024);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk1.bind(*p_23_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk1);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(6373592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(6373872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(6373928);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6373984);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(6374600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(6374656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(6374712);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(6374768);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6374824);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6374936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(6374992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(6375048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(6375104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(6375160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(6375216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(6375272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(6375328);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6375384);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(6375496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6375552);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(6375608);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6375664);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(6375888);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(6375944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(6376000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(6376056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(6376112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(6376168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(6376224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(6376280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(6376336);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6376392);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(6376728);
        sc_inst_24 = new bd_5dca_slice0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice0_2");
        sc_inst_24->xsim_set_dbg_index(2025);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awsize.bind(*p_24_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(6377448);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(6377728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(6377784);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(6377840);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arsize.bind(*p_24_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(6378456);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(6378512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(6378568);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(6378624);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(6378680);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(6378792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(6378848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awsize.bind(*p_24_m_axi_awsize);
        p_24_m_axi_awsize->set_sv_netview_offsetfromdp(6378904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(6378960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(6379016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(6379072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(6379128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(6379184);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(6379240);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(6379352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(6379408);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(6379464);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(6379520);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(6379744);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(6379800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(6379856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arsize.bind(*p_24_m_axi_arsize);
        p_24_m_axi_arsize->set_sv_netview_offsetfromdp(6379912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(6379968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(6380024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(6380080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(6380136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(6380192);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(6380248);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(6380584);
        sc_inst_25 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_25->xsim_set_dbg_index(779);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(6381248);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(6381528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(6381584);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(6381640);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(6382200);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(6382256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(6382312);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(6382368);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(6382424);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(6382536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(6382592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(6382648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(6382704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(6382760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(6382816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(6382872);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(6382928);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(6383040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(6383096);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(6383152);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(6383208);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(6383432);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(6383488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(6383544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(6383600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(6383656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(6383712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(6383768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(6383824);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(6383880);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(6384216);
        sc_inst_26 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_26->xsim_set_dbg_index(780);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(6384880);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(6385160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(6385216);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(6385272);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(6385832);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(6385888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(6385944);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(6386000);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(6386056);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(6386168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(6386224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(6386280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(6386336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(6386392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(6386448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(6386504);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(6386560);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(6386672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(6386728);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(6386784);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(6386840);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(6387064);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(6387120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(6387176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(6387232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(6387288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(6387344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(6387400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(6387456);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(6387512);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(6387848);
        sc_inst_27 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_27->xsim_set_dbg_index(781);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(6388512);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(6388792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(6388848);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(6388904);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(6389464);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(6389520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(6389576);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(6389632);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(6389688);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(6389800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(6389856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(6389912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(6389968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(6390024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(6390080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(6390136);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(6390192);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(6390304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(6390360);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(6390416);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(6390472);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(6390696);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(6390752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(6390808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(6390864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(6390920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(6390976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(6391032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(6391088);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(6391144);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(6391480);
        sc_inst_28 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_28->xsim_set_dbg_index(44);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->dout.bind(*p_28_dout);
        p_28_dout->set_sv_netview_offsetfromdp(6560632);
        sc_inst_29 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_29->xsim_set_dbg_index(1205);
        sc_inst_30 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_30->xsim_set_dbg_index(2162);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awid.bind(*p_30_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_awaddr.bind(*p_30_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_awlen.bind(*p_30_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awsize.bind(*p_30_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_awburst.bind(*p_30_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awlock.bind(*p_30_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awcache.bind(*p_30_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awprot.bind(*p_30_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awqos.bind(*p_30_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_awuser.bind(*p_30_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awvalid.bind(*p_30_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awready.bind(*p_30_S00_AXI_awready);
        p_30_S00_AXI_awready->set_sv_netview_offsetfromdp(7212280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_wdata.bind(*p_30_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->S00_AXI_wstrb.bind(*p_30_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wlast.bind(*p_30_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_wuser.bind(*p_30_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wvalid.bind(*p_30_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wready.bind(*p_30_S00_AXI_wready);
        p_30_S00_AXI_wready->set_sv_netview_offsetfromdp(7212616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_bid.bind(*p_30_S00_AXI_bid);
        p_30_S00_AXI_bid->set_sv_netview_offsetfromdp(7212672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_bresp.bind(*p_30_S00_AXI_bresp);
        p_30_S00_AXI_bresp->set_sv_netview_offsetfromdp(7212728);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_buser.bind(*p_30_S00_AXI_buser);
        p_30_S00_AXI_buser->set_sv_netview_offsetfromdp(7212784);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bvalid.bind(*p_30_S00_AXI_bvalid);
        p_30_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7212840);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bready.bind(*p_30_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arid.bind(*p_30_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_araddr.bind(*p_30_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_arlen.bind(*p_30_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arsize.bind(*p_30_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_arburst.bind(*p_30_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arlock.bind(*p_30_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arcache.bind(*p_30_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arprot.bind(*p_30_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arqos.bind(*p_30_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_aruser.bind(*p_30_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arvalid.bind(*p_30_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arready.bind(*p_30_S00_AXI_arready);
        p_30_S00_AXI_arready->set_sv_netview_offsetfromdp(7213568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_rid.bind(*p_30_S00_AXI_rid);
        p_30_S00_AXI_rid->set_sv_netview_offsetfromdp(7213624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_rdata.bind(*p_30_S00_AXI_rdata);
        p_30_S00_AXI_rdata->set_sv_netview_offsetfromdp(7213680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_rresp.bind(*p_30_S00_AXI_rresp);
        p_30_S00_AXI_rresp->set_sv_netview_offsetfromdp(7213736);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rlast.bind(*p_30_S00_AXI_rlast);
        p_30_S00_AXI_rlast->set_sv_netview_offsetfromdp(7213792);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_ruser.bind(*p_30_S00_AXI_ruser);
        p_30_S00_AXI_ruser->set_sv_netview_offsetfromdp(7213848);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rvalid.bind(*p_30_S00_AXI_rvalid);
        p_30_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7213904);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rready.bind(*p_30_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->M00_AXI_awaddr.bind(*p_30_M00_AXI_awaddr);
        p_30_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7214016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_awlen.bind(*p_30_M00_AXI_awlen);
        p_30_M00_AXI_awlen->set_sv_netview_offsetfromdp(7214072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awsize.bind(*p_30_M00_AXI_awsize);
        p_30_M00_AXI_awsize->set_sv_netview_offsetfromdp(7214128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_awburst.bind(*p_30_M00_AXI_awburst);
        p_30_M00_AXI_awburst->set_sv_netview_offsetfromdp(7214184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_awlock.bind(*p_30_M00_AXI_awlock);
        p_30_M00_AXI_awlock->set_sv_netview_offsetfromdp(7214240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awcache.bind(*p_30_M00_AXI_awcache);
        p_30_M00_AXI_awcache->set_sv_netview_offsetfromdp(7214296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awprot.bind(*p_30_M00_AXI_awprot);
        p_30_M00_AXI_awprot->set_sv_netview_offsetfromdp(7214352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awqos.bind(*p_30_M00_AXI_awqos);
        p_30_M00_AXI_awqos->set_sv_netview_offsetfromdp(7214408);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awvalid.bind(*p_30_M00_AXI_awvalid);
        p_30_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7214464);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awready.bind(*p_30_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->M00_AXI_wdata.bind(*p_30_M00_AXI_wdata);
        p_30_M00_AXI_wdata->set_sv_netview_offsetfromdp(7214576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_wstrb.bind(*p_30_M00_AXI_wstrb);
        p_30_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7214632);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wlast.bind(*p_30_M00_AXI_wlast);
        p_30_M00_AXI_wlast->set_sv_netview_offsetfromdp(7214688);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wvalid.bind(*p_30_M00_AXI_wvalid);
        p_30_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7214744);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wready.bind(*p_30_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_bresp.bind(*p_30_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bvalid.bind(*p_30_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bready.bind(*p_30_M00_AXI_bready);
        p_30_M00_AXI_bready->set_sv_netview_offsetfromdp(7214968);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->M00_AXI_araddr.bind(*p_30_M00_AXI_araddr);
        p_30_M00_AXI_araddr->set_sv_netview_offsetfromdp(7215024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_arlen.bind(*p_30_M00_AXI_arlen);
        p_30_M00_AXI_arlen->set_sv_netview_offsetfromdp(7215080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arsize.bind(*p_30_M00_AXI_arsize);
        p_30_M00_AXI_arsize->set_sv_netview_offsetfromdp(7215136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_arburst.bind(*p_30_M00_AXI_arburst);
        p_30_M00_AXI_arburst->set_sv_netview_offsetfromdp(7215192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_arlock.bind(*p_30_M00_AXI_arlock);
        p_30_M00_AXI_arlock->set_sv_netview_offsetfromdp(7215248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arcache.bind(*p_30_M00_AXI_arcache);
        p_30_M00_AXI_arcache->set_sv_netview_offsetfromdp(7215304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arprot.bind(*p_30_M00_AXI_arprot);
        p_30_M00_AXI_arprot->set_sv_netview_offsetfromdp(7215360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arqos.bind(*p_30_M00_AXI_arqos);
        p_30_M00_AXI_arqos->set_sv_netview_offsetfromdp(7215416);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arvalid.bind(*p_30_M00_AXI_arvalid);
        p_30_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7215472);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arready.bind(*p_30_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->M00_AXI_rdata.bind(*p_30_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_rresp.bind(*p_30_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rlast.bind(*p_30_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rvalid.bind(*p_30_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rready.bind(*p_30_M00_AXI_rready);
        p_30_M00_AXI_rready->set_sv_netview_offsetfromdp(7215808);
        sc_inst_31 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_31->xsim_set_dbg_index(2163);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awid.bind(*p_31_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_awuser.bind(*p_31_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(7216640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_wuser.bind(*p_31_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(7216976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_bid.bind(*p_31_S00_AXI_bid);
        p_31_S00_AXI_bid->set_sv_netview_offsetfromdp(7217032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(7217088);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_buser.bind(*p_31_S00_AXI_buser);
        p_31_S00_AXI_buser->set_sv_netview_offsetfromdp(7217144);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7217200);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arid.bind(*p_31_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_aruser.bind(*p_31_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(7217928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_rid.bind(*p_31_S00_AXI_rid);
        p_31_S00_AXI_rid->set_sv_netview_offsetfromdp(7217984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(7218040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(7218096);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(7218152);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_ruser.bind(*p_31_S00_AXI_ruser);
        p_31_S00_AXI_ruser->set_sv_netview_offsetfromdp(7218208);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7218264);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7218376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(7218432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(7218488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(7218544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(7218600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(7218656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(7218712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(7218768);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7218824);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(7218936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7218992);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(7219048);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7219104);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(7219328);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(7219384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(7219440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(7219496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(7219552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(7219608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(7219664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(7219720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(7219776);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7219832);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(7220168);
        sc_inst_32 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_32->xsim_set_dbg_index(2164);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awid.bind(*p_32_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_awaddr.bind(*p_32_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_awlen.bind(*p_32_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awsize.bind(*p_32_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_awburst.bind(*p_32_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awlock.bind(*p_32_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awcache.bind(*p_32_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awprot.bind(*p_32_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awqos.bind(*p_32_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_awuser.bind(*p_32_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awvalid.bind(*p_32_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awready.bind(*p_32_S00_AXI_awready);
        p_32_S00_AXI_awready->set_sv_netview_offsetfromdp(7221000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_wdata.bind(*p_32_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->S00_AXI_wstrb.bind(*p_32_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wlast.bind(*p_32_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_wuser.bind(*p_32_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wvalid.bind(*p_32_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wready.bind(*p_32_S00_AXI_wready);
        p_32_S00_AXI_wready->set_sv_netview_offsetfromdp(7221336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_bid.bind(*p_32_S00_AXI_bid);
        p_32_S00_AXI_bid->set_sv_netview_offsetfromdp(7221392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_bresp.bind(*p_32_S00_AXI_bresp);
        p_32_S00_AXI_bresp->set_sv_netview_offsetfromdp(7221448);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_buser.bind(*p_32_S00_AXI_buser);
        p_32_S00_AXI_buser->set_sv_netview_offsetfromdp(7221504);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bvalid.bind(*p_32_S00_AXI_bvalid);
        p_32_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7221560);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bready.bind(*p_32_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arid.bind(*p_32_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_araddr.bind(*p_32_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_arlen.bind(*p_32_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arsize.bind(*p_32_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_arburst.bind(*p_32_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arlock.bind(*p_32_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arcache.bind(*p_32_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arprot.bind(*p_32_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arqos.bind(*p_32_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_aruser.bind(*p_32_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arvalid.bind(*p_32_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arready.bind(*p_32_S00_AXI_arready);
        p_32_S00_AXI_arready->set_sv_netview_offsetfromdp(7222288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_rid.bind(*p_32_S00_AXI_rid);
        p_32_S00_AXI_rid->set_sv_netview_offsetfromdp(7222344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_rdata.bind(*p_32_S00_AXI_rdata);
        p_32_S00_AXI_rdata->set_sv_netview_offsetfromdp(7222400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_rresp.bind(*p_32_S00_AXI_rresp);
        p_32_S00_AXI_rresp->set_sv_netview_offsetfromdp(7222456);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rlast.bind(*p_32_S00_AXI_rlast);
        p_32_S00_AXI_rlast->set_sv_netview_offsetfromdp(7222512);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_ruser.bind(*p_32_S00_AXI_ruser);
        p_32_S00_AXI_ruser->set_sv_netview_offsetfromdp(7222568);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rvalid.bind(*p_32_S00_AXI_rvalid);
        p_32_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7222624);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rready.bind(*p_32_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_awaddr.bind(*p_32_M00_AXI_awaddr);
        p_32_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7222736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_awlen.bind(*p_32_M00_AXI_awlen);
        p_32_M00_AXI_awlen->set_sv_netview_offsetfromdp(7222792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awsize.bind(*p_32_M00_AXI_awsize);
        p_32_M00_AXI_awsize->set_sv_netview_offsetfromdp(7222848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_awburst.bind(*p_32_M00_AXI_awburst);
        p_32_M00_AXI_awburst->set_sv_netview_offsetfromdp(7222904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_awlock.bind(*p_32_M00_AXI_awlock);
        p_32_M00_AXI_awlock->set_sv_netview_offsetfromdp(7222960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awcache.bind(*p_32_M00_AXI_awcache);
        p_32_M00_AXI_awcache->set_sv_netview_offsetfromdp(7223016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awprot.bind(*p_32_M00_AXI_awprot);
        p_32_M00_AXI_awprot->set_sv_netview_offsetfromdp(7223072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awqos.bind(*p_32_M00_AXI_awqos);
        p_32_M00_AXI_awqos->set_sv_netview_offsetfromdp(7223128);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awvalid.bind(*p_32_M00_AXI_awvalid);
        p_32_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7223184);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awready.bind(*p_32_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_wdata.bind(*p_32_M00_AXI_wdata);
        p_32_M00_AXI_wdata->set_sv_netview_offsetfromdp(7223296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->M00_AXI_wstrb.bind(*p_32_M00_AXI_wstrb);
        p_32_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7223352);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wlast.bind(*p_32_M00_AXI_wlast);
        p_32_M00_AXI_wlast->set_sv_netview_offsetfromdp(7223408);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wvalid.bind(*p_32_M00_AXI_wvalid);
        p_32_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7223464);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wready.bind(*p_32_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_bresp.bind(*p_32_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bvalid.bind(*p_32_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bready.bind(*p_32_M00_AXI_bready);
        p_32_M00_AXI_bready->set_sv_netview_offsetfromdp(7223688);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_araddr.bind(*p_32_M00_AXI_araddr);
        p_32_M00_AXI_araddr->set_sv_netview_offsetfromdp(7223744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_arlen.bind(*p_32_M00_AXI_arlen);
        p_32_M00_AXI_arlen->set_sv_netview_offsetfromdp(7223800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arsize.bind(*p_32_M00_AXI_arsize);
        p_32_M00_AXI_arsize->set_sv_netview_offsetfromdp(7223856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_arburst.bind(*p_32_M00_AXI_arburst);
        p_32_M00_AXI_arburst->set_sv_netview_offsetfromdp(7223912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_arlock.bind(*p_32_M00_AXI_arlock);
        p_32_M00_AXI_arlock->set_sv_netview_offsetfromdp(7223968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arcache.bind(*p_32_M00_AXI_arcache);
        p_32_M00_AXI_arcache->set_sv_netview_offsetfromdp(7224024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arprot.bind(*p_32_M00_AXI_arprot);
        p_32_M00_AXI_arprot->set_sv_netview_offsetfromdp(7224080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arqos.bind(*p_32_M00_AXI_arqos);
        p_32_M00_AXI_arqos->set_sv_netview_offsetfromdp(7224136);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arvalid.bind(*p_32_M00_AXI_arvalid);
        p_32_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7224192);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arready.bind(*p_32_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_rdata.bind(*p_32_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_rresp.bind(*p_32_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rlast.bind(*p_32_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rvalid.bind(*p_32_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rready.bind(*p_32_M00_AXI_rready);
        p_32_M00_AXI_rready->set_sv_netview_offsetfromdp(7224528);
        sc_inst_33 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_33->xsim_set_dbg_index(2165);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(7225360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(7225696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(7225752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(7225808);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(7225864);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7225920);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(7226648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(7226704);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(7226760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(7226816);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(7226872);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(7226928);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7226984);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7227096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(7227152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(7227208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(7227264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(7227320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(7227376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(7227432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(7227488);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7227544);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(7227656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7227712);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(7227768);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7227824);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(7228048);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(7228104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(7228160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(7228216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(7228272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(7228328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(7228384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(7228440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(7228496);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7228552);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(7228888);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_34->xsim_set_dbg_index(2166);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(7229720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(7230056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(7230112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(7230168);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(7230224);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7230280);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(7231008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(7231064);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(7231120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(7231176);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(7231232);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(7231288);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7231344);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7231456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(7231512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(7231568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(7231624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(7231680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(7231736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(7231792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(7231848);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7231904);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(7232016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7232072);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(7232128);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7232184);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(7232408);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(7232464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(7232520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(7232576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(7232632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(7232688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(7232744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(7232800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(7232856);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7232912);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(7233248);
        sc_inst_35 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_35->xsim_set_dbg_index(2167);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(7233968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(7234248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(7234304);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7234360);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(7234976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(7235032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(7235088);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(7235144);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7235200);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awid.bind(*p_35_M00_AXI_awid);
        p_35_M00_AXI_awid->set_sv_netview_offsetfromdp(7235312);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7235368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(7235424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(7235480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(7235536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(7235592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(7235648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(7235704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(7235760);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M00_AXI_awuser.bind(*p_35_M00_AXI_awuser);
        p_35_M00_AXI_awuser->set_sv_netview_offsetfromdp(7235816);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7235872);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(7235984);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7236040);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(7236096);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M00_AXI_wuser.bind(*p_35_M00_AXI_wuser);
        p_35_M00_AXI_wuser->set_sv_netview_offsetfromdp(7236152);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7236208);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_bid.bind(*p_35_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M00_AXI_buser.bind(*p_35_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(7236544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arid.bind(*p_35_M00_AXI_arid);
        p_35_M00_AXI_arid->set_sv_netview_offsetfromdp(7236600);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(7236656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(7236712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(7236768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(7236824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(7236880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(7236936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(7236992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(7237048);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M00_AXI_aruser.bind(*p_35_M00_AXI_aruser);
        p_35_M00_AXI_aruser->set_sv_netview_offsetfromdp(7237104);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7237160);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_rid.bind(*p_35_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M00_AXI_ruser.bind(*p_35_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(7237608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_awid.bind(*p_35_M01_AXI_awid);
        p_35_M01_AXI_awid->set_sv_netview_offsetfromdp(7237664);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M01_AXI_awaddr.bind(*p_35_M01_AXI_awaddr);
        p_35_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7237720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_awlen.bind(*p_35_M01_AXI_awlen);
        p_35_M01_AXI_awlen->set_sv_netview_offsetfromdp(7237776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awsize.bind(*p_35_M01_AXI_awsize);
        p_35_M01_AXI_awsize->set_sv_netview_offsetfromdp(7237832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_awburst.bind(*p_35_M01_AXI_awburst);
        p_35_M01_AXI_awburst->set_sv_netview_offsetfromdp(7237888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_awlock.bind(*p_35_M01_AXI_awlock);
        p_35_M01_AXI_awlock->set_sv_netview_offsetfromdp(7237944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awcache.bind(*p_35_M01_AXI_awcache);
        p_35_M01_AXI_awcache->set_sv_netview_offsetfromdp(7238000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_awprot.bind(*p_35_M01_AXI_awprot);
        p_35_M01_AXI_awprot->set_sv_netview_offsetfromdp(7238056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_awqos.bind(*p_35_M01_AXI_awqos);
        p_35_M01_AXI_awqos->set_sv_netview_offsetfromdp(7238112);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M01_AXI_awuser.bind(*p_35_M01_AXI_awuser);
        p_35_M01_AXI_awuser->set_sv_netview_offsetfromdp(7238168);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awvalid.bind(*p_35_M01_AXI_awvalid);
        p_35_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7238224);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_awready.bind(*p_35_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M01_AXI_wdata.bind(*p_35_M01_AXI_wdata);
        p_35_M01_AXI_wdata->set_sv_netview_offsetfromdp(7238336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M01_AXI_wstrb.bind(*p_35_M01_AXI_wstrb);
        p_35_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7238392);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wlast.bind(*p_35_M01_AXI_wlast);
        p_35_M01_AXI_wlast->set_sv_netview_offsetfromdp(7238448);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M01_AXI_wuser.bind(*p_35_M01_AXI_wuser);
        p_35_M01_AXI_wuser->set_sv_netview_offsetfromdp(7238504);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wvalid.bind(*p_35_M01_AXI_wvalid);
        p_35_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7238560);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_wready.bind(*p_35_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_bid.bind(*p_35_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_bresp.bind(*p_35_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M01_AXI_buser.bind(*p_35_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bvalid.bind(*p_35_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_bready.bind(*p_35_M01_AXI_bready);
        p_35_M01_AXI_bready->set_sv_netview_offsetfromdp(7238896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_arid.bind(*p_35_M01_AXI_arid);
        p_35_M01_AXI_arid->set_sv_netview_offsetfromdp(7238952);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M01_AXI_araddr.bind(*p_35_M01_AXI_araddr);
        p_35_M01_AXI_araddr->set_sv_netview_offsetfromdp(7239008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M01_AXI_arlen.bind(*p_35_M01_AXI_arlen);
        p_35_M01_AXI_arlen->set_sv_netview_offsetfromdp(7239064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arsize.bind(*p_35_M01_AXI_arsize);
        p_35_M01_AXI_arsize->set_sv_netview_offsetfromdp(7239120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_arburst.bind(*p_35_M01_AXI_arburst);
        p_35_M01_AXI_arburst->set_sv_netview_offsetfromdp(7239176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_arlock.bind(*p_35_M01_AXI_arlock);
        p_35_M01_AXI_arlock->set_sv_netview_offsetfromdp(7239232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arcache.bind(*p_35_M01_AXI_arcache);
        p_35_M01_AXI_arcache->set_sv_netview_offsetfromdp(7239288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M01_AXI_arprot.bind(*p_35_M01_AXI_arprot);
        p_35_M01_AXI_arprot->set_sv_netview_offsetfromdp(7239344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M01_AXI_arqos.bind(*p_35_M01_AXI_arqos);
        p_35_M01_AXI_arqos->set_sv_netview_offsetfromdp(7239400);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M01_AXI_aruser.bind(*p_35_M01_AXI_aruser);
        p_35_M01_AXI_aruser->set_sv_netview_offsetfromdp(7239456);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arvalid.bind(*p_35_M01_AXI_arvalid);
        p_35_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7239512);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_arready.bind(*p_35_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M01_AXI_rid.bind(*p_35_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M01_AXI_rdata.bind(*p_35_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M01_AXI_rresp.bind(*p_35_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rlast.bind(*p_35_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M01_AXI_ruser.bind(*p_35_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rvalid.bind(*p_35_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M01_AXI_rready.bind(*p_35_M01_AXI_rready);
        p_35_M01_AXI_rready->set_sv_netview_offsetfromdp(7239960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_awid.bind(*p_35_M02_AXI_awid);
        p_35_M02_AXI_awid->set_sv_netview_offsetfromdp(7240016);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M02_AXI_awaddr.bind(*p_35_M02_AXI_awaddr);
        p_35_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7240072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_awlen.bind(*p_35_M02_AXI_awlen);
        p_35_M02_AXI_awlen->set_sv_netview_offsetfromdp(7240128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awsize.bind(*p_35_M02_AXI_awsize);
        p_35_M02_AXI_awsize->set_sv_netview_offsetfromdp(7240184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_awburst.bind(*p_35_M02_AXI_awburst);
        p_35_M02_AXI_awburst->set_sv_netview_offsetfromdp(7240240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_awlock.bind(*p_35_M02_AXI_awlock);
        p_35_M02_AXI_awlock->set_sv_netview_offsetfromdp(7240296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awcache.bind(*p_35_M02_AXI_awcache);
        p_35_M02_AXI_awcache->set_sv_netview_offsetfromdp(7240352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_awprot.bind(*p_35_M02_AXI_awprot);
        p_35_M02_AXI_awprot->set_sv_netview_offsetfromdp(7240408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_awqos.bind(*p_35_M02_AXI_awqos);
        p_35_M02_AXI_awqos->set_sv_netview_offsetfromdp(7240464);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M02_AXI_awuser.bind(*p_35_M02_AXI_awuser);
        p_35_M02_AXI_awuser->set_sv_netview_offsetfromdp(7240520);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awvalid.bind(*p_35_M02_AXI_awvalid);
        p_35_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7240576);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_awready.bind(*p_35_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M02_AXI_wdata.bind(*p_35_M02_AXI_wdata);
        p_35_M02_AXI_wdata->set_sv_netview_offsetfromdp(7240688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M02_AXI_wstrb.bind(*p_35_M02_AXI_wstrb);
        p_35_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7240744);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wlast.bind(*p_35_M02_AXI_wlast);
        p_35_M02_AXI_wlast->set_sv_netview_offsetfromdp(7240800);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M02_AXI_wuser.bind(*p_35_M02_AXI_wuser);
        p_35_M02_AXI_wuser->set_sv_netview_offsetfromdp(7240856);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wvalid.bind(*p_35_M02_AXI_wvalid);
        p_35_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7240912);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_wready.bind(*p_35_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_bid.bind(*p_35_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_bresp.bind(*p_35_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M02_AXI_buser.bind(*p_35_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bvalid.bind(*p_35_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_bready.bind(*p_35_M02_AXI_bready);
        p_35_M02_AXI_bready->set_sv_netview_offsetfromdp(7241248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_arid.bind(*p_35_M02_AXI_arid);
        p_35_M02_AXI_arid->set_sv_netview_offsetfromdp(7241304);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M02_AXI_araddr.bind(*p_35_M02_AXI_araddr);
        p_35_M02_AXI_araddr->set_sv_netview_offsetfromdp(7241360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M02_AXI_arlen.bind(*p_35_M02_AXI_arlen);
        p_35_M02_AXI_arlen->set_sv_netview_offsetfromdp(7241416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arsize.bind(*p_35_M02_AXI_arsize);
        p_35_M02_AXI_arsize->set_sv_netview_offsetfromdp(7241472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_arburst.bind(*p_35_M02_AXI_arburst);
        p_35_M02_AXI_arburst->set_sv_netview_offsetfromdp(7241528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_arlock.bind(*p_35_M02_AXI_arlock);
        p_35_M02_AXI_arlock->set_sv_netview_offsetfromdp(7241584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arcache.bind(*p_35_M02_AXI_arcache);
        p_35_M02_AXI_arcache->set_sv_netview_offsetfromdp(7241640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M02_AXI_arprot.bind(*p_35_M02_AXI_arprot);
        p_35_M02_AXI_arprot->set_sv_netview_offsetfromdp(7241696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M02_AXI_arqos.bind(*p_35_M02_AXI_arqos);
        p_35_M02_AXI_arqos->set_sv_netview_offsetfromdp(7241752);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M02_AXI_aruser.bind(*p_35_M02_AXI_aruser);
        p_35_M02_AXI_aruser->set_sv_netview_offsetfromdp(7241808);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arvalid.bind(*p_35_M02_AXI_arvalid);
        p_35_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7241864);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_arready.bind(*p_35_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M02_AXI_rid.bind(*p_35_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M02_AXI_rdata.bind(*p_35_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M02_AXI_rresp.bind(*p_35_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rlast.bind(*p_35_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M02_AXI_ruser.bind(*p_35_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rvalid.bind(*p_35_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M02_AXI_rready.bind(*p_35_M02_AXI_rready);
        p_35_M02_AXI_rready->set_sv_netview_offsetfromdp(7242312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_awid.bind(*p_35_M03_AXI_awid);
        p_35_M03_AXI_awid->set_sv_netview_offsetfromdp(7242368);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M03_AXI_awaddr.bind(*p_35_M03_AXI_awaddr);
        p_35_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7242424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_awlen.bind(*p_35_M03_AXI_awlen);
        p_35_M03_AXI_awlen->set_sv_netview_offsetfromdp(7242480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awsize.bind(*p_35_M03_AXI_awsize);
        p_35_M03_AXI_awsize->set_sv_netview_offsetfromdp(7242536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_awburst.bind(*p_35_M03_AXI_awburst);
        p_35_M03_AXI_awburst->set_sv_netview_offsetfromdp(7242592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_awlock.bind(*p_35_M03_AXI_awlock);
        p_35_M03_AXI_awlock->set_sv_netview_offsetfromdp(7242648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awcache.bind(*p_35_M03_AXI_awcache);
        p_35_M03_AXI_awcache->set_sv_netview_offsetfromdp(7242704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_awprot.bind(*p_35_M03_AXI_awprot);
        p_35_M03_AXI_awprot->set_sv_netview_offsetfromdp(7242760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_awqos.bind(*p_35_M03_AXI_awqos);
        p_35_M03_AXI_awqos->set_sv_netview_offsetfromdp(7242816);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M03_AXI_awuser.bind(*p_35_M03_AXI_awuser);
        p_35_M03_AXI_awuser->set_sv_netview_offsetfromdp(7242872);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awvalid.bind(*p_35_M03_AXI_awvalid);
        p_35_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7242928);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_awready.bind(*p_35_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M03_AXI_wdata.bind(*p_35_M03_AXI_wdata);
        p_35_M03_AXI_wdata->set_sv_netview_offsetfromdp(7243040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M03_AXI_wstrb.bind(*p_35_M03_AXI_wstrb);
        p_35_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7243096);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wlast.bind(*p_35_M03_AXI_wlast);
        p_35_M03_AXI_wlast->set_sv_netview_offsetfromdp(7243152);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M03_AXI_wuser.bind(*p_35_M03_AXI_wuser);
        p_35_M03_AXI_wuser->set_sv_netview_offsetfromdp(7243208);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wvalid.bind(*p_35_M03_AXI_wvalid);
        p_35_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7243264);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_wready.bind(*p_35_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_bid.bind(*p_35_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_bresp.bind(*p_35_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M03_AXI_buser.bind(*p_35_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bvalid.bind(*p_35_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_bready.bind(*p_35_M03_AXI_bready);
        p_35_M03_AXI_bready->set_sv_netview_offsetfromdp(7243600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_arid.bind(*p_35_M03_AXI_arid);
        p_35_M03_AXI_arid->set_sv_netview_offsetfromdp(7243656);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M03_AXI_araddr.bind(*p_35_M03_AXI_araddr);
        p_35_M03_AXI_araddr->set_sv_netview_offsetfromdp(7243712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M03_AXI_arlen.bind(*p_35_M03_AXI_arlen);
        p_35_M03_AXI_arlen->set_sv_netview_offsetfromdp(7243768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arsize.bind(*p_35_M03_AXI_arsize);
        p_35_M03_AXI_arsize->set_sv_netview_offsetfromdp(7243824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_arburst.bind(*p_35_M03_AXI_arburst);
        p_35_M03_AXI_arburst->set_sv_netview_offsetfromdp(7243880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_arlock.bind(*p_35_M03_AXI_arlock);
        p_35_M03_AXI_arlock->set_sv_netview_offsetfromdp(7243936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arcache.bind(*p_35_M03_AXI_arcache);
        p_35_M03_AXI_arcache->set_sv_netview_offsetfromdp(7243992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M03_AXI_arprot.bind(*p_35_M03_AXI_arprot);
        p_35_M03_AXI_arprot->set_sv_netview_offsetfromdp(7244048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M03_AXI_arqos.bind(*p_35_M03_AXI_arqos);
        p_35_M03_AXI_arqos->set_sv_netview_offsetfromdp(7244104);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M03_AXI_aruser.bind(*p_35_M03_AXI_aruser);
        p_35_M03_AXI_aruser->set_sv_netview_offsetfromdp(7244160);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arvalid.bind(*p_35_M03_AXI_arvalid);
        p_35_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7244216);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_arready.bind(*p_35_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M03_AXI_rid.bind(*p_35_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M03_AXI_rdata.bind(*p_35_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M03_AXI_rresp.bind(*p_35_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rlast.bind(*p_35_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M03_AXI_ruser.bind(*p_35_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rvalid.bind(*p_35_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M03_AXI_rready.bind(*p_35_M03_AXI_rready);
        p_35_M03_AXI_rready->set_sv_netview_offsetfromdp(7244664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_awid.bind(*p_35_M04_AXI_awid);
        p_35_M04_AXI_awid->set_sv_netview_offsetfromdp(7244720);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M04_AXI_awaddr.bind(*p_35_M04_AXI_awaddr);
        p_35_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7244776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_awlen.bind(*p_35_M04_AXI_awlen);
        p_35_M04_AXI_awlen->set_sv_netview_offsetfromdp(7244832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awsize.bind(*p_35_M04_AXI_awsize);
        p_35_M04_AXI_awsize->set_sv_netview_offsetfromdp(7244888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_awburst.bind(*p_35_M04_AXI_awburst);
        p_35_M04_AXI_awburst->set_sv_netview_offsetfromdp(7244944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_awlock.bind(*p_35_M04_AXI_awlock);
        p_35_M04_AXI_awlock->set_sv_netview_offsetfromdp(7245000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awcache.bind(*p_35_M04_AXI_awcache);
        p_35_M04_AXI_awcache->set_sv_netview_offsetfromdp(7245056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_awprot.bind(*p_35_M04_AXI_awprot);
        p_35_M04_AXI_awprot->set_sv_netview_offsetfromdp(7245112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_awqos.bind(*p_35_M04_AXI_awqos);
        p_35_M04_AXI_awqos->set_sv_netview_offsetfromdp(7245168);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M04_AXI_awuser.bind(*p_35_M04_AXI_awuser);
        p_35_M04_AXI_awuser->set_sv_netview_offsetfromdp(7245224);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awvalid.bind(*p_35_M04_AXI_awvalid);
        p_35_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7245280);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_awready.bind(*p_35_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M04_AXI_wdata.bind(*p_35_M04_AXI_wdata);
        p_35_M04_AXI_wdata->set_sv_netview_offsetfromdp(7245392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M04_AXI_wstrb.bind(*p_35_M04_AXI_wstrb);
        p_35_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7245448);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wlast.bind(*p_35_M04_AXI_wlast);
        p_35_M04_AXI_wlast->set_sv_netview_offsetfromdp(7245504);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M04_AXI_wuser.bind(*p_35_M04_AXI_wuser);
        p_35_M04_AXI_wuser->set_sv_netview_offsetfromdp(7245560);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wvalid.bind(*p_35_M04_AXI_wvalid);
        p_35_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7245616);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_wready.bind(*p_35_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_bid.bind(*p_35_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_bresp.bind(*p_35_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M04_AXI_buser.bind(*p_35_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bvalid.bind(*p_35_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_bready.bind(*p_35_M04_AXI_bready);
        p_35_M04_AXI_bready->set_sv_netview_offsetfromdp(7245952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_arid.bind(*p_35_M04_AXI_arid);
        p_35_M04_AXI_arid->set_sv_netview_offsetfromdp(7246008);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->M04_AXI_araddr.bind(*p_35_M04_AXI_araddr);
        p_35_M04_AXI_araddr->set_sv_netview_offsetfromdp(7246064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M04_AXI_arlen.bind(*p_35_M04_AXI_arlen);
        p_35_M04_AXI_arlen->set_sv_netview_offsetfromdp(7246120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arsize.bind(*p_35_M04_AXI_arsize);
        p_35_M04_AXI_arsize->set_sv_netview_offsetfromdp(7246176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_arburst.bind(*p_35_M04_AXI_arburst);
        p_35_M04_AXI_arburst->set_sv_netview_offsetfromdp(7246232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_arlock.bind(*p_35_M04_AXI_arlock);
        p_35_M04_AXI_arlock->set_sv_netview_offsetfromdp(7246288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arcache.bind(*p_35_M04_AXI_arcache);
        p_35_M04_AXI_arcache->set_sv_netview_offsetfromdp(7246344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M04_AXI_arprot.bind(*p_35_M04_AXI_arprot);
        p_35_M04_AXI_arprot->set_sv_netview_offsetfromdp(7246400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M04_AXI_arqos.bind(*p_35_M04_AXI_arqos);
        p_35_M04_AXI_arqos->set_sv_netview_offsetfromdp(7246456);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->M04_AXI_aruser.bind(*p_35_M04_AXI_aruser);
        p_35_M04_AXI_aruser->set_sv_netview_offsetfromdp(7246512);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arvalid.bind(*p_35_M04_AXI_arvalid);
        p_35_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7246568);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_arready.bind(*p_35_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M04_AXI_rid.bind(*p_35_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M04_AXI_rdata.bind(*p_35_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M04_AXI_rresp.bind(*p_35_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rlast.bind(*p_35_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->M04_AXI_ruser.bind(*p_35_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rvalid.bind(*p_35_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M04_AXI_rready.bind(*p_35_M04_AXI_rready);
        p_35_M04_AXI_rready->set_sv_netview_offsetfromdp(7247016);
        sc_inst_36 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_36->xsim_set_dbg_index(2168);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->s_axi_awaddr.bind(*p_36_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->s_axi_awlen.bind(*p_36_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_awsize.bind(*p_36_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_awburst.bind(*p_36_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->s_axi_awlock.bind(*p_36_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awcache.bind(*p_36_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_awprot.bind(*p_36_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awregion.bind(*p_36_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_awqos.bind(*p_36_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_36_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_awvalid.bind(*p_36_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_awready.bind(*p_36_s_axi_awready);
        p_36_s_axi_awready->set_sv_netview_offsetfromdp(7247792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->s_axi_wdata.bind(*p_36_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_wstrb.bind(*p_36_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_36_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wlast.bind(*p_36_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_36_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wvalid.bind(*p_36_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_wready.bind(*p_36_s_axi_wready);
        p_36_s_axi_wready->set_sv_netview_offsetfromdp(7248072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_bresp.bind(*p_36_s_axi_bresp);
        p_36_s_axi_bresp->set_sv_netview_offsetfromdp(7248128);
        xsim_sc_channel<0, bool > *p_36_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_bvalid.bind(*p_36_s_axi_bvalid);
        p_36_s_axi_bvalid->set_sv_netview_offsetfromdp(7248184);
        xsim_sc_channel<0, bool > *p_36_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_bready.bind(*p_36_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->s_axi_araddr.bind(*p_36_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->s_axi_arlen.bind(*p_36_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_arsize.bind(*p_36_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_arburst.bind(*p_36_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->s_axi_arlock.bind(*p_36_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arcache.bind(*p_36_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->s_axi_arprot.bind(*p_36_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arregion.bind(*p_36_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->s_axi_arqos.bind(*p_36_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_36_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_arvalid.bind(*p_36_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_36_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_arready.bind(*p_36_s_axi_arready);
        p_36_s_axi_arready->set_sv_netview_offsetfromdp(7248856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->s_axi_rdata.bind(*p_36_s_axi_rdata);
        p_36_s_axi_rdata->set_sv_netview_offsetfromdp(7248912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->s_axi_rresp.bind(*p_36_s_axi_rresp);
        p_36_s_axi_rresp->set_sv_netview_offsetfromdp(7248968);
        xsim_sc_channel<0, bool > *p_36_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rlast.bind(*p_36_s_axi_rlast);
        p_36_s_axi_rlast->set_sv_netview_offsetfromdp(7249024);
        xsim_sc_channel<0, bool > *p_36_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rvalid.bind(*p_36_s_axi_rvalid);
        p_36_s_axi_rvalid->set_sv_netview_offsetfromdp(7249080);
        xsim_sc_channel<0, bool > *p_36_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->s_axi_rready.bind(*p_36_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->m_axi_awaddr.bind(*p_36_m_axi_awaddr);
        p_36_m_axi_awaddr->set_sv_netview_offsetfromdp(7249192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->m_axi_awlen.bind(*p_36_m_axi_awlen);
        p_36_m_axi_awlen->set_sv_netview_offsetfromdp(7249248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_awsize.bind(*p_36_m_axi_awsize);
        p_36_m_axi_awsize->set_sv_netview_offsetfromdp(7249304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_awburst.bind(*p_36_m_axi_awburst);
        p_36_m_axi_awburst->set_sv_netview_offsetfromdp(7249360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->m_axi_awlock.bind(*p_36_m_axi_awlock);
        p_36_m_axi_awlock->set_sv_netview_offsetfromdp(7249416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awcache.bind(*p_36_m_axi_awcache);
        p_36_m_axi_awcache->set_sv_netview_offsetfromdp(7249472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_awprot.bind(*p_36_m_axi_awprot);
        p_36_m_axi_awprot->set_sv_netview_offsetfromdp(7249528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awregion.bind(*p_36_m_axi_awregion);
        p_36_m_axi_awregion->set_sv_netview_offsetfromdp(7249584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_awqos.bind(*p_36_m_axi_awqos);
        p_36_m_axi_awqos->set_sv_netview_offsetfromdp(7249640);
        xsim_sc_channel<0, bool > *p_36_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_awvalid.bind(*p_36_m_axi_awvalid);
        p_36_m_axi_awvalid->set_sv_netview_offsetfromdp(7249696);
        xsim_sc_channel<0, bool > *p_36_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_awready.bind(*p_36_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->m_axi_wdata.bind(*p_36_m_axi_wdata);
        p_36_m_axi_wdata->set_sv_netview_offsetfromdp(7249808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_wstrb.bind(*p_36_m_axi_wstrb);
        p_36_m_axi_wstrb->set_sv_netview_offsetfromdp(7249864);
        xsim_sc_channel<0, bool > *p_36_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wlast.bind(*p_36_m_axi_wlast);
        p_36_m_axi_wlast->set_sv_netview_offsetfromdp(7249920);
        xsim_sc_channel<0, bool > *p_36_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wvalid.bind(*p_36_m_axi_wvalid);
        p_36_m_axi_wvalid->set_sv_netview_offsetfromdp(7249976);
        xsim_sc_channel<0, bool > *p_36_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_wready.bind(*p_36_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_bresp.bind(*p_36_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_36_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_bvalid.bind(*p_36_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_36_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_bready.bind(*p_36_m_axi_bready);
        p_36_m_axi_bready->set_sv_netview_offsetfromdp(7250200);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->m_axi_araddr.bind(*p_36_m_axi_araddr);
        p_36_m_axi_araddr->set_sv_netview_offsetfromdp(7250256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->m_axi_arlen.bind(*p_36_m_axi_arlen);
        p_36_m_axi_arlen->set_sv_netview_offsetfromdp(7250312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_arsize.bind(*p_36_m_axi_arsize);
        p_36_m_axi_arsize->set_sv_netview_offsetfromdp(7250368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_arburst.bind(*p_36_m_axi_arburst);
        p_36_m_axi_arburst->set_sv_netview_offsetfromdp(7250424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->m_axi_arlock.bind(*p_36_m_axi_arlock);
        p_36_m_axi_arlock->set_sv_netview_offsetfromdp(7250480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arcache.bind(*p_36_m_axi_arcache);
        p_36_m_axi_arcache->set_sv_netview_offsetfromdp(7250536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->m_axi_arprot.bind(*p_36_m_axi_arprot);
        p_36_m_axi_arprot->set_sv_netview_offsetfromdp(7250592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arregion.bind(*p_36_m_axi_arregion);
        p_36_m_axi_arregion->set_sv_netview_offsetfromdp(7250648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->m_axi_arqos.bind(*p_36_m_axi_arqos);
        p_36_m_axi_arqos->set_sv_netview_offsetfromdp(7250704);
        xsim_sc_channel<0, bool > *p_36_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_arvalid.bind(*p_36_m_axi_arvalid);
        p_36_m_axi_arvalid->set_sv_netview_offsetfromdp(7250760);
        xsim_sc_channel<0, bool > *p_36_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_arready.bind(*p_36_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->m_axi_rdata.bind(*p_36_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->m_axi_rresp.bind(*p_36_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_36_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rlast.bind(*p_36_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_36_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rvalid.bind(*p_36_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_36_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->m_axi_rready.bind(*p_36_m_axi_rready);
        p_36_m_axi_rready->set_sv_netview_offsetfromdp(7251096);
        sc_inst_37 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_37->xsim_set_dbg_index(2364);
        xsim_sc_channel<0, bool > *p_37_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_aclk.bind(*p_37_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_37_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_aresetn.bind(*p_37_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->s_axi_awaddr.bind(*p_37_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_awlen.bind(*p_37_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awsize.bind(*p_37_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_awburst.bind(*p_37_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_37_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awlock.bind(*p_37_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awcache.bind(*p_37_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awprot.bind(*p_37_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_37_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awvalid.bind(*p_37_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awready.bind(*p_37_s_axi_awready);
        p_37_s_axi_awready->set_sv_netview_offsetfromdp(7351480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->s_axi_wdata.bind(*p_37_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->s_axi_wstrb.bind(*p_37_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_37_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wlast.bind(*p_37_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_37_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wvalid.bind(*p_37_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wready.bind(*p_37_s_axi_wready);
        p_37_s_axi_wready->set_sv_netview_offsetfromdp(7351760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_bresp.bind(*p_37_s_axi_bresp);
        p_37_s_axi_bresp->set_sv_netview_offsetfromdp(7351816);
        xsim_sc_channel<0, bool > *p_37_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bvalid.bind(*p_37_s_axi_bvalid);
        p_37_s_axi_bvalid->set_sv_netview_offsetfromdp(7351872);
        xsim_sc_channel<0, bool > *p_37_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bready.bind(*p_37_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->s_axi_araddr.bind(*p_37_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_arlen.bind(*p_37_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arsize.bind(*p_37_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_arburst.bind(*p_37_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_37_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arlock.bind(*p_37_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arcache.bind(*p_37_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arprot.bind(*p_37_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_37_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arvalid.bind(*p_37_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arready.bind(*p_37_s_axi_arready);
        p_37_s_axi_arready->set_sv_netview_offsetfromdp(7352432);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->s_axi_rdata.bind(*p_37_s_axi_rdata);
        p_37_s_axi_rdata->set_sv_netview_offsetfromdp(7352488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_rresp.bind(*p_37_s_axi_rresp);
        p_37_s_axi_rresp->set_sv_netview_offsetfromdp(7352544);
        xsim_sc_channel<0, bool > *p_37_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rlast.bind(*p_37_s_axi_rlast);
        p_37_s_axi_rlast->set_sv_netview_offsetfromdp(7352600);
        xsim_sc_channel<0, bool > *p_37_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rvalid.bind(*p_37_s_axi_rvalid);
        p_37_s_axi_rvalid->set_sv_netview_offsetfromdp(7352656);
        xsim_sc_channel<0, bool > *p_37_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rready.bind(*p_37_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_rready);
        xsim_sc_channel<0, bool > *p_37_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_rst_a.bind(*p_37_bram_rst_a);
        p_37_bram_rst_a->set_sv_netview_offsetfromdp(7352768);
        xsim_sc_channel<0, bool > *p_37_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_clk_a.bind(*p_37_bram_clk_a);
        p_37_bram_clk_a->set_sv_netview_offsetfromdp(7352824);
        xsim_sc_channel<0, bool > *p_37_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_en_a.bind(*p_37_bram_en_a);
        p_37_bram_en_a->set_sv_netview_offsetfromdp(7352880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->bram_we_a.bind(*p_37_bram_we_a);
        p_37_bram_we_a->set_sv_netview_offsetfromdp(7352936);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->bram_addr_a.bind(*p_37_bram_addr_a);
        p_37_bram_addr_a->set_sv_netview_offsetfromdp(7352992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->bram_wrdata_a.bind(*p_37_bram_wrdata_a);
        p_37_bram_wrdata_a->set_sv_netview_offsetfromdp(7353048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->bram_rddata_a.bind(*p_37_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_37_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_37_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_rst_b.bind(*p_37_bram_rst_b);
        p_37_bram_rst_b->set_sv_netview_offsetfromdp(7353160);
        xsim_sc_channel<0, bool > *p_37_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_clk_b.bind(*p_37_bram_clk_b);
        p_37_bram_clk_b->set_sv_netview_offsetfromdp(7353216);
        xsim_sc_channel<0, bool > *p_37_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_37->bram_en_b.bind(*p_37_bram_en_b);
        p_37_bram_en_b->set_sv_netview_offsetfromdp(7353272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->bram_we_b.bind(*p_37_bram_we_b);
        p_37_bram_we_b->set_sv_netview_offsetfromdp(7353328);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->bram_addr_b.bind(*p_37_bram_addr_b);
        p_37_bram_addr_b->set_sv_netview_offsetfromdp(7353384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->bram_wrdata_b.bind(*p_37_bram_wrdata_b);
        p_37_bram_wrdata_b->set_sv_netview_offsetfromdp(7353440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->bram_rddata_b.bind(*p_37_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_37_bram_rddata_b);
        sc_inst_38 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_38->xsim_set_dbg_index(2366);
        xsim_sc_channel<0, bool > *p_38_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_aclk.bind(*p_38_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_38_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_aresetn.bind(*p_38_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->s_axi_awaddr.bind(*p_38_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->s_axi_awlen.bind(*p_38_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awsize.bind(*p_38_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_awburst.bind(*p_38_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_38_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awlock.bind(*p_38_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awcache.bind(*p_38_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awprot.bind(*p_38_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_38_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awvalid.bind(*p_38_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awready.bind(*p_38_s_axi_awready);
        p_38_s_axi_awready->set_sv_netview_offsetfromdp(7415280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->s_axi_wdata.bind(*p_38_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->s_axi_wstrb.bind(*p_38_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_38_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wlast.bind(*p_38_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_38_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wvalid.bind(*p_38_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wready.bind(*p_38_s_axi_wready);
        p_38_s_axi_wready->set_sv_netview_offsetfromdp(7415560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_bresp.bind(*p_38_s_axi_bresp);
        p_38_s_axi_bresp->set_sv_netview_offsetfromdp(7415616);
        xsim_sc_channel<0, bool > *p_38_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bvalid.bind(*p_38_s_axi_bvalid);
        p_38_s_axi_bvalid->set_sv_netview_offsetfromdp(7415672);
        xsim_sc_channel<0, bool > *p_38_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bready.bind(*p_38_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->s_axi_araddr.bind(*p_38_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->s_axi_arlen.bind(*p_38_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arsize.bind(*p_38_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_arburst.bind(*p_38_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_38_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arlock.bind(*p_38_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arcache.bind(*p_38_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arprot.bind(*p_38_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_38_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arvalid.bind(*p_38_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arready.bind(*p_38_s_axi_arready);
        p_38_s_axi_arready->set_sv_netview_offsetfromdp(7416232);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->s_axi_rdata.bind(*p_38_s_axi_rdata);
        p_38_s_axi_rdata->set_sv_netview_offsetfromdp(7416288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_rresp.bind(*p_38_s_axi_rresp);
        p_38_s_axi_rresp->set_sv_netview_offsetfromdp(7416344);
        xsim_sc_channel<0, bool > *p_38_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rlast.bind(*p_38_s_axi_rlast);
        p_38_s_axi_rlast->set_sv_netview_offsetfromdp(7416400);
        xsim_sc_channel<0, bool > *p_38_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rvalid.bind(*p_38_s_axi_rvalid);
        p_38_s_axi_rvalid->set_sv_netview_offsetfromdp(7416456);
        xsim_sc_channel<0, bool > *p_38_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rready.bind(*p_38_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_rready);
        xsim_sc_channel<0, bool > *p_38_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_rst_a.bind(*p_38_bram_rst_a);
        p_38_bram_rst_a->set_sv_netview_offsetfromdp(7416568);
        xsim_sc_channel<0, bool > *p_38_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_clk_a.bind(*p_38_bram_clk_a);
        p_38_bram_clk_a->set_sv_netview_offsetfromdp(7416624);
        xsim_sc_channel<0, bool > *p_38_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_en_a.bind(*p_38_bram_en_a);
        p_38_bram_en_a->set_sv_netview_offsetfromdp(7416680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->bram_we_a.bind(*p_38_bram_we_a);
        p_38_bram_we_a->set_sv_netview_offsetfromdp(7416736);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->bram_addr_a.bind(*p_38_bram_addr_a);
        p_38_bram_addr_a->set_sv_netview_offsetfromdp(7416792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->bram_wrdata_a.bind(*p_38_bram_wrdata_a);
        p_38_bram_wrdata_a->set_sv_netview_offsetfromdp(7416848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->bram_rddata_a.bind(*p_38_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_38_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_38_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_rst_b.bind(*p_38_bram_rst_b);
        p_38_bram_rst_b->set_sv_netview_offsetfromdp(7416960);
        xsim_sc_channel<0, bool > *p_38_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_clk_b.bind(*p_38_bram_clk_b);
        p_38_bram_clk_b->set_sv_netview_offsetfromdp(7417016);
        xsim_sc_channel<0, bool > *p_38_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_38->bram_en_b.bind(*p_38_bram_en_b);
        p_38_bram_en_b->set_sv_netview_offsetfromdp(7417072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->bram_we_b.bind(*p_38_bram_we_b);
        p_38_bram_we_b->set_sv_netview_offsetfromdp(7417128);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->bram_addr_b.bind(*p_38_bram_addr_b);
        p_38_bram_addr_b->set_sv_netview_offsetfromdp(7417184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->bram_wrdata_b.bind(*p_38_bram_wrdata_b);
        p_38_bram_wrdata_b->set_sv_netview_offsetfromdp(7417240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->bram_rddata_b.bind(*p_38_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_38_bram_rddata_b);
        sc_inst_39 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_39->xsim_set_dbg_index(2368);
        xsim_sc_channel<0, bool > *p_39_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aclk.bind(*p_39_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_39_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aresetn.bind(*p_39_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->s_axi_awaddr.bind(*p_39_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_awlen.bind(*p_39_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awsize.bind(*p_39_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_awburst.bind(*p_39_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_39_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awlock.bind(*p_39_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_awcache.bind(*p_39_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awprot.bind(*p_39_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awvalid.bind(*p_39_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awready.bind(*p_39_s_axi_awready);
        p_39_s_axi_awready->set_sv_netview_offsetfromdp(7479080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->s_axi_wdata.bind(*p_39_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->s_axi_wstrb.bind(*p_39_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_39_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wlast.bind(*p_39_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_39_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wvalid.bind(*p_39_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wready.bind(*p_39_s_axi_wready);
        p_39_s_axi_wready->set_sv_netview_offsetfromdp(7479360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_bresp.bind(*p_39_s_axi_bresp);
        p_39_s_axi_bresp->set_sv_netview_offsetfromdp(7479416);
        xsim_sc_channel<0, bool > *p_39_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bvalid.bind(*p_39_s_axi_bvalid);
        p_39_s_axi_bvalid->set_sv_netview_offsetfromdp(7479472);
        xsim_sc_channel<0, bool > *p_39_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bready.bind(*p_39_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->s_axi_araddr.bind(*p_39_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->s_axi_arlen.bind(*p_39_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arsize.bind(*p_39_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_arburst.bind(*p_39_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_39_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arlock.bind(*p_39_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_arcache.bind(*p_39_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arprot.bind(*p_39_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arvalid.bind(*p_39_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arready.bind(*p_39_s_axi_arready);
        p_39_s_axi_arready->set_sv_netview_offsetfromdp(7480032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->s_axi_rdata.bind(*p_39_s_axi_rdata);
        p_39_s_axi_rdata->set_sv_netview_offsetfromdp(7480088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_rresp.bind(*p_39_s_axi_rresp);
        p_39_s_axi_rresp->set_sv_netview_offsetfromdp(7480144);
        xsim_sc_channel<0, bool > *p_39_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rlast.bind(*p_39_s_axi_rlast);
        p_39_s_axi_rlast->set_sv_netview_offsetfromdp(7480200);
        xsim_sc_channel<0, bool > *p_39_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rvalid.bind(*p_39_s_axi_rvalid);
        p_39_s_axi_rvalid->set_sv_netview_offsetfromdp(7480256);
        xsim_sc_channel<0, bool > *p_39_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rready.bind(*p_39_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_rready);
        xsim_sc_channel<0, bool > *p_39_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_rst_a.bind(*p_39_bram_rst_a);
        p_39_bram_rst_a->set_sv_netview_offsetfromdp(7480368);
        xsim_sc_channel<0, bool > *p_39_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_clk_a.bind(*p_39_bram_clk_a);
        p_39_bram_clk_a->set_sv_netview_offsetfromdp(7480424);
        xsim_sc_channel<0, bool > *p_39_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_en_a.bind(*p_39_bram_en_a);
        p_39_bram_en_a->set_sv_netview_offsetfromdp(7480480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->bram_we_a.bind(*p_39_bram_we_a);
        p_39_bram_we_a->set_sv_netview_offsetfromdp(7480536);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->bram_addr_a.bind(*p_39_bram_addr_a);
        p_39_bram_addr_a->set_sv_netview_offsetfromdp(7480592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_wrdata_a.bind(*p_39_bram_wrdata_a);
        p_39_bram_wrdata_a->set_sv_netview_offsetfromdp(7480648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_rddata_a.bind(*p_39_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_39_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_39_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_rst_b.bind(*p_39_bram_rst_b);
        p_39_bram_rst_b->set_sv_netview_offsetfromdp(7480760);
        xsim_sc_channel<0, bool > *p_39_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_clk_b.bind(*p_39_bram_clk_b);
        p_39_bram_clk_b->set_sv_netview_offsetfromdp(7480816);
        xsim_sc_channel<0, bool > *p_39_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_39->bram_en_b.bind(*p_39_bram_en_b);
        p_39_bram_en_b->set_sv_netview_offsetfromdp(7480872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->bram_we_b.bind(*p_39_bram_we_b);
        p_39_bram_we_b->set_sv_netview_offsetfromdp(7480928);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->bram_addr_b.bind(*p_39_bram_addr_b);
        p_39_bram_addr_b->set_sv_netview_offsetfromdp(7480984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_wrdata_b.bind(*p_39_bram_wrdata_b);
        p_39_bram_wrdata_b->set_sv_netview_offsetfromdp(7481040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->bram_rddata_b.bind(*p_39_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_39_bram_rddata_b);
        sc_inst_40 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_40->xsim_set_dbg_index(2370);
        xsim_sc_channel<0, bool > *p_40_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aclk.bind(*p_40_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_40_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_aresetn.bind(*p_40_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(7542880);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(7543160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(7543216);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(7543272);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_40_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(7543832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(7543888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(7543944);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(7544000);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(7544056);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<0, bool > *p_40_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_a.bind(*p_40_bram_rst_a);
        p_40_bram_rst_a->set_sv_netview_offsetfromdp(7544168);
        xsim_sc_channel<0, bool > *p_40_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_a.bind(*p_40_bram_clk_a);
        p_40_bram_clk_a->set_sv_netview_offsetfromdp(7544224);
        xsim_sc_channel<0, bool > *p_40_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_a.bind(*p_40_bram_en_a);
        p_40_bram_en_a->set_sv_netview_offsetfromdp(7544280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_a.bind(*p_40_bram_we_a);
        p_40_bram_we_a->set_sv_netview_offsetfromdp(7544336);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_a.bind(*p_40_bram_addr_a);
        p_40_bram_addr_a->set_sv_netview_offsetfromdp(7544392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_a.bind(*p_40_bram_wrdata_a);
        p_40_bram_wrdata_a->set_sv_netview_offsetfromdp(7544448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_a.bind(*p_40_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_40_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_rst_b.bind(*p_40_bram_rst_b);
        p_40_bram_rst_b->set_sv_netview_offsetfromdp(7544560);
        xsim_sc_channel<0, bool > *p_40_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_clk_b.bind(*p_40_bram_clk_b);
        p_40_bram_clk_b->set_sv_netview_offsetfromdp(7544616);
        xsim_sc_channel<0, bool > *p_40_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_40->bram_en_b.bind(*p_40_bram_en_b);
        p_40_bram_en_b->set_sv_netview_offsetfromdp(7544672);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->bram_we_b.bind(*p_40_bram_we_b);
        p_40_bram_we_b->set_sv_netview_offsetfromdp(7544728);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->bram_addr_b.bind(*p_40_bram_addr_b);
        p_40_bram_addr_b->set_sv_netview_offsetfromdp(7544784);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_wrdata_b.bind(*p_40_bram_wrdata_b);
        p_40_bram_wrdata_b->set_sv_netview_offsetfromdp(7544840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->bram_rddata_b.bind(*p_40_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_40_bram_rddata_b);
        sc_inst_41 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_41->xsim_set_dbg_index(51);
        sc_inst_42 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_42->xsim_set_dbg_index(52);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_awlen.bind(*p_42_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awburst.bind(*p_42_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_awlock.bind(*p_42_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awcache.bind(*p_42_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awqos.bind(*p_42_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(7705120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wlast.bind(*p_42_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(7705400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(7705456);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(7705512);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->s_axi_arlen.bind(*p_42_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arburst.bind(*p_42_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_arlock.bind(*p_42_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arcache.bind(*p_42_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arqos.bind(*p_42_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(7706072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(7706128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(7706184);
        xsim_sc_channel<0, bool > *p_42_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rlast.bind(*p_42_s_axi_rlast);
        p_42_s_axi_rlast->set_sv_netview_offsetfromdp(7706240);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(7706296);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(7706408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_awlen.bind(*p_42_m_axi_awlen);
        p_42_m_axi_awlen->set_sv_netview_offsetfromdp(7706464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awburst.bind(*p_42_m_axi_awburst);
        p_42_m_axi_awburst->set_sv_netview_offsetfromdp(7706520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->m_axi_awlock.bind(*p_42_m_axi_awlock);
        p_42_m_axi_awlock->set_sv_netview_offsetfromdp(7706576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awcache.bind(*p_42_m_axi_awcache);
        p_42_m_axi_awcache->set_sv_netview_offsetfromdp(7706632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(7706688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awqos.bind(*p_42_m_axi_awqos);
        p_42_m_axi_awqos->set_sv_netview_offsetfromdp(7706744);
        xsim_sc_channel<0, bool > *p_42_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(7706800);
        xsim_sc_channel<0, bool > *p_42_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(7706912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(7706968);
        xsim_sc_channel<0, bool > *p_42_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wlast.bind(*p_42_m_axi_wlast);
        p_42_m_axi_wlast->set_sv_netview_offsetfromdp(7707024);
        xsim_sc_channel<0, bool > *p_42_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(7707080);
        xsim_sc_channel<0, bool > *p_42_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(7707304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(7707360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_arlen.bind(*p_42_m_axi_arlen);
        p_42_m_axi_arlen->set_sv_netview_offsetfromdp(7707416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arburst.bind(*p_42_m_axi_arburst);
        p_42_m_axi_arburst->set_sv_netview_offsetfromdp(7707472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->m_axi_arlock.bind(*p_42_m_axi_arlock);
        p_42_m_axi_arlock->set_sv_netview_offsetfromdp(7707528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arcache.bind(*p_42_m_axi_arcache);
        p_42_m_axi_arcache->set_sv_netview_offsetfromdp(7707584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(7707640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arqos.bind(*p_42_m_axi_arqos);
        p_42_m_axi_arqos->set_sv_netview_offsetfromdp(7707696);
        xsim_sc_channel<0, bool > *p_42_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(7707752);
        xsim_sc_channel<0, bool > *p_42_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rlast.bind(*p_42_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_42_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(7708088);
        sc_inst_43 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_43->xsim_set_dbg_index(2663);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_awaddr.bind(*p_43_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awprot.bind(*p_43_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awvalid.bind(*p_43_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awready.bind(*p_43_s_axi_awready);
        p_43_s_axi_awready->set_sv_netview_offsetfromdp(7984624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->s_axi_wdata.bind(*p_43_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_wstrb.bind(*p_43_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wvalid.bind(*p_43_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wready.bind(*p_43_s_axi_wready);
        p_43_s_axi_wready->set_sv_netview_offsetfromdp(7984848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_bresp.bind(*p_43_s_axi_bresp);
        p_43_s_axi_bresp->set_sv_netview_offsetfromdp(7984904);
        xsim_sc_channel<0, bool > *p_43_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bvalid.bind(*p_43_s_axi_bvalid);
        p_43_s_axi_bvalid->set_sv_netview_offsetfromdp(7984960);
        xsim_sc_channel<0, bool > *p_43_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bready.bind(*p_43_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_araddr.bind(*p_43_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arprot.bind(*p_43_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arvalid.bind(*p_43_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arready.bind(*p_43_s_axi_arready);
        p_43_s_axi_arready->set_sv_netview_offsetfromdp(7985240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->s_axi_rdata.bind(*p_43_s_axi_rdata);
        p_43_s_axi_rdata->set_sv_netview_offsetfromdp(7985296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_rresp.bind(*p_43_s_axi_rresp);
        p_43_s_axi_rresp->set_sv_netview_offsetfromdp(7985352);
        xsim_sc_channel<0, bool > *p_43_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rvalid.bind(*p_43_s_axi_rvalid);
        p_43_s_axi_rvalid->set_sv_netview_offsetfromdp(7985408);
        xsim_sc_channel<0, bool > *p_43_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rready.bind(*p_43_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->m_axi_awaddr.bind(*p_43_m_axi_awaddr);
        p_43_m_axi_awaddr->set_sv_netview_offsetfromdp(7985520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->m_axi_awprot.bind(*p_43_m_axi_awprot);
        p_43_m_axi_awprot->set_sv_netview_offsetfromdp(7985576);
        xsim_sc_channel<0, bool > *p_43_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_awvalid.bind(*p_43_m_axi_awvalid);
        p_43_m_axi_awvalid->set_sv_netview_offsetfromdp(7985632);
        xsim_sc_channel<0, bool > *p_43_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_awready.bind(*p_43_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->m_axi_wdata.bind(*p_43_m_axi_wdata);
        p_43_m_axi_wdata->set_sv_netview_offsetfromdp(7985744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->m_axi_wstrb.bind(*p_43_m_axi_wstrb);
        p_43_m_axi_wstrb->set_sv_netview_offsetfromdp(7985800);
        xsim_sc_channel<0, bool > *p_43_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_wvalid.bind(*p_43_m_axi_wvalid);
        p_43_m_axi_wvalid->set_sv_netview_offsetfromdp(7985856);
        xsim_sc_channel<0, bool > *p_43_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_wready.bind(*p_43_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->m_axi_bresp.bind(*p_43_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_43_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_bvalid.bind(*p_43_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_43_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_bready.bind(*p_43_m_axi_bready);
        p_43_m_axi_bready->set_sv_netview_offsetfromdp(7986080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->m_axi_araddr.bind(*p_43_m_axi_araddr);
        p_43_m_axi_araddr->set_sv_netview_offsetfromdp(7986136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->m_axi_arprot.bind(*p_43_m_axi_arprot);
        p_43_m_axi_arprot->set_sv_netview_offsetfromdp(7986192);
        xsim_sc_channel<0, bool > *p_43_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_arvalid.bind(*p_43_m_axi_arvalid);
        p_43_m_axi_arvalid->set_sv_netview_offsetfromdp(7986248);
        xsim_sc_channel<0, bool > *p_43_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_arready.bind(*p_43_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->m_axi_rdata.bind(*p_43_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->m_axi_rresp.bind(*p_43_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_43_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_rvalid.bind(*p_43_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_43_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->m_axi_rready.bind(*p_43_m_axi_rready);
        p_43_m_axi_rready->set_sv_netview_offsetfromdp(7986528);
        sc_inst_44 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_44->xsim_set_dbg_index(2704);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_44_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(8023552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(8023776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(8023832);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(8023888);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_44_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(8024168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(8024224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(8024280);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(8024336);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aclk.bind(*p_44_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aresetn.bind(*p_44_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_44_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_44->m_axi_awaddr.bind(*p_44_m_axi_awaddr);
        p_44_m_axi_awaddr->set_sv_netview_offsetfromdp(8024560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_awprot.bind(*p_44_m_axi_awprot);
        p_44_m_axi_awprot->set_sv_netview_offsetfromdp(8024616);
        xsim_sc_channel<0, bool > *p_44_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awvalid.bind(*p_44_m_axi_awvalid);
        p_44_m_axi_awvalid->set_sv_netview_offsetfromdp(8024672);
        xsim_sc_channel<0, bool > *p_44_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awready.bind(*p_44_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_wdata.bind(*p_44_m_axi_wdata);
        p_44_m_axi_wdata->set_sv_netview_offsetfromdp(8024784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_wstrb.bind(*p_44_m_axi_wstrb);
        p_44_m_axi_wstrb->set_sv_netview_offsetfromdp(8024840);
        xsim_sc_channel<0, bool > *p_44_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wvalid.bind(*p_44_m_axi_wvalid);
        p_44_m_axi_wvalid->set_sv_netview_offsetfromdp(8024896);
        xsim_sc_channel<0, bool > *p_44_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wready.bind(*p_44_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_bresp.bind(*p_44_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bvalid.bind(*p_44_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bready.bind(*p_44_m_axi_bready);
        p_44_m_axi_bready->set_sv_netview_offsetfromdp(8025120);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_44_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_44->m_axi_araddr.bind(*p_44_m_axi_araddr);
        p_44_m_axi_araddr->set_sv_netview_offsetfromdp(8025176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_arprot.bind(*p_44_m_axi_arprot);
        p_44_m_axi_arprot->set_sv_netview_offsetfromdp(8025232);
        xsim_sc_channel<0, bool > *p_44_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arvalid.bind(*p_44_m_axi_arvalid);
        p_44_m_axi_arvalid->set_sv_netview_offsetfromdp(8025288);
        xsim_sc_channel<0, bool > *p_44_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arready.bind(*p_44_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_rdata.bind(*p_44_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_rresp.bind(*p_44_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rvalid.bind(*p_44_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rready.bind(*p_44_m_axi_rready);
        p_44_m_axi_rready->set_sv_netview_offsetfromdp(8025568);
        sc_inst_45 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_45->xsim_set_dbg_index(2705);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(8025952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_45_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(8026176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(8026232);
        xsim_sc_channel<0, bool > *p_45_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(8026288);
        xsim_sc_channel<0, bool > *p_45_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(8026568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(8026624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(8026680);
        xsim_sc_channel<0, bool > *p_45_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(8026736);
        xsim_sc_channel<0, bool > *p_45_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_awaddr.bind(*p_45_m_axi_awaddr);
        p_45_m_axi_awaddr->set_sv_netview_offsetfromdp(8026848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_awprot.bind(*p_45_m_axi_awprot);
        p_45_m_axi_awprot->set_sv_netview_offsetfromdp(8026904);
        xsim_sc_channel<0, bool > *p_45_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awvalid.bind(*p_45_m_axi_awvalid);
        p_45_m_axi_awvalid->set_sv_netview_offsetfromdp(8026960);
        xsim_sc_channel<0, bool > *p_45_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_awready.bind(*p_45_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_wdata.bind(*p_45_m_axi_wdata);
        p_45_m_axi_wdata->set_sv_netview_offsetfromdp(8027072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_wstrb.bind(*p_45_m_axi_wstrb);
        p_45_m_axi_wstrb->set_sv_netview_offsetfromdp(8027128);
        xsim_sc_channel<0, bool > *p_45_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wvalid.bind(*p_45_m_axi_wvalid);
        p_45_m_axi_wvalid->set_sv_netview_offsetfromdp(8027184);
        xsim_sc_channel<0, bool > *p_45_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_wready.bind(*p_45_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bresp.bind(*p_45_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bvalid.bind(*p_45_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_bready.bind(*p_45_m_axi_bready);
        p_45_m_axi_bready->set_sv_netview_offsetfromdp(8027408);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_araddr.bind(*p_45_m_axi_araddr);
        p_45_m_axi_araddr->set_sv_netview_offsetfromdp(8027464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->m_axi_arprot.bind(*p_45_m_axi_arprot);
        p_45_m_axi_arprot->set_sv_netview_offsetfromdp(8027520);
        xsim_sc_channel<0, bool > *p_45_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arvalid.bind(*p_45_m_axi_arvalid);
        p_45_m_axi_arvalid->set_sv_netview_offsetfromdp(8027576);
        xsim_sc_channel<0, bool > *p_45_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_arready.bind(*p_45_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->m_axi_rdata.bind(*p_45_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rresp.bind(*p_45_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_45_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rvalid.bind(*p_45_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_45_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->m_axi_rready.bind(*p_45_m_axi_rready);
        p_45_m_axi_rready->set_sv_netview_offsetfromdp(8027856);
        sc_inst_46 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_46->xsim_set_dbg_index(1339);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(8038416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(8038640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(8038696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(8038752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(8039032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(8039088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(8039144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(8039200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_46_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(8039312);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_46_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(8039368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(8039424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_46_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(8039536);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_46_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(8039592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(8039648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_46_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(8039872);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_46_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(8039928);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_46_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(8039984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(8040040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_46_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_46_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(8040320);
        sc_inst_47 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_47->xsim_set_dbg_index(59);
        xsim_sc_channel<0, bool > *p_47_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->aclk.bind(*p_47_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aclk);
        xsim_sc_channel<0, bool > *p_47_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->aresetn.bind(*p_47_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_awid.bind(*p_47_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->S00_AXI_awaddr.bind(*p_47_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->S00_AXI_awlen.bind(*p_47_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_awsize.bind(*p_47_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_awburst.bind(*p_47_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_awlock.bind(*p_47_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_awcache.bind(*p_47_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_awprot.bind(*p_47_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_awqos.bind(*p_47_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_awvalid.bind(*p_47_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_awready.bind(*p_47_S00_AXI_awready);
        p_47_S00_AXI_awready->set_sv_netview_offsetfromdp(8869416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->S00_AXI_wdata.bind(*p_47_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_wstrb.bind(*p_47_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wlast.bind(*p_47_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wvalid.bind(*p_47_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wready.bind(*p_47_S00_AXI_wready);
        p_47_S00_AXI_wready->set_sv_netview_offsetfromdp(8869696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_bid.bind(*p_47_S00_AXI_bid);
        p_47_S00_AXI_bid->set_sv_netview_offsetfromdp(8869752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_bresp.bind(*p_47_S00_AXI_bresp);
        p_47_S00_AXI_bresp->set_sv_netview_offsetfromdp(8869808);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_bvalid.bind(*p_47_S00_AXI_bvalid);
        p_47_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8869864);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_bready.bind(*p_47_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_arid.bind(*p_47_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->S00_AXI_araddr.bind(*p_47_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->S00_AXI_arlen.bind(*p_47_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_arsize.bind(*p_47_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_arburst.bind(*p_47_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_arlock.bind(*p_47_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_arcache.bind(*p_47_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_arprot.bind(*p_47_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_arqos.bind(*p_47_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_arvalid.bind(*p_47_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_arready.bind(*p_47_S00_AXI_arready);
        p_47_S00_AXI_arready->set_sv_netview_offsetfromdp(8870536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_rid.bind(*p_47_S00_AXI_rid);
        p_47_S00_AXI_rid->set_sv_netview_offsetfromdp(8870592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->S00_AXI_rdata.bind(*p_47_S00_AXI_rdata);
        p_47_S00_AXI_rdata->set_sv_netview_offsetfromdp(8870648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_rresp.bind(*p_47_S00_AXI_rresp);
        p_47_S00_AXI_rresp->set_sv_netview_offsetfromdp(8870704);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_rlast.bind(*p_47_S00_AXI_rlast);
        p_47_S00_AXI_rlast->set_sv_netview_offsetfromdp(8870760);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_rvalid.bind(*p_47_S00_AXI_rvalid);
        p_47_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8870816);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_rready.bind(*p_47_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_47_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_47->M00_AXI_awaddr.bind(*p_47_M00_AXI_awaddr);
        p_47_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8870928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M00_AXI_awlen.bind(*p_47_M00_AXI_awlen);
        p_47_M00_AXI_awlen->set_sv_netview_offsetfromdp(8870984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_awsize.bind(*p_47_M00_AXI_awsize);
        p_47_M00_AXI_awsize->set_sv_netview_offsetfromdp(8871040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_awburst.bind(*p_47_M00_AXI_awburst);
        p_47_M00_AXI_awburst->set_sv_netview_offsetfromdp(8871096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M00_AXI_awlock.bind(*p_47_M00_AXI_awlock);
        p_47_M00_AXI_awlock->set_sv_netview_offsetfromdp(8871152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_awcache.bind(*p_47_M00_AXI_awcache);
        p_47_M00_AXI_awcache->set_sv_netview_offsetfromdp(8871208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_awprot.bind(*p_47_M00_AXI_awprot);
        p_47_M00_AXI_awprot->set_sv_netview_offsetfromdp(8871264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_awqos.bind(*p_47_M00_AXI_awqos);
        p_47_M00_AXI_awqos->set_sv_netview_offsetfromdp(8871320);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_awvalid.bind(*p_47_M00_AXI_awvalid);
        p_47_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8871376);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_awready.bind(*p_47_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->M00_AXI_wdata.bind(*p_47_M00_AXI_wdata);
        p_47_M00_AXI_wdata->set_sv_netview_offsetfromdp(8871488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_wstrb.bind(*p_47_M00_AXI_wstrb);
        p_47_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8871544);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wlast.bind(*p_47_M00_AXI_wlast);
        p_47_M00_AXI_wlast->set_sv_netview_offsetfromdp(8871600);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wvalid.bind(*p_47_M00_AXI_wvalid);
        p_47_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8871656);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wready.bind(*p_47_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_bresp.bind(*p_47_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_bvalid.bind(*p_47_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_bready.bind(*p_47_M00_AXI_bready);
        p_47_M00_AXI_bready->set_sv_netview_offsetfromdp(8871880);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_47_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_47->M00_AXI_araddr.bind(*p_47_M00_AXI_araddr);
        p_47_M00_AXI_araddr->set_sv_netview_offsetfromdp(8871936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M00_AXI_arlen.bind(*p_47_M00_AXI_arlen);
        p_47_M00_AXI_arlen->set_sv_netview_offsetfromdp(8871992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_arsize.bind(*p_47_M00_AXI_arsize);
        p_47_M00_AXI_arsize->set_sv_netview_offsetfromdp(8872048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_arburst.bind(*p_47_M00_AXI_arburst);
        p_47_M00_AXI_arburst->set_sv_netview_offsetfromdp(8872104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M00_AXI_arlock.bind(*p_47_M00_AXI_arlock);
        p_47_M00_AXI_arlock->set_sv_netview_offsetfromdp(8872160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_arcache.bind(*p_47_M00_AXI_arcache);
        p_47_M00_AXI_arcache->set_sv_netview_offsetfromdp(8872216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_arprot.bind(*p_47_M00_AXI_arprot);
        p_47_M00_AXI_arprot->set_sv_netview_offsetfromdp(8872272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_arqos.bind(*p_47_M00_AXI_arqos);
        p_47_M00_AXI_arqos->set_sv_netview_offsetfromdp(8872328);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_arvalid.bind(*p_47_M00_AXI_arvalid);
        p_47_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8872384);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_arready.bind(*p_47_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->M00_AXI_rdata.bind(*p_47_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_rresp.bind(*p_47_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_rlast.bind(*p_47_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_rvalid.bind(*p_47_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_rready.bind(*p_47_M00_AXI_rready);
        p_47_M00_AXI_rready->set_sv_netview_offsetfromdp(8872720);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_47_M01_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_47->M01_AXI_awaddr.bind(*p_47_M01_AXI_awaddr);
        p_47_M01_AXI_awaddr->set_sv_netview_offsetfromdp(8872776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M01_AXI_awlen.bind(*p_47_M01_AXI_awlen);
        p_47_M01_AXI_awlen->set_sv_netview_offsetfromdp(8872832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M01_AXI_awsize.bind(*p_47_M01_AXI_awsize);
        p_47_M01_AXI_awsize->set_sv_netview_offsetfromdp(8872888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M01_AXI_awburst.bind(*p_47_M01_AXI_awburst);
        p_47_M01_AXI_awburst->set_sv_netview_offsetfromdp(8872944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M01_AXI_awlock.bind(*p_47_M01_AXI_awlock);
        p_47_M01_AXI_awlock->set_sv_netview_offsetfromdp(8873000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M01_AXI_awcache.bind(*p_47_M01_AXI_awcache);
        p_47_M01_AXI_awcache->set_sv_netview_offsetfromdp(8873056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M01_AXI_awprot.bind(*p_47_M01_AXI_awprot);
        p_47_M01_AXI_awprot->set_sv_netview_offsetfromdp(8873112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M01_AXI_awqos.bind(*p_47_M01_AXI_awqos);
        p_47_M01_AXI_awqos->set_sv_netview_offsetfromdp(8873168);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_awvalid.bind(*p_47_M01_AXI_awvalid);
        p_47_M01_AXI_awvalid->set_sv_netview_offsetfromdp(8873224);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_awready.bind(*p_47_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->M01_AXI_wdata.bind(*p_47_M01_AXI_wdata);
        p_47_M01_AXI_wdata->set_sv_netview_offsetfromdp(8873336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->M01_AXI_wstrb.bind(*p_47_M01_AXI_wstrb);
        p_47_M01_AXI_wstrb->set_sv_netview_offsetfromdp(8873392);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_wlast.bind(*p_47_M01_AXI_wlast);
        p_47_M01_AXI_wlast->set_sv_netview_offsetfromdp(8873448);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_wvalid.bind(*p_47_M01_AXI_wvalid);
        p_47_M01_AXI_wvalid->set_sv_netview_offsetfromdp(8873504);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_wready.bind(*p_47_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M01_AXI_bresp.bind(*p_47_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_bvalid.bind(*p_47_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_bready.bind(*p_47_M01_AXI_bready);
        p_47_M01_AXI_bready->set_sv_netview_offsetfromdp(8873728);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_47_M01_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_47->M01_AXI_araddr.bind(*p_47_M01_AXI_araddr);
        p_47_M01_AXI_araddr->set_sv_netview_offsetfromdp(8873784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M01_AXI_arlen.bind(*p_47_M01_AXI_arlen);
        p_47_M01_AXI_arlen->set_sv_netview_offsetfromdp(8873840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M01_AXI_arsize.bind(*p_47_M01_AXI_arsize);
        p_47_M01_AXI_arsize->set_sv_netview_offsetfromdp(8873896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M01_AXI_arburst.bind(*p_47_M01_AXI_arburst);
        p_47_M01_AXI_arburst->set_sv_netview_offsetfromdp(8873952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M01_AXI_arlock.bind(*p_47_M01_AXI_arlock);
        p_47_M01_AXI_arlock->set_sv_netview_offsetfromdp(8874008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M01_AXI_arcache.bind(*p_47_M01_AXI_arcache);
        p_47_M01_AXI_arcache->set_sv_netview_offsetfromdp(8874064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M01_AXI_arprot.bind(*p_47_M01_AXI_arprot);
        p_47_M01_AXI_arprot->set_sv_netview_offsetfromdp(8874120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M01_AXI_arqos.bind(*p_47_M01_AXI_arqos);
        p_47_M01_AXI_arqos->set_sv_netview_offsetfromdp(8874176);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_arvalid.bind(*p_47_M01_AXI_arvalid);
        p_47_M01_AXI_arvalid->set_sv_netview_offsetfromdp(8874232);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_arready.bind(*p_47_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->M01_AXI_rdata.bind(*p_47_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M01_AXI_rresp.bind(*p_47_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_rlast.bind(*p_47_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_rvalid.bind(*p_47_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_47_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M01_AXI_rready.bind(*p_47_M01_AXI_rready);
        p_47_M01_AXI_rready->set_sv_netview_offsetfromdp(8874568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_M02_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->M02_AXI_awaddr.bind(*p_47_M02_AXI_awaddr);
        p_47_M02_AXI_awaddr->set_sv_netview_offsetfromdp(8874624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M02_AXI_awlen.bind(*p_47_M02_AXI_awlen);
        p_47_M02_AXI_awlen->set_sv_netview_offsetfromdp(8874680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M02_AXI_awsize.bind(*p_47_M02_AXI_awsize);
        p_47_M02_AXI_awsize->set_sv_netview_offsetfromdp(8874736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M02_AXI_awburst.bind(*p_47_M02_AXI_awburst);
        p_47_M02_AXI_awburst->set_sv_netview_offsetfromdp(8874792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M02_AXI_awlock.bind(*p_47_M02_AXI_awlock);
        p_47_M02_AXI_awlock->set_sv_netview_offsetfromdp(8874848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M02_AXI_awcache.bind(*p_47_M02_AXI_awcache);
        p_47_M02_AXI_awcache->set_sv_netview_offsetfromdp(8874904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M02_AXI_awprot.bind(*p_47_M02_AXI_awprot);
        p_47_M02_AXI_awprot->set_sv_netview_offsetfromdp(8874960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M02_AXI_awqos.bind(*p_47_M02_AXI_awqos);
        p_47_M02_AXI_awqos->set_sv_netview_offsetfromdp(8875016);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_awvalid.bind(*p_47_M02_AXI_awvalid);
        p_47_M02_AXI_awvalid->set_sv_netview_offsetfromdp(8875072);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_awready.bind(*p_47_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_M02_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->M02_AXI_wdata.bind(*p_47_M02_AXI_wdata);
        p_47_M02_AXI_wdata->set_sv_netview_offsetfromdp(8875184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M02_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M02_AXI_wstrb.bind(*p_47_M02_AXI_wstrb);
        p_47_M02_AXI_wstrb->set_sv_netview_offsetfromdp(8875240);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_wlast.bind(*p_47_M02_AXI_wlast);
        p_47_M02_AXI_wlast->set_sv_netview_offsetfromdp(8875296);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_wvalid.bind(*p_47_M02_AXI_wvalid);
        p_47_M02_AXI_wvalid->set_sv_netview_offsetfromdp(8875352);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_wready.bind(*p_47_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M02_AXI_bresp.bind(*p_47_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_bvalid.bind(*p_47_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_bready.bind(*p_47_M02_AXI_bready);
        p_47_M02_AXI_bready->set_sv_netview_offsetfromdp(8875576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_M02_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->M02_AXI_araddr.bind(*p_47_M02_AXI_araddr);
        p_47_M02_AXI_araddr->set_sv_netview_offsetfromdp(8875632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->M02_AXI_arlen.bind(*p_47_M02_AXI_arlen);
        p_47_M02_AXI_arlen->set_sv_netview_offsetfromdp(8875688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M02_AXI_arsize.bind(*p_47_M02_AXI_arsize);
        p_47_M02_AXI_arsize->set_sv_netview_offsetfromdp(8875744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M02_AXI_arburst.bind(*p_47_M02_AXI_arburst);
        p_47_M02_AXI_arburst->set_sv_netview_offsetfromdp(8875800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->M02_AXI_arlock.bind(*p_47_M02_AXI_arlock);
        p_47_M02_AXI_arlock->set_sv_netview_offsetfromdp(8875856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M02_AXI_arcache.bind(*p_47_M02_AXI_arcache);
        p_47_M02_AXI_arcache->set_sv_netview_offsetfromdp(8875912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M02_AXI_arprot.bind(*p_47_M02_AXI_arprot);
        p_47_M02_AXI_arprot->set_sv_netview_offsetfromdp(8875968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M02_AXI_arqos.bind(*p_47_M02_AXI_arqos);
        p_47_M02_AXI_arqos->set_sv_netview_offsetfromdp(8876024);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_arvalid.bind(*p_47_M02_AXI_arvalid);
        p_47_M02_AXI_arvalid->set_sv_netview_offsetfromdp(8876080);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_arready.bind(*p_47_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_M02_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->M02_AXI_rdata.bind(*p_47_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M02_AXI_rresp.bind(*p_47_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_rlast.bind(*p_47_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_rvalid.bind(*p_47_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_47_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M02_AXI_rready.bind(*p_47_M02_AXI_rready);
        p_47_M02_AXI_rready->set_sv_netview_offsetfromdp(8876416);
        sc_inst_48 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_48->xsim_set_dbg_index(36);
        sc_inst_49 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_49->xsim_set_dbg_index(187);
        xsim_sc_channel<0, bool > *p_49_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->aclk.bind(*p_49_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aclk);
        xsim_sc_channel<0, bool > *p_49_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->aresetn.bind(*p_49_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_awlen.bind(*p_49_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_awburst.bind(*p_49_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->s_axi_awlock.bind(*p_49_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_awcache.bind(*p_49_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_awqos.bind(*p_49_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_awuser.bind(*p_49_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(9051360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wlast.bind(*p_49_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(9051640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(9051696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->s_axi_buser.bind(*p_49_s_axi_buser);
        p_49_s_axi_buser->set_sv_netview_offsetfromdp(9051752);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(9051808);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_arlen.bind(*p_49_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_arburst.bind(*p_49_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->s_axi_arlock.bind(*p_49_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_arcache.bind(*p_49_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_arqos.bind(*p_49_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_aruser.bind(*p_49_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(9052424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(9052480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(9052536);
        xsim_sc_channel<0, bool > *p_49_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rlast.bind(*p_49_s_axi_rlast);
        p_49_s_axi_rlast->set_sv_netview_offsetfromdp(9052592);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(9052648);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_awaddr.bind(*p_49_m_axi_awaddr);
        p_49_m_axi_awaddr->set_sv_netview_offsetfromdp(9052760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->m_axi_awlen.bind(*p_49_m_axi_awlen);
        p_49_m_axi_awlen->set_sv_netview_offsetfromdp(9052816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_awburst.bind(*p_49_m_axi_awburst);
        p_49_m_axi_awburst->set_sv_netview_offsetfromdp(9052872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->m_axi_awlock.bind(*p_49_m_axi_awlock);
        p_49_m_axi_awlock->set_sv_netview_offsetfromdp(9052928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_awcache.bind(*p_49_m_axi_awcache);
        p_49_m_axi_awcache->set_sv_netview_offsetfromdp(9052984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_awprot.bind(*p_49_m_axi_awprot);
        p_49_m_axi_awprot->set_sv_netview_offsetfromdp(9053040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_awqos.bind(*p_49_m_axi_awqos);
        p_49_m_axi_awqos->set_sv_netview_offsetfromdp(9053096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_awuser.bind(*p_49_m_axi_awuser);
        p_49_m_axi_awuser->set_sv_netview_offsetfromdp(9053152);
        xsim_sc_channel<0, bool > *p_49_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awvalid.bind(*p_49_m_axi_awvalid);
        p_49_m_axi_awvalid->set_sv_netview_offsetfromdp(9053208);
        xsim_sc_channel<0, bool > *p_49_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_awready.bind(*p_49_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_wdata.bind(*p_49_m_axi_wdata);
        p_49_m_axi_wdata->set_sv_netview_offsetfromdp(9053320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_wstrb.bind(*p_49_m_axi_wstrb);
        p_49_m_axi_wstrb->set_sv_netview_offsetfromdp(9053376);
        xsim_sc_channel<0, bool > *p_49_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wlast.bind(*p_49_m_axi_wlast);
        p_49_m_axi_wlast->set_sv_netview_offsetfromdp(9053432);
        xsim_sc_channel<0, bool > *p_49_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wvalid.bind(*p_49_m_axi_wvalid);
        p_49_m_axi_wvalid->set_sv_netview_offsetfromdp(9053488);
        xsim_sc_channel<0, bool > *p_49_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_wready.bind(*p_49_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_bresp.bind(*p_49_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->m_axi_buser.bind(*p_49_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_buser);
        xsim_sc_channel<0, bool > *p_49_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bvalid.bind(*p_49_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_bready.bind(*p_49_m_axi_bready);
        p_49_m_axi_bready->set_sv_netview_offsetfromdp(9053768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_araddr.bind(*p_49_m_axi_araddr);
        p_49_m_axi_araddr->set_sv_netview_offsetfromdp(9053824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->m_axi_arlen.bind(*p_49_m_axi_arlen);
        p_49_m_axi_arlen->set_sv_netview_offsetfromdp(9053880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_arburst.bind(*p_49_m_axi_arburst);
        p_49_m_axi_arburst->set_sv_netview_offsetfromdp(9053936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->m_axi_arlock.bind(*p_49_m_axi_arlock);
        p_49_m_axi_arlock->set_sv_netview_offsetfromdp(9053992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_arcache.bind(*p_49_m_axi_arcache);
        p_49_m_axi_arcache->set_sv_netview_offsetfromdp(9054048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->m_axi_arprot.bind(*p_49_m_axi_arprot);
        p_49_m_axi_arprot->set_sv_netview_offsetfromdp(9054104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->m_axi_arqos.bind(*p_49_m_axi_arqos);
        p_49_m_axi_arqos->set_sv_netview_offsetfromdp(9054160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_aruser.bind(*p_49_m_axi_aruser);
        p_49_m_axi_aruser->set_sv_netview_offsetfromdp(9054216);
        xsim_sc_channel<0, bool > *p_49_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arvalid.bind(*p_49_m_axi_arvalid);
        p_49_m_axi_arvalid->set_sv_netview_offsetfromdp(9054272);
        xsim_sc_channel<0, bool > *p_49_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_arready.bind(*p_49_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->m_axi_rdata.bind(*p_49_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->m_axi_rresp.bind(*p_49_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_49_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rlast.bind(*p_49_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_49_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rvalid.bind(*p_49_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_49_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->m_axi_rready.bind(*p_49_m_axi_rready);
        p_49_m_axi_rready->set_sv_netview_offsetfromdp(9054608);
        sc_inst_50 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_50->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_50_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->aclk.bind(*p_50_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aclk);
        xsim_sc_channel<0, bool > *p_50_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->aresetn.bind(*p_50_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_50_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(9154584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(9154808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(9154864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(9154920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_50_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(9155200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(9155256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(9155312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(9155368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_50_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(9155480);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_50_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(9155536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(9155592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_50_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(9155704);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_50_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(9155760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(9155816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(9156040);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_50_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(9156096);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_50_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(9156152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(9156208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_50_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_50_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(9156488);
        sc_inst_51 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_51->xsim_set_dbg_index(191);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_51_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_51->interrupt_cu.bind(*p_51_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_51_interrupt_cu);
        xsim_sc_channel<0, bool > *p_51_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_51->interrupt_m2m.bind(*p_51_interrupt_m2m);
        p_51_interrupt_m2m->set_sv_netview_offsetfromdp(9158376);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_aresetn.bind(*p_51_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_aresetn.bind(*p_51_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_aresetn.bind(*p_51_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_51_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_data_m2m_aresetn.bind(*p_51_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_aclk.bind(*p_51_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_aclk.bind(*p_51_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_aclk.bind(*p_51_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_51_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_data_m2m_aclk.bind(*p_51_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_data_p2p_awaddr.bind(*p_51_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_data_p2p_awlen.bind(*p_51_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_data_p2p_awsize.bind(*p_51_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_data_p2p_awburst.bind(*p_51_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_awlock.bind(*p_51_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_awcache.bind(*p_51_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_data_p2p_awprot.bind(*p_51_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_awregion.bind(*p_51_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_awqos.bind(*p_51_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_data_p2p_awuser.bind(*p_51_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_awvalid.bind(*p_51_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_awready.bind(*p_51_s_axi_data_p2p_awready);
        p_51_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(9159496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_data_p2p_wdata.bind(*p_51_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_wstrb.bind(*p_51_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_wlast.bind(*p_51_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_wvalid.bind(*p_51_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_wready.bind(*p_51_s_axi_data_p2p_wready);
        p_51_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(9159776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_data_p2p_bresp.bind(*p_51_s_axi_data_p2p_bresp);
        p_51_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(9159832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_data_p2p_buser.bind(*p_51_s_axi_data_p2p_buser);
        p_51_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(9159888);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_bvalid.bind(*p_51_s_axi_data_p2p_bvalid);
        p_51_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(9159944);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_bready.bind(*p_51_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_data_p2p_araddr.bind(*p_51_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_data_p2p_arlen.bind(*p_51_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_data_p2p_arsize.bind(*p_51_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_data_p2p_arburst.bind(*p_51_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_arlock.bind(*p_51_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_arcache.bind(*p_51_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_data_p2p_arprot.bind(*p_51_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_arregion.bind(*p_51_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_data_p2p_arqos.bind(*p_51_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_data_p2p_aruser.bind(*p_51_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_arvalid.bind(*p_51_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_arready.bind(*p_51_s_axi_data_p2p_arready);
        p_51_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(9160672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_data_p2p_rdata.bind(*p_51_s_axi_data_p2p_rdata);
        p_51_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(9160728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_data_p2p_rresp.bind(*p_51_s_axi_data_p2p_rresp);
        p_51_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(9160784);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_rlast.bind(*p_51_s_axi_data_p2p_rlast);
        p_51_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(9160840);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_rvalid.bind(*p_51_s_axi_data_p2p_rvalid);
        p_51_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(9160896);
        xsim_sc_channel<0, bool > *p_51_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_data_p2p_rready.bind(*p_51_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->maxi_lite_mb_awaddr.bind(*p_51_maxi_lite_mb_awaddr);
        p_51_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(9161008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->maxi_lite_mb_awprot.bind(*p_51_maxi_lite_mb_awprot);
        p_51_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(9161064);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_awvalid.bind(*p_51_maxi_lite_mb_awvalid);
        p_51_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(9161120);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_awready.bind(*p_51_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->maxi_lite_mb_wdata.bind(*p_51_maxi_lite_mb_wdata);
        p_51_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(9161232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->maxi_lite_mb_wstrb.bind(*p_51_maxi_lite_mb_wstrb);
        p_51_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(9161288);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_wvalid.bind(*p_51_maxi_lite_mb_wvalid);
        p_51_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(9161344);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_wready.bind(*p_51_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->maxi_lite_mb_bresp.bind(*p_51_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_bvalid.bind(*p_51_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_bready.bind(*p_51_maxi_lite_mb_bready);
        p_51_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(9161568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->maxi_lite_mb_araddr.bind(*p_51_maxi_lite_mb_araddr);
        p_51_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(9161624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->maxi_lite_mb_arprot.bind(*p_51_maxi_lite_mb_arprot);
        p_51_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(9161680);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_arvalid.bind(*p_51_maxi_lite_mb_arvalid);
        p_51_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(9161736);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_arready.bind(*p_51_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->maxi_lite_mb_rdata.bind(*p_51_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->maxi_lite_mb_rresp.bind(*p_51_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_rvalid.bind(*p_51_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_51_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->maxi_lite_mb_rready.bind(*p_51_maxi_lite_mb_rready);
        p_51_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(9162016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_ctrl_user_awaddr.bind(*p_51_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_ctrl_user_awprot.bind(*p_51_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_awvalid.bind(*p_51_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_awready.bind(*p_51_s_axi_ctrl_user_awready);
        p_51_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(9162240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_ctrl_user_wdata.bind(*p_51_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_ctrl_user_wstrb.bind(*p_51_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_wvalid.bind(*p_51_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_wready.bind(*p_51_s_axi_ctrl_user_wready);
        p_51_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(9162464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_ctrl_user_bresp.bind(*p_51_s_axi_ctrl_user_bresp);
        p_51_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(9162520);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_bvalid.bind(*p_51_s_axi_ctrl_user_bvalid);
        p_51_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(9162576);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_bready.bind(*p_51_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_ctrl_user_araddr.bind(*p_51_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_ctrl_user_arprot.bind(*p_51_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_arvalid.bind(*p_51_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_arready.bind(*p_51_s_axi_ctrl_user_arready);
        p_51_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(9162856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_ctrl_user_rdata.bind(*p_51_s_axi_ctrl_user_rdata);
        p_51_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(9162912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_ctrl_user_rresp.bind(*p_51_s_axi_ctrl_user_rresp);
        p_51_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(9162968);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_rvalid.bind(*p_51_s_axi_ctrl_user_rvalid);
        p_51_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(9163024);
        xsim_sc_channel<0, bool > *p_51_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_ctrl_user_rready.bind(*p_51_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_ctrl_user_rready);
        sc_inst_52 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_52->xsim_set_dbg_index(192);
        xsim_sc_channel<0, bool > *p_52_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_aclk.bind(*p_52_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_52_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_aresetn.bind(*p_52_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_52_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_aximm_aclk.bind(*p_52_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_52_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_aximm_aresetn.bind(*p_52_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_52_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_AWVALID.bind(*p_52_m_aximm_AWVALID);
        p_52_m_aximm_AWVALID->set_sv_netview_offsetfromdp(9163408);
        xsim_sc_channel<0, bool > *p_52_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_AWREADY.bind(*p_52_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->m_aximm_AWADDR.bind(*p_52_m_aximm_AWADDR);
        p_52_m_aximm_AWADDR->set_sv_netview_offsetfromdp(9163520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_AWID.bind(*p_52_m_aximm_AWID);
        p_52_m_aximm_AWID->set_sv_netview_offsetfromdp(9163576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->m_aximm_AWLEN.bind(*p_52_m_aximm_AWLEN);
        p_52_m_aximm_AWLEN->set_sv_netview_offsetfromdp(9163632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_aximm_AWSIZE.bind(*p_52_m_aximm_AWSIZE);
        p_52_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(9163688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_aximm_AWBURST.bind(*p_52_m_aximm_AWBURST);
        p_52_m_aximm_AWBURST->set_sv_netview_offsetfromdp(9163744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_AWLOCK.bind(*p_52_m_aximm_AWLOCK);
        p_52_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(9163800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_AWCACHE.bind(*p_52_m_aximm_AWCACHE);
        p_52_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(9163856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_aximm_AWPROT.bind(*p_52_m_aximm_AWPROT);
        p_52_m_aximm_AWPROT->set_sv_netview_offsetfromdp(9163912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_AWREGION.bind(*p_52_m_aximm_AWREGION);
        p_52_m_aximm_AWREGION->set_sv_netview_offsetfromdp(9163968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_AWQOS.bind(*p_52_m_aximm_AWQOS);
        p_52_m_aximm_AWQOS->set_sv_netview_offsetfromdp(9164024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_AWUSER.bind(*p_52_m_aximm_AWUSER);
        p_52_m_aximm_AWUSER->set_sv_netview_offsetfromdp(9164080);
        xsim_sc_channel<0, bool > *p_52_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_WVALID.bind(*p_52_m_aximm_WVALID);
        p_52_m_aximm_WVALID->set_sv_netview_offsetfromdp(9164136);
        xsim_sc_channel<0, bool > *p_52_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_WREADY.bind(*p_52_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_aximm_WDATA.bind(*p_52_m_aximm_WDATA);
        p_52_m_aximm_WDATA->set_sv_netview_offsetfromdp(9164248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_WSTRB.bind(*p_52_m_aximm_WSTRB);
        p_52_m_aximm_WSTRB->set_sv_netview_offsetfromdp(9164304);
        xsim_sc_channel<0, bool > *p_52_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_WLAST.bind(*p_52_m_aximm_WLAST);
        p_52_m_aximm_WLAST->set_sv_netview_offsetfromdp(9164360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_WUSER.bind(*p_52_m_aximm_WUSER);
        p_52_m_aximm_WUSER->set_sv_netview_offsetfromdp(9164416);
        xsim_sc_channel<0, bool > *p_52_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_ARVALID.bind(*p_52_m_aximm_ARVALID);
        p_52_m_aximm_ARVALID->set_sv_netview_offsetfromdp(9164472);
        xsim_sc_channel<0, bool > *p_52_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_ARREADY.bind(*p_52_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->m_aximm_ARADDR.bind(*p_52_m_aximm_ARADDR);
        p_52_m_aximm_ARADDR->set_sv_netview_offsetfromdp(9164584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_ARID.bind(*p_52_m_aximm_ARID);
        p_52_m_aximm_ARID->set_sv_netview_offsetfromdp(9164640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->m_aximm_ARLEN.bind(*p_52_m_aximm_ARLEN);
        p_52_m_aximm_ARLEN->set_sv_netview_offsetfromdp(9164696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_aximm_ARSIZE.bind(*p_52_m_aximm_ARSIZE);
        p_52_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(9164752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_aximm_ARBURST.bind(*p_52_m_aximm_ARBURST);
        p_52_m_aximm_ARBURST->set_sv_netview_offsetfromdp(9164808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_ARLOCK.bind(*p_52_m_aximm_ARLOCK);
        p_52_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(9164864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_ARCACHE.bind(*p_52_m_aximm_ARCACHE);
        p_52_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(9164920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_aximm_ARPROT.bind(*p_52_m_aximm_ARPROT);
        p_52_m_aximm_ARPROT->set_sv_netview_offsetfromdp(9164976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_ARREGION.bind(*p_52_m_aximm_ARREGION);
        p_52_m_aximm_ARREGION->set_sv_netview_offsetfromdp(9165032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_aximm_ARQOS.bind(*p_52_m_aximm_ARQOS);
        p_52_m_aximm_ARQOS->set_sv_netview_offsetfromdp(9165088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_ARUSER.bind(*p_52_m_aximm_ARUSER);
        p_52_m_aximm_ARUSER->set_sv_netview_offsetfromdp(9165144);
        xsim_sc_channel<0, bool > *p_52_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_RVALID.bind(*p_52_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_52_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_RREADY.bind(*p_52_m_aximm_RREADY);
        p_52_m_aximm_RREADY->set_sv_netview_offsetfromdp(9165256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_aximm_RDATA.bind(*p_52_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_52_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_RLAST.bind(*p_52_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_RID.bind(*p_52_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_aximm_RRESP.bind(*p_52_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_RUSER.bind(*p_52_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_52_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_BVALID.bind(*p_52_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_52_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_aximm_BREADY.bind(*p_52_m_aximm_BREADY);
        p_52_m_aximm_BREADY->set_sv_netview_offsetfromdp(9165648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_aximm_BRESP.bind(*p_52_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_BID.bind(*p_52_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->m_aximm_BUSER.bind(*p_52_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_awlen.bind(*p_52_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awsize.bind(*p_52_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awburst.bind(*p_52_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->s_axi_awlock.bind(*p_52_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awcache.bind(*p_52_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awregion.bind(*p_52_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awqos.bind(*p_52_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_awuser.bind(*p_52_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(9166488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wlast.bind(*p_52_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(9166768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(9166824);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(9166880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->s_axi_buser.bind(*p_52_s_axi_buser);
        p_52_s_axi_buser->set_sv_netview_offsetfromdp(9166936);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_arlen.bind(*p_52_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arsize.bind(*p_52_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arburst.bind(*p_52_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_52_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_52->s_axi_arlock.bind(*p_52_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arcache.bind(*p_52_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arregion.bind(*p_52_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arqos.bind(*p_52_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_aruser.bind(*p_52_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(9167664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(9167720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(9167776);
        xsim_sc_channel<0, bool > *p_52_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rlast.bind(*p_52_s_axi_rlast);
        p_52_s_axi_rlast->set_sv_netview_offsetfromdp(9167832);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(9167888);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        sc_inst_53 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_53->xsim_set_dbg_index(193);
        xsim_sc_channel<0, bool > *p_53_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_aclk.bind(*p_53_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_53_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_aresetn.bind(*p_53_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_aclk.bind(*p_53_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_aresetn.bind(*p_53_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_53_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_aximm_aclk.bind(*p_53_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_53_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_aximm_aresetn.bind(*p_53_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axictrl_awaddr.bind(*p_53_m_axictrl_awaddr);
        p_53_m_axictrl_awaddr->set_sv_netview_offsetfromdp(9168384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axictrl_awprot.bind(*p_53_m_axictrl_awprot);
        p_53_m_axictrl_awprot->set_sv_netview_offsetfromdp(9168440);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_awvalid.bind(*p_53_m_axictrl_awvalid);
        p_53_m_axictrl_awvalid->set_sv_netview_offsetfromdp(9168496);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_awready.bind(*p_53_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axictrl_wdata.bind(*p_53_m_axictrl_wdata);
        p_53_m_axictrl_wdata->set_sv_netview_offsetfromdp(9168608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axictrl_wstrb.bind(*p_53_m_axictrl_wstrb);
        p_53_m_axictrl_wstrb->set_sv_netview_offsetfromdp(9168664);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_wvalid.bind(*p_53_m_axictrl_wvalid);
        p_53_m_axictrl_wvalid->set_sv_netview_offsetfromdp(9168720);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_wready.bind(*p_53_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_bvalid.bind(*p_53_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_bready.bind(*p_53_m_axictrl_bready);
        p_53_m_axictrl_bready->set_sv_netview_offsetfromdp(9168888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axictrl_bresp.bind(*p_53_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axictrl_araddr.bind(*p_53_m_axictrl_araddr);
        p_53_m_axictrl_araddr->set_sv_netview_offsetfromdp(9169000);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_arvalid.bind(*p_53_m_axictrl_arvalid);
        p_53_m_axictrl_arvalid->set_sv_netview_offsetfromdp(9169056);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_arready.bind(*p_53_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axictrl_arprot.bind(*p_53_m_axictrl_arprot);
        p_53_m_axictrl_arprot->set_sv_netview_offsetfromdp(9169168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axictrl_rdata.bind(*p_53_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axictrl_rresp.bind(*p_53_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_rvalid.bind(*p_53_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axictrl_rready.bind(*p_53_m_axictrl_rready);
        p_53_m_axictrl_rready->set_sv_netview_offsetfromdp(9169392);
        xsim_sc_channel<0, bool > *p_53_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_AWVALID.bind(*p_53_m_aximm_AWVALID);
        p_53_m_aximm_AWVALID->set_sv_netview_offsetfromdp(9169448);
        xsim_sc_channel<0, bool > *p_53_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_AWREADY.bind(*p_53_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_aximm_AWADDR.bind(*p_53_m_aximm_AWADDR);
        p_53_m_aximm_AWADDR->set_sv_netview_offsetfromdp(9169560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_AWID.bind(*p_53_m_aximm_AWID);
        p_53_m_aximm_AWID->set_sv_netview_offsetfromdp(9169616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_aximm_AWLEN.bind(*p_53_m_aximm_AWLEN);
        p_53_m_aximm_AWLEN->set_sv_netview_offsetfromdp(9169672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_aximm_AWSIZE.bind(*p_53_m_aximm_AWSIZE);
        p_53_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(9169728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_aximm_AWBURST.bind(*p_53_m_aximm_AWBURST);
        p_53_m_aximm_AWBURST->set_sv_netview_offsetfromdp(9169784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_AWLOCK.bind(*p_53_m_aximm_AWLOCK);
        p_53_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(9169840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_AWCACHE.bind(*p_53_m_aximm_AWCACHE);
        p_53_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(9169896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_aximm_AWPROT.bind(*p_53_m_aximm_AWPROT);
        p_53_m_aximm_AWPROT->set_sv_netview_offsetfromdp(9169952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_AWREGION.bind(*p_53_m_aximm_AWREGION);
        p_53_m_aximm_AWREGION->set_sv_netview_offsetfromdp(9170008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_AWQOS.bind(*p_53_m_aximm_AWQOS);
        p_53_m_aximm_AWQOS->set_sv_netview_offsetfromdp(9170064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_AWUSER.bind(*p_53_m_aximm_AWUSER);
        p_53_m_aximm_AWUSER->set_sv_netview_offsetfromdp(9170120);
        xsim_sc_channel<0, bool > *p_53_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_WVALID.bind(*p_53_m_aximm_WVALID);
        p_53_m_aximm_WVALID->set_sv_netview_offsetfromdp(9170176);
        xsim_sc_channel<0, bool > *p_53_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_WREADY.bind(*p_53_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_WDATA.bind(*p_53_m_aximm_WDATA);
        p_53_m_aximm_WDATA->set_sv_netview_offsetfromdp(9170288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_WSTRB.bind(*p_53_m_aximm_WSTRB);
        p_53_m_aximm_WSTRB->set_sv_netview_offsetfromdp(9170344);
        xsim_sc_channel<0, bool > *p_53_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_WLAST.bind(*p_53_m_aximm_WLAST);
        p_53_m_aximm_WLAST->set_sv_netview_offsetfromdp(9170400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_WUSER.bind(*p_53_m_aximm_WUSER);
        p_53_m_aximm_WUSER->set_sv_netview_offsetfromdp(9170456);
        xsim_sc_channel<0, bool > *p_53_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_ARVALID.bind(*p_53_m_aximm_ARVALID);
        p_53_m_aximm_ARVALID->set_sv_netview_offsetfromdp(9170512);
        xsim_sc_channel<0, bool > *p_53_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_ARREADY.bind(*p_53_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_aximm_ARADDR.bind(*p_53_m_aximm_ARADDR);
        p_53_m_aximm_ARADDR->set_sv_netview_offsetfromdp(9170624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_ARID.bind(*p_53_m_aximm_ARID);
        p_53_m_aximm_ARID->set_sv_netview_offsetfromdp(9170680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_aximm_ARLEN.bind(*p_53_m_aximm_ARLEN);
        p_53_m_aximm_ARLEN->set_sv_netview_offsetfromdp(9170736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_aximm_ARSIZE.bind(*p_53_m_aximm_ARSIZE);
        p_53_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(9170792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_aximm_ARBURST.bind(*p_53_m_aximm_ARBURST);
        p_53_m_aximm_ARBURST->set_sv_netview_offsetfromdp(9170848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_ARLOCK.bind(*p_53_m_aximm_ARLOCK);
        p_53_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(9170904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_ARCACHE.bind(*p_53_m_aximm_ARCACHE);
        p_53_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(9170960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_aximm_ARPROT.bind(*p_53_m_aximm_ARPROT);
        p_53_m_aximm_ARPROT->set_sv_netview_offsetfromdp(9171016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_ARREGION.bind(*p_53_m_aximm_ARREGION);
        p_53_m_aximm_ARREGION->set_sv_netview_offsetfromdp(9171072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_aximm_ARQOS.bind(*p_53_m_aximm_ARQOS);
        p_53_m_aximm_ARQOS->set_sv_netview_offsetfromdp(9171128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_ARUSER.bind(*p_53_m_aximm_ARUSER);
        p_53_m_aximm_ARUSER->set_sv_netview_offsetfromdp(9171184);
        xsim_sc_channel<0, bool > *p_53_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_RVALID.bind(*p_53_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_53_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_RREADY.bind(*p_53_m_aximm_RREADY);
        p_53_m_aximm_RREADY->set_sv_netview_offsetfromdp(9171296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_RDATA.bind(*p_53_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_53_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_RLAST.bind(*p_53_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_RID.bind(*p_53_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_aximm_RRESP.bind(*p_53_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_aximm_RUSER.bind(*p_53_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_53_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_BVALID.bind(*p_53_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_53_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_aximm_BREADY.bind(*p_53_m_aximm_BREADY);
        p_53_m_aximm_BREADY->set_sv_netview_offsetfromdp(9171688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_aximm_BRESP.bind(*p_53_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_BID.bind(*p_53_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_aximm_BUSER.bind(*p_53_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awsize.bind(*p_53_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awregion.bind(*p_53_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awqos.bind(*p_53_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(9172472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(9172752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(9172808);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(9172864);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arsize.bind(*p_53_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arregion.bind(*p_53_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arqos.bind(*p_53_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(9173536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(9173592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(9173648);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(9173704);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(9173760);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_53_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_53->usr_irq_req.bind(*p_53_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_53_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_53_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_53->usr_irq_ack.bind(*p_53_usr_irq_ack);
        p_53_usr_irq_ack->set_sv_netview_offsetfromdp(9173928);
        sc_inst_54 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_54->xsim_set_dbg_index(194);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_awid.bind(*p_54_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->S00_AXI_awaddr.bind(*p_54_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->S00_AXI_awlen.bind(*p_54_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->S00_AXI_awsize.bind(*p_54_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->S00_AXI_awburst.bind(*p_54_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_awlock.bind(*p_54_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->S00_AXI_awcache.bind(*p_54_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->S00_AXI_awprot.bind(*p_54_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->S00_AXI_awqos.bind(*p_54_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_awuser.bind(*p_54_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_awvalid.bind(*p_54_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_awready.bind(*p_54_S00_AXI_awready);
        p_54_S00_AXI_awready->set_sv_netview_offsetfromdp(9174760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_wdata.bind(*p_54_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->S00_AXI_wstrb.bind(*p_54_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_wlast.bind(*p_54_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_wuser.bind(*p_54_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_wvalid.bind(*p_54_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_wready.bind(*p_54_S00_AXI_wready);
        p_54_S00_AXI_wready->set_sv_netview_offsetfromdp(9175096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_bid.bind(*p_54_S00_AXI_bid);
        p_54_S00_AXI_bid->set_sv_netview_offsetfromdp(9175152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->S00_AXI_bresp.bind(*p_54_S00_AXI_bresp);
        p_54_S00_AXI_bresp->set_sv_netview_offsetfromdp(9175208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_buser.bind(*p_54_S00_AXI_buser);
        p_54_S00_AXI_buser->set_sv_netview_offsetfromdp(9175264);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_bvalid.bind(*p_54_S00_AXI_bvalid);
        p_54_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9175320);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_bready.bind(*p_54_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_arid.bind(*p_54_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->S00_AXI_araddr.bind(*p_54_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->S00_AXI_arlen.bind(*p_54_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->S00_AXI_arsize.bind(*p_54_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->S00_AXI_arburst.bind(*p_54_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_arlock.bind(*p_54_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->S00_AXI_arcache.bind(*p_54_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->S00_AXI_arprot.bind(*p_54_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->S00_AXI_arqos.bind(*p_54_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_aruser.bind(*p_54_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_arvalid.bind(*p_54_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_arready.bind(*p_54_S00_AXI_arready);
        p_54_S00_AXI_arready->set_sv_netview_offsetfromdp(9176048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->S00_AXI_rid.bind(*p_54_S00_AXI_rid);
        p_54_S00_AXI_rid->set_sv_netview_offsetfromdp(9176104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_rdata.bind(*p_54_S00_AXI_rdata);
        p_54_S00_AXI_rdata->set_sv_netview_offsetfromdp(9176160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->S00_AXI_rresp.bind(*p_54_S00_AXI_rresp);
        p_54_S00_AXI_rresp->set_sv_netview_offsetfromdp(9176216);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_rlast.bind(*p_54_S00_AXI_rlast);
        p_54_S00_AXI_rlast->set_sv_netview_offsetfromdp(9176272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->S00_AXI_ruser.bind(*p_54_S00_AXI_ruser);
        p_54_S00_AXI_ruser->set_sv_netview_offsetfromdp(9176328);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_rvalid.bind(*p_54_S00_AXI_rvalid);
        p_54_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9176384);
        xsim_sc_channel<0, bool > *p_54_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->S00_AXI_rready.bind(*p_54_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_awaddr.bind(*p_54_M00_AXI_awaddr);
        p_54_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9176496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->M00_AXI_awlen.bind(*p_54_M00_AXI_awlen);
        p_54_M00_AXI_awlen->set_sv_netview_offsetfromdp(9176552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M00_AXI_awsize.bind(*p_54_M00_AXI_awsize);
        p_54_M00_AXI_awsize->set_sv_netview_offsetfromdp(9176608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M00_AXI_awburst.bind(*p_54_M00_AXI_awburst);
        p_54_M00_AXI_awburst->set_sv_netview_offsetfromdp(9176664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M00_AXI_awlock.bind(*p_54_M00_AXI_awlock);
        p_54_M00_AXI_awlock->set_sv_netview_offsetfromdp(9176720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M00_AXI_awcache.bind(*p_54_M00_AXI_awcache);
        p_54_M00_AXI_awcache->set_sv_netview_offsetfromdp(9176776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M00_AXI_awprot.bind(*p_54_M00_AXI_awprot);
        p_54_M00_AXI_awprot->set_sv_netview_offsetfromdp(9176832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M00_AXI_awqos.bind(*p_54_M00_AXI_awqos);
        p_54_M00_AXI_awqos->set_sv_netview_offsetfromdp(9176888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_awuser.bind(*p_54_M00_AXI_awuser);
        p_54_M00_AXI_awuser->set_sv_netview_offsetfromdp(9176944);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_awvalid.bind(*p_54_M00_AXI_awvalid);
        p_54_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9177000);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_awready.bind(*p_54_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_wdata.bind(*p_54_M00_AXI_wdata);
        p_54_M00_AXI_wdata->set_sv_netview_offsetfromdp(9177112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M00_AXI_wstrb.bind(*p_54_M00_AXI_wstrb);
        p_54_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9177168);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_wlast.bind(*p_54_M00_AXI_wlast);
        p_54_M00_AXI_wlast->set_sv_netview_offsetfromdp(9177224);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_wvalid.bind(*p_54_M00_AXI_wvalid);
        p_54_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9177280);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_wready.bind(*p_54_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M00_AXI_bresp.bind(*p_54_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M00_AXI_buser.bind(*p_54_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_bvalid.bind(*p_54_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_bready.bind(*p_54_M00_AXI_bready);
        p_54_M00_AXI_bready->set_sv_netview_offsetfromdp(9177560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_araddr.bind(*p_54_M00_AXI_araddr);
        p_54_M00_AXI_araddr->set_sv_netview_offsetfromdp(9177616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->M00_AXI_arlen.bind(*p_54_M00_AXI_arlen);
        p_54_M00_AXI_arlen->set_sv_netview_offsetfromdp(9177672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M00_AXI_arsize.bind(*p_54_M00_AXI_arsize);
        p_54_M00_AXI_arsize->set_sv_netview_offsetfromdp(9177728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M00_AXI_arburst.bind(*p_54_M00_AXI_arburst);
        p_54_M00_AXI_arburst->set_sv_netview_offsetfromdp(9177784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M00_AXI_arlock.bind(*p_54_M00_AXI_arlock);
        p_54_M00_AXI_arlock->set_sv_netview_offsetfromdp(9177840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M00_AXI_arcache.bind(*p_54_M00_AXI_arcache);
        p_54_M00_AXI_arcache->set_sv_netview_offsetfromdp(9177896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M00_AXI_arprot.bind(*p_54_M00_AXI_arprot);
        p_54_M00_AXI_arprot->set_sv_netview_offsetfromdp(9177952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M00_AXI_arqos.bind(*p_54_M00_AXI_arqos);
        p_54_M00_AXI_arqos->set_sv_netview_offsetfromdp(9178008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_aruser.bind(*p_54_M00_AXI_aruser);
        p_54_M00_AXI_aruser->set_sv_netview_offsetfromdp(9178064);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_arvalid.bind(*p_54_M00_AXI_arvalid);
        p_54_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9178120);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_arready.bind(*p_54_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M00_AXI_rdata.bind(*p_54_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M00_AXI_rresp.bind(*p_54_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_rlast.bind(*p_54_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_rvalid.bind(*p_54_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_54_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M00_AXI_rready.bind(*p_54_M00_AXI_rready);
        p_54_M00_AXI_rready->set_sv_netview_offsetfromdp(9178456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->M01_AXI_awaddr.bind(*p_54_M01_AXI_awaddr);
        p_54_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9178512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->M01_AXI_awlen.bind(*p_54_M01_AXI_awlen);
        p_54_M01_AXI_awlen->set_sv_netview_offsetfromdp(9178568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M01_AXI_awsize.bind(*p_54_M01_AXI_awsize);
        p_54_M01_AXI_awsize->set_sv_netview_offsetfromdp(9178624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M01_AXI_awburst.bind(*p_54_M01_AXI_awburst);
        p_54_M01_AXI_awburst->set_sv_netview_offsetfromdp(9178680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M01_AXI_awlock.bind(*p_54_M01_AXI_awlock);
        p_54_M01_AXI_awlock->set_sv_netview_offsetfromdp(9178736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M01_AXI_awcache.bind(*p_54_M01_AXI_awcache);
        p_54_M01_AXI_awcache->set_sv_netview_offsetfromdp(9178792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M01_AXI_awprot.bind(*p_54_M01_AXI_awprot);
        p_54_M01_AXI_awprot->set_sv_netview_offsetfromdp(9178848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M01_AXI_awqos.bind(*p_54_M01_AXI_awqos);
        p_54_M01_AXI_awqos->set_sv_netview_offsetfromdp(9178904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M01_AXI_awuser.bind(*p_54_M01_AXI_awuser);
        p_54_M01_AXI_awuser->set_sv_netview_offsetfromdp(9178960);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_awvalid.bind(*p_54_M01_AXI_awvalid);
        p_54_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9179016);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_awready.bind(*p_54_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M01_AXI_wdata.bind(*p_54_M01_AXI_wdata);
        p_54_M01_AXI_wdata->set_sv_netview_offsetfromdp(9179128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M01_AXI_wstrb.bind(*p_54_M01_AXI_wstrb);
        p_54_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9179184);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_wlast.bind(*p_54_M01_AXI_wlast);
        p_54_M01_AXI_wlast->set_sv_netview_offsetfromdp(9179240);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_wvalid.bind(*p_54_M01_AXI_wvalid);
        p_54_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9179296);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_wready.bind(*p_54_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M01_AXI_bresp.bind(*p_54_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M01_AXI_buser.bind(*p_54_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_bvalid.bind(*p_54_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_bready.bind(*p_54_M01_AXI_bready);
        p_54_M01_AXI_bready->set_sv_netview_offsetfromdp(9179576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->M01_AXI_araddr.bind(*p_54_M01_AXI_araddr);
        p_54_M01_AXI_araddr->set_sv_netview_offsetfromdp(9179632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->M01_AXI_arlen.bind(*p_54_M01_AXI_arlen);
        p_54_M01_AXI_arlen->set_sv_netview_offsetfromdp(9179688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M01_AXI_arsize.bind(*p_54_M01_AXI_arsize);
        p_54_M01_AXI_arsize->set_sv_netview_offsetfromdp(9179744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M01_AXI_arburst.bind(*p_54_M01_AXI_arburst);
        p_54_M01_AXI_arburst->set_sv_netview_offsetfromdp(9179800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->M01_AXI_arlock.bind(*p_54_M01_AXI_arlock);
        p_54_M01_AXI_arlock->set_sv_netview_offsetfromdp(9179856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M01_AXI_arcache.bind(*p_54_M01_AXI_arcache);
        p_54_M01_AXI_arcache->set_sv_netview_offsetfromdp(9179912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->M01_AXI_arprot.bind(*p_54_M01_AXI_arprot);
        p_54_M01_AXI_arprot->set_sv_netview_offsetfromdp(9179968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->M01_AXI_arqos.bind(*p_54_M01_AXI_arqos);
        p_54_M01_AXI_arqos->set_sv_netview_offsetfromdp(9180024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M01_AXI_aruser.bind(*p_54_M01_AXI_aruser);
        p_54_M01_AXI_aruser->set_sv_netview_offsetfromdp(9180080);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_arvalid.bind(*p_54_M01_AXI_arvalid);
        p_54_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9180136);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_arready.bind(*p_54_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->M01_AXI_rdata.bind(*p_54_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->M01_AXI_rresp.bind(*p_54_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_rlast.bind(*p_54_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_rvalid.bind(*p_54_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_54_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->M01_AXI_rready.bind(*p_54_M01_AXI_rready);
        p_54_M01_AXI_rready->set_sv_netview_offsetfromdp(9180472);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
    }
